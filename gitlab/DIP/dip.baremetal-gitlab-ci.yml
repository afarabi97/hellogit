---
Setup Hardware Controller:
  stage: build
  tags:
    - tfplenum-buildv2
  script: |
    echo "Setup Baremetal Controller"
    echo "IP of runner is $(hostname -I)"
    echo "Current working directory is $(pwd)"
    python3 testing/pipeline/baremetal_pipeline.py \
    setup-baremetal-controller \
    --esxi-ipaddress "$ESXI_IPADDRESS" \
    --esxi-username "$ESXI_USERNAME" \
    --esxi-password "$ESXI_PASSWORD" \
    --access-token  "$ACCESS_TOKEN" \
    --project-id    "$CI_PROJECT_ID" \
    --node-password "$DEFAULT_TEMPLATE_PASSWORD" \
    --vm-datastore "$ESXI_DATASTORE" \
    --release-path "$RELEASE_PATH" \
    --release-ova "$RELEASE_OVA" \
    --template-path "$TEMPLATE_PATH" \
    --template "$TEMPLATE_OVA" \
    --gateway "$CONTROLLER_GATEWAY" \
    --ipaddress "$CONTROLLER_IPADDRESS" \
    --dns-servers $DNS_SERVERS \
    --repo-username "$REPO_USERNAME" \
    --repo-password "$REPO_PASSWORD" \
    --repo-url "$REPO_URL" \
    --branch-name "$CI_COMMIT_REF_NAME" \
    --domain "$KIT_DOMAIN" \
    --redfish-user "$REDFISH_USER" \
    --redfish-password "$REDFISH_PASSWORD" \
    --monitoring-interface "$MONITORING_INTERFACE" \
    --management-password "$MANAGEMENT_PASSWORD" \
    --mp-external-ip "$MP_EXTERNAL_IP" \
    --pfsense-ip "$PFSENSE_IP" \
    --switch-ip "$SWITCH_IP" \
    --monitoring-interface "$MONITORING_INTERFACE" \
    --run-remote-node "$RUN_REMOTE_NODE" \
    --build-from-release "$BUILD_FROM_RELEASE"
  artifacts:
    untracked: true
  only:
    variables:
      - $PIPELINE == "hw-developer-all"
      - $PIPELINE == "hw-developer-mip"
      - $PIPELINE == "hw-controller-only"

Hardware Kit Settings:
  stage: kit-settings
  tags:
    - tfplenum-buildv2
  script: |
    echo "IP of runner is $(hostname -I | cut -d " " -f1)"
    echo "Current working directory is $(pwd)"
    echo "VM_PREFIX is $VM_PREFIX"
    python3 testing/pipeline/baremetal_pipeline.py \
    run-kit-settings \
    --vcenter-ipaddress "$ESXI_IPADDRESS" \
    --vcenter-username "$ESXI_USERNAME" \
    --vcenter-password "$ESXI_PASSWORD" \
    --vcenter-datastore "$ESXI_DATASTORE" \
    --vcenter-portgroup "$ESXI_PORTGROUP" \
    --upstream-dns "$UPSTREAM_DNS" \
    --upstream-ntp "$UPSTREAM_NTP" \
    --gateway "$CONTROLLER_GATEWAY" \
    --network-id "$NETWORK_ID" \
    --network-block-index $NETWORK_BLOCK_INDEX \
    --domain "$KIT_DOMAIN" \
    --kit-password "$DEFAULT_VM_PASSWORD" \
    --operator-type "$OPERATOR_TYPE"
  artifacts:
    untracked: true
  only:
    variables:
      - $PIPELINE == "hw-developer-all"
      - $PIPELINE == "hw-developer-mip"

Hardware Control Plane:
  stage: control-plane
  tags:
    - tfplenum-buildv2
  script: |
    echo "IP of runner is $(hostname -I | cut -d " " -f1)"
    echo "Current working directory is $(pwd)"
    echo "VM_PREFIX is $VM_PREFIX"
    python3 testing/pipeline/baremetal_pipeline.py setup-control-plane
  only:
    variables:
      - $PIPELINE == "hw-developer-all"

Hardware Server Setup:
  stage: server-setup
  tags:
    - tfplenum-buildv2
  script: |
    echo "IP of runner is $(hostname -I | cut -d " " -f1)"
    echo "Current working directory is $(pwd)"
    echo "VM_PREFIX is $VM_PREFIX"
    python3 testing/pipeline/baremetal_pipeline.py \
    add-node \
    --dns-servers $DNS_SERVERS \
    --node-type Server \
    --deployment-type "Baremetal" \
    --redfish-password "$REDFISH_PASSWORD" \
    --redfish-user "$REDFISH_USER" \
    --start-index 1 \
    --pxe-type "$PXE_TYPE" \
    --idrac-ip-addresses $SERVER_OOB
  artifacts:
    untracked: true
  only:
    variables:
      - $PIPELINE == "hw-developer-all"

Hardware Kit Deploy:
  stage: deploy-kit
  tags:
    - tfplenum-buildv2
  script: |
    python3 testing/pipeline/baremetal_pipeline.py deploy-kit
  only:
    variables:
      - $PIPELINE == "hw-developer-all"

Hardware Sensor Setup:
  stage: node-setup
  tags:
    - tfplenum-buildv2
  script: |
    echo "IP of runner is $(hostname -I | cut -d " " -f1)"
    echo "Current working directory is $(pwd)"
    echo "VM_PREFIX is $VM_PREFIX"
    python3 testing/pipeline/baremetal_pipeline.py  \
    add-node \
    --dns-servers $DNS_SERVERS \
    --node-type Sensor \
    --deployment-type "Baremetal" \
    --redfish-password "$REDFISH_PASSWORD" \
    --redfish-user "$REDFISH_USER" \
    --start-index 1 \
    --pxe-type "$PXE_TYPE" \
    --idrac-ip-addresses $SENSOR_OOB \
    --monitoring-interface $MONITORING_INTERFACE
  artifacts:
    untracked: true
  only:
    variables:
      - $PIPELINE == "hw-developer-all"

Hardware MIP Setup:
  stage: node-setup
  tags:
    - tfplenum-buildv2
  script: |
    echo "IP of runner is $(hostname -I | cut -d " " -f1)"
    echo "Current working directory is $(pwd)"
    python3 testing/pipeline/baremetal_pipeline.py \
    add-node \
    --node-type MIP \
    --deployment-type Baremetal \
    --dns-servers $DNS_SERVERS \
    --short-hash "$CI_COMMIT_SHORT_SHA" \
    --mip-ip-address $MIP_IP_ADDRESS
  artifacts:
    untracked: true
  only:
    variables:
        - $PIPELINE == "hw-developer-mip"

Remote Node Automation:
  stage: remote-node
  tags:
    - tfplenum-buildv2
  script: |
    echo "IP of runner is $(hostname -I)"
    echo "Current working directory is $(pwd)"
    python3 testing/pipeline/baremetal_pipeline.py \
     run-remote-node
  only:
    variables:
      - $RUN_REMOTE_NODE == "yes" && $PIPELINE == "hw-developer-all"

Hardware System Function Testing:
  stage: integration-test
  tags:
    - tfplenum-buildv2
  script: |
    echo "IP of runner is $(hostname -I)"
    echo "Current working directory is $(pwd)"
    python3 testing/pipeline/baremetal_pipeline.py run-integration-tests
  only:
    variables:
      - $RUN_INTEGRATION == "yes" && $PIPELINE == "hw-developer-all"
  artifacts:
    paths:
      - "./*.xml"
    reports:
      junit: "./*.xml"

Hardware Simulate Power Failure:
  stage: test-powerfailure
  tags:
    - tfplenum-buildv2
  script: |
    echo "IP of runner is $(hostname -I)"
    echo "Current working directory is $(pwd)"
    python3 testing/pipeline/baremetal_pipeline.py simulate-power-failure
  only:
    variables:
      - $RUN_POWER_FAILURE == "yes" && $PIPELINE == "hw-developer-all"

Hardware CVAH Catalog PMO Apps:
  stage: catalog
  tags:
    - tfplenum-buildv2
  script: |
    echo "IP of runner is $(hostname -I | cut -d " " -f1)"
    echo "Current working directory is $(pwd)"
    python3 testing/pipeline/baremetal_pipeline.py run-catalog suricata
    python3 testing/pipeline/baremetal_pipeline.py run-catalog arkime-viewer
    python3 testing/pipeline/baremetal_pipeline.py run-catalog arkime-capture
    python3 testing/pipeline/baremetal_pipeline.py run-catalog zeek
    python3 testing/pipeline/baremetal_pipeline.py run-catalog logstash
    python3 testing/pipeline/baremetal_pipeline.py run-catalog wikijs
    python3 testing/pipeline/baremetal_pipeline.py run-catalog cortex
    python3 testing/pipeline/baremetal_pipeline.py run-catalog misp
    python3 testing/pipeline/baremetal_pipeline.py run-catalog hive
    python3 testing/pipeline/baremetal_pipeline.py run-catalog rocketchat
  only:
    variables:
      - $RUN_CATALOG == "yes" && $PIPELINE == "hw-developer-all"

Hardware CVAH Catalog Community Apps:
  stage: catalog
  tags:
    - tfplenum-buildv2
  script: |
    echo "IP of runner is $(hostname -I | cut -d " " -f1)"
    echo "Current working directory is $(pwd)"
    python3 testing/pipeline/baremetal_pipeline.py run-catalog mattermost
    python3 testing/pipeline/baremetal_pipeline.py run-catalog nifi
    python3 testing/pipeline/baremetal_pipeline.py run-catalog jcat-nifi
    python3 testing/pipeline/baremetal_pipeline.py run-catalog redmine
    python3 testing/pipeline/baremetal_pipeline.py run-catalog netflow-filebeat
  only:
    variables:
      - $RUN_CATALOG == "yes" && $COMMUNITY_APPS == "yes" && $PIPELINE == "hw-developer-all"

Verodin Automation:
  stage: verodin-test
  tags:
    - tfplenum-buildv2
  script: |
    echo "IP of runner is $(hostname -I)"
    echo "Current working directory is $(pwd)"
    python3 testing/pipeline/baremetal_pipeline.py \
    run-verodin \
    --verodin-ipaddress "$VERODIN_IPADDRESS" \
    --verodin-username "$VERODIN_USERNAME" \
    --verodin-password "$VERODIN_PASSWORD" \
    --sequence-name "$SEQUENCE_NAME" \
    --num-of-actions $NUM_OF_ACTIONS \
    --run-action-sample "$ACTION_SAMPLE"
  retry: 2
  only:
    variables:
      - $RUN_CATALOG == "yes" && $RUN_VERODIN == "yes" && $PIPELINE == "hw-developer-all"

BreakingPoint Automation:
  stage: breakingpoint-test
  tags:
    - tfplenum-buildv2
  script: |
    echo "IP of runner is $(hostname -I)"
    echo "Current working directory is $(pwd)"
    python3 testing/pipeline/baremetal_pipeline.py \
    run-bp \
    --bp-host $BREAKINGPOINT_IP \
    --bp-pass $BREAKINGPOINT_PASSWORD \
    --bp-test $BREAKINGPOINT_TEST_NAME
  only:
    variables:
      - $RUN_BREAKINGPOINT == "yes" && $PIPELINE == "hw-developer-all"
      - $RUN_BREAKINGPOINT == "yes" && $PIPELINE == "hw-bp-test"
...
