Setup MIP Controller:
  stage: build
  tags:
    - tfplenum-buildv2
  script: |
    echo "IP of runner is $(hostname -I | cut -d " " -f1)"
    echo "Changing to the testing/pipeline directory."
    echo "Current working directory is $(pwd)"
    python3 testing/pipeline/pipeline.py             \
    --system-name         "MIP"                      \
    setup-controller                                 \
    --vcenter-ipaddress   "$VCENTER_IPADDRESS"       \
    --vcenter-datacenter  "$VCENTER_DATACENTER"      \
    --vcenter-username    "$VCENTER_USERNAME"        \
    --vcenter-password    "$VCENTER_PASSWORD"        \
    --repo-username       "$REPO_USERNAME"           \
    --repo-password       "$REPO_PASSWORD"           \
    --repo-url            "$REPO_URL"                \
    --portgroup           "$VCENTER_PORTGROUP"       \
    --network-id          "$NETWORK_ID"              \
    --network-block-index "$MIP_NETWORK_BLOCK_INDEX" \
    --dns-servers         $DNS_SERVERS               \
    --vm-folder           "$VMWARE_FOLDER"           \
    --vm-datastore        "$VCENTER_DATASTORE"       \
    --gateway             "$VM_GATEWAY"              \
    --branch-name         "$CI_COMMIT_REF_NAME"      \
    --run-type            "$BUILD_TYPE"              \
    --vm-template         "$MIP_TEMPLATE_TO_CLONE"   \
    --disk-size           "250"                      \
    --vm-prefix           "$VM_PREFIX-mip"           \
    --update-code         "$UPDATE_CODE"
  only:
    variables:
      - $PIPELINE == "nightly_build"
      - $PIPELINE == "export-mip"
      - $PIPELINE == "export-all"
      - $PIPELINE == "developer-mip"
      - $PIPELINE == "developer-all"
      - $PIPELINE == "developer-dip-mip"
  artifacts:
    untracked: true

MIP Kickstart:
  needs: ["Setup MIP Controller"]
  stage: kickstart
  tags:
    - tfplenum-buildv2
  script: |
    echo "IP of runner is $(hostname -I | cut -d " " -f1)"
    echo "Current working directory is $(pwd)"
    python3 testing/pipeline/pipeline.py \
    --system-name "MIP" \
    run-mip-kickstart \
    --vcenter-username "$VCENTER_USERNAME" \
    --vcenter-password "$VCENTER_PASSWORD" \
    --vcenter-ipaddress "$VCENTER_IPADDRESS" \
    --vcenter-datacenter "$VCENTER_DATACENTER" \
    --portgroup "$VCENTER_PORTGROUP" \
    --network-id "$NETWORK_ID" \
    --network-block-index "$MIP_NETWORK_BLOCK_INDEX" \
    --dns-servers $DNS_SERVERS \
    --vm-folder "$VMWARE_FOLDER" \
    --gateway "$VM_GATEWAY" \
    --vm-datastore "$VCENTER_DATASTORE" \
    --num-mips "$NUM_MIPS" \
    --mip-mem "24576" \
    --mip-cpu "8" \
    --vm-prefix "$VM_PREFIX" \
    --disk-size 250
  only:
    variables:
      - $PIPELINE == "developer-mip"
      - $PIPELINE == "developer-all"
      - $PIPELINE == "developer-dip-mip"
      - $PIPELINE == "nightly_build"
      - $PIPELINE == "nightly_build_mip"
  artifacts:
    untracked: true

Configure MIPs:
  stage: kit
  needs: ["Setup MIP Controller","MIP Kickstart"]
  tags:
    - tfplenum-buildv2
  script: |
    echo "IP of runner is $(hostname -I | cut -d " " -f1)"
    echo "Current working directory is $(pwd)"
    python3 testing/pipeline/pipeline.py --system-name "MIP" \
    run-mip-config --operator-type "$MIP_OPERATOR_TYPE"
  only:
    variables:
      - $PIPELINE == "developer-mip"
      - $PIPELINE == "developer-all"
      - $PIPELINE == "developer-dip-mip"
      - $PIPELINE == "nightly_build"
  artifacts:
    untracked: true

Perform MIP STIGs:
  stage: stig-kit
  tags:
    - tfplenum-buildv2
  script: |
    echo "IP of runner is $(hostname -I | cut -d " " -f1)"
    echo "Current working directory is $(pwd)"
    python3 testing/pipeline/pipeline.py --system-name "MIP" run-stigs
  only:
    variables:
      - $RUN_MIP_STIGS == "yes" && $PIPELINE == "developer-mip"
      - $RUN_MIP_STIGS == "yes" && $PIPELINE == "developer-all"
      - $RUN_MIP_STIGS == "yes" && $PIPELINE == "developer-dip-mip"

Perform MIP Security Scans:
  stage: security_scans
  tags:
    - tfplenum-buildv2
  script: |
    echo "IP of runner is $(hostname -I | cut -d " " -f1)"
    echo "Current working directory is $(pwd)"
    python3 testing/pipeline/run_acas.py \
    --ipaddress "$ACAS_IPADDRESS" \
    --username "$ACAS_USERNAME" \
    --password "$ACAS_PASSWORD" \
    --scan_name "$MIP_ACAS_SCAN_TO_RUN" \
    --report-name "MIP_ACAS_Report.pdf" \
    --nodes-to-scan $(cat mipnodestoscan.txt)
  only:
    variables:
      - $RUN_ACAS == "yes" && $PIPELINE == "developer-mip"
      - $RUN_ACAS == "yes" && $PIPELINE == "developer-all"
      - $RUN_ACAS == "yes" && $PIPELINE == "developer-dip-mip"
  artifacts:
    untracked: true

MIP Cleanup:
  stage: cleanup
  tags:
    - tfplenum-buildv2
  script: |
    echo "IP of runner is $(hostname -I | cut -d " " -f1)"
    echo "Current working directory is $(pwd)"
    python3 testing/pipeline/pipeline.py \
    --system-name "MIP" run-cleanup \
    --create-nightly "$CREATE_NIGHTLY" \
    --save-kit "$SAVE_KIT"
  only:
    variables:
      - $IS_CLEANUP == "yes" && $PIPELINE == "developer-mip"
      - $IS_CLEANUP == "yes" && $PIPELINE == "developer-all"
      - $IS_CLEANUP == "yes" && $PIPELINE == "developer-dip-mip"
