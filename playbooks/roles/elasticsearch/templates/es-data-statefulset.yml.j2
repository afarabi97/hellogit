apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: es-data
spec:
  selector:
    matchLabels:
      component: elasticsearch
      role: data
  serviceName: "es-data"
  replicas: {{ elastic_datas }}
  template:
    metadata:
      labels:
        component: elasticsearch
        role: data
    spec:
      initContainers:
      - name: init-sysctl
        image: "busybox:{{busybox_version}}"
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -c
        - "sysctl -w vm.max_map_count=262144; chown -R 1000:1000 {{ elastic_pv_data_path }}"
        securityContext:
          privileged: true
        volumeMounts:
        - name: data
          mountPath: {{ elastic_pv_data_path }}
      containers:
      - name: es-data
        image: "{{ elasticsearch_image }}:{{ elastic_version }}"
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
        resources:
          requests:
            memory: "{{ elastic_data_memory }}Gi"
            cpu: "{{ elastic_data_cpu_request }}"
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: HTTP_ENABLE
          value: "false"
        - name: ES_JAVA_OPTS
          value: -Xms{{ elastic_data_jvm_memory }}g -Xmx{{ elastic_data_jvm_memory }}g
        ports:
        - containerPort: {{ elastic_data_port }}
          name: http
        - containerPort: {{ elastic_management_port }}
          name: transport
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeMounts:
        - name: data
          mountPath: {{ elastic_pv_data_path }}
        - name: elastic-data-conf
          mountPath: {{ elastic_config_path }}/elasticsearch.yml
          subPath: es-data-conf.yml
      volumes:
      - name: elastic-data-conf
        configMap:
          name: elastic-data
      - name: data
        hostPath:
          path: {{ es_data_path }}
          type: Directory
      nodeSelector:
        elasticsearch: "true"
      affinity:
        podAntiAffinity: # Do not allow more than one per host
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: role
                operator: In
                values:
                - data
            topologyKey: "kubernetes.io/hostname"
