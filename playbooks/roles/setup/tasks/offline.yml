---

- name: remove epel rpm
  yum:
    name: epel-release
    state: absent

- name:  Remove Repos
  file:
    path: "/etc/yum.repos.d/{{ item }}.repo"
    state: absent
  with_items:
  - "{{ CentOS_Repos }}"
  - epel
  - epel-testing
  - rocknsm
  - ceph_base
  - ceph_noarch
  - ceph_srpms
  - kubernetes

# This loops over a list of dictionaries called additional_offline_repos variable
# item is the directionary
# value.<key> gets the value of the key
# The end result will create several entry in the /etc/yum.repos.d/offline.repo
# for additional repos (epel, rocknsm, ceph and kubernetes)
- name: "Configure additional offline repos"
  yum_repository:    
    name: "{{ item.value.name }}"
    description: "{{ item.value.name }} repo"
    baseurl: "{{ item.value.baseurl }}"
    enabled: true 
    gpgcheck: "{{ item.value.gpgcheck}}"
    gpgkey: "{{ item.value.gpgkey}}"
    file: "offline"
  loop: "{{ lookup('dict', additional_offline_repos) }}"
  register: yum_results

# This loops over a list of dictionaries called rhel_offline_repos variable
# item is the directionary
# value.<key> gets the value of the key
# The end result will create several entry in the /etc/yum.repos.d/offline.repo
# for additional repos (rhel-7-server-rpms,rhel-7-server-extras-rpms,rhel-7-server-optional-rpms)
- name: "Configure RHEL offline repos"
  yum_repository:    
    name: "{{ item.value.name }}"
    description: "{{ item.value.name }} repo"
    baseurl: "{{ item.value.baseurl }}"
    enabled: true 
    gpgcheck: "{{ item.value.gpgcheck}}"
    gpgkey: "{{ item.value.gpgkey}}"
    file: "offline"
  loop: "{{ lookup('dict', rhel_offline_repos) }}"
  when: "ansible_distribution == 'RedHat'"
  register: yum_results

# This loops over a list of dictionaries called centos_offline_repos variable
# item is the directionary
# value.<key> gets the value of the key
# The end result will create several entry in the /etc/yum.repos.d/offline.repo
# for additional repos (base,updates,extras)  
- name: "Configure CentOS offline repos"
  yum_repository:
    name: "{{ item.value.name }}"
    description: "{{ item.value.name }} repo"
    baseurl: "{{ item.value.baseurl }}"
    enabled: true 
    gpgcheck: "{{ item.value.gpgcheck}}"
    gpgkey: "{{ item.value.gpgkey}}"
    file: "offline"
  loop: "{{ lookup('dict', centos_offline_repos) }}"
  when: "ansible_distribution == 'CentOS'"
  register: yum_results

- name: Clean repo cache
  shell: yum clean all
  when: yum_results.changed
  args:
    warn: false

- name: create pip dir
  file:
    path: "~/.pip"
    state: directory

- name: Add pip config
  template:
    src: templates/pip.conf.j2
    dest: "~/.pip/pip.conf"