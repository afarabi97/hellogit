---

- name: remove epel rpm
  yum:
    name: epel-release
    state: absent

- name: delete all repos matching the below regex
  find:
    paths: /etc/yum.repos.d
    patterns: "^(CentOS|epel|rocknsm|ceph|kuber|ansible).*repo$"
    use_regex: true
  register: wildcard_files_to_delete

- name: remove matched repos
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ wildcard_files_to_delete.files }}"

- name: Disable Red Hat repos...
  rhsm_repository:
    name: "{{ item }}"
    state: disabled
  with_items: "{{ rhel_repos }}"
  when: "ansible_distribution == 'RedHat'"

# This loops over a list of dictionaries called additional_offline_repos variable
# item is the directionary
# value.<key> gets the value of the key
# The end result will create several entry in the /etc/yum.repos.d/offline.repo
# for additional repos (epel, rocknsm, ceph and kubernetes)
- name: "Configure additional offline repos"
  yum_repository:    
    name: "{{ item.value.name }}"
    description: "{{ item.value.name }} repo"
    baseurl: "{{ item.value.baseurl }}"
    enabled: true 
    gpgcheck: "{{ item.value.gpgcheck}}"
    gpgkey: "{{ item.value.gpgkey}}"
    file: "offline"
  loop: "{{ lookup('dict', additional_offline_repos) }}"

# This loops over a list of dictionaries called rhel_offline_repos variable
# item is the directionary
# value.<key> gets the value of the key
# The end result will create several entry in the /etc/yum.repos.d/offline.repo
# for additional repos (rhel-7-server-rpms,rhel-7-server-extras-rpms,rhel-7-server-optional-rpms)
- name: "Configure RHEL offline repos"
  yum_repository:    
    name: "{{ item.value.name }}"
    description: "{{ item.value.name }} repo"
    baseurl: "{{ item.value.baseurl }}"
    enabled: true 
    gpgcheck: "{{ item.value.gpgcheck}}"
    gpgkey: "{{ item.value.gpgkey}}"
    file: "offline"
  loop: "{{ lookup('dict', rhel_offline_repos) }}"
  when: "ansible_distribution == 'RedHat'"

# This loops over a list of dictionaries called centos_offline_repos variable
# item is the directionary
# value.<key> gets the value of the key
# The end result will create several entry in the /etc/yum.repos.d/offline.repo
# for additional repos (base,updates,extras)  
- name: "Configure CentOS offline repos"
  yum_repository:
    name: "{{ item.value.name }}"
    description: "{{ item.value.name }} repo"
    baseurl: "{{ item.value.baseurl }}"
    enabled: true 
    gpgcheck: "{{ item.value.gpgcheck}}"
    gpgkey: "{{ item.value.gpgkey}}"
    file: "offline"
  loop: "{{ lookup('dict', centos_offline_repos) }}"
  when: "ansible_distribution == 'CentOS'"

- name: create pip dir
  file:
    path: "~/.pip"
    state: directory

- name: Add pip config
  template:
    src: templates/pip.conf.j2
    dest: "~/.pip/pip.conf"