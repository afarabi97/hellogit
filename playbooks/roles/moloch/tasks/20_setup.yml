---

- name: 'Create unclustered pcap directories'
  file:
    path: "{{ moloch_pcap_folder }}"
    owner: "{{ moloch_user }}"
    group: "{{ moloch_group }}"
    mode: "{{ moloch_dir_mode }}"
    state: directory
  delegate_to: "{{ item }}"
  with_items:
    - "{{ groups['moloch'] }}"
  when: not use_ceph_for_pcap

- name: 'Create unclustered pcap directories'
  file:
    path: "{{ moloch_pcap_folder }}"
    owner: "{{ moloch_user }}"
    group: "{{ moloch_group }}"
    mode: "{{ moloch_dir_mode }}"
    state: directory
  delegate_to: "{{ item }}"
  with_items:
    - "{{ groups['remote-sensors'] }}"

- name: Deploy Services
  import_role:
    name: kubernetes/common
    tasks_from: kube_create
  vars:
    name: "Moloch Bootstrap"
    file_name: "{{ moloch_dir }}/bootstrap.yml"

- name: Get Bootstrap pod name
  shell: |
    while [ "$(kubectl get pods | grep moloch-bootstrap | head -n 1 | awk '{ print $2}')" != "1/1" ]; do
      sleep 1;
    done;
    echo -n "$(kubectl get pods | grep moloch-bootstrap | head -n 1 | awk '{ print $1 }')"
  register: moloch_bootstrap_pod

- name: Deploy Moloch Viewer and Moloch Viewer Service
  include_role:
    name: kubernetes/common
    tasks_from: kube_create
  vars:
    name: "Moloch"
    file_name: "{{ moloch_dir }}/{{ item }}"
  with_items:
    - svc-viewer.yml
    - deploy-viewer.yml

- name: Deploy Moloch STS
  include_role:
    name: kubernetes/common
    tasks_from: kube_create
  vars:
    name: "Moloch"
    file_name: "{{ moloch_dir }}/{{ item[0] }}-{{ item[1] }}"
  with_nested:
    - "{{ groups['sensors'] }}"
    - ['sts.yml', 'sts-remote.yml']

- name: Scale up Moloch Statefulset
  command: "kubectl scale statefulset moloch --replicas={{ groups['sensors'] | length }}"
  when: node_to_add is defined 
    and node_to_add in groups['sensors']
    and node_to_add in groups['moloch']
  tags:
    - moloch-scale

- name: Scale up Remote Moloch Statefulset
  command: "kubectl scale statefulset remote-moloch --replicas={{ groups['remote-sensors'] | length }}"
  when: node_to_add is defined 
    and node_to_add in groups['remote-sensors']
    and node_to_add in groups['moloch']
  tags:
    - moloch-scale

- name: Remove Bootstrap
  command: kubectl delete -f {{ moloch_dir }}/bootstrap.yml --ignore-not-found

...
