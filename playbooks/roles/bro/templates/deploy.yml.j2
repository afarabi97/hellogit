---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ deployment_hostname | regex_replace('\\.(lan)?', '') | regex_replace('[^0-9a-zA-Z]', '') }}-bro
  labels:
    component: bro
spec:
  replicas: 1
  selector:
    matchLabels:
      component: bro
  template:
    metadata:
      labels:
        component: bro
    spec:
      hostNetwork: true
      containers:
      - name: bro
        image: "{{ bro_image }}:{{ bro_version }}"
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          capabilities:
            add:
              - NET_ADMIN
              - NET_RAW
              - SYS_NICE
        resources:
          requests:
            cpu: {{ hostvars[deployment_hostname].bro_cpu_request }}
        livenessProbe:
          exec:
            command:
            - bash
            - -c
            - systemctl status bro | grep running
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeMounts:
        - name: filebeat
          mountPath: /etc/filebeat/filebeat.yml
        - name: broctl
          mountPath: {{ bro_container_path }}/etc/broctl.cfg
        - name: local
          mountPath: {{ bro_container_path }}/share/bro/site/local.bro
        - name: custom
          mountPath: {{ bro_container_path }}/share/bro/site/custom
        - name: networks
          mountPath: {{ bro_container_path }}/etc/networks.cfg
        - name: node
          mountPath: {{ bro_container_path }}/etc/node.cfg
        - name: scripts
          mountPath: {{ bro_container_path }}/share/bro/policy/custom-scripts
      volumes:
      - name: filebeat
        hostPath:
          path: {{ bro_dir }}/filebeat.yml
          type: File
      - name: broctl
        hostPath:
          path: {{ bro_dir }}/broctl.cfg
          type: File
      - name: local
        hostPath:
          path: {{ bro_dir }}/local.bro
          type: File
      - name: custom
        hostPath:
          path: {{ bro_dir }}/custom
          type: DirectoryOrCreate
      - name: networks
        hostPath:
          path: {{ bro_dir }}/networks.cfg
          type: File
      - name: node
        hostPath:
          path: {{ bro_dir }}/node.cfg
          type: File
      - name: scripts
        hostPath:
          path: {{ bro_scripts }}
          type: DirectoryOrCreate
      affinity:
        nodeAffinity: # Only schedule on the intended host
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - "{{ deployment_hostname }}"
        podAntiAffinity: # Do not allow more than one per host
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - bro
            topologyKey: "kubernetes.io/hostname"

...
