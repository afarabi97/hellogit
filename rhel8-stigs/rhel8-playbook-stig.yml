---

- name: Setting node type
  set_fact:
    node_type: "Controller"
  when: 'inventory_hostname == "localhost"'

- name: Set Variables for STIGS
  set_fact:
    Var_String_1: !!str 1
    Var_Fail_Lock_STIGs: !!str RHEL-08 020010, 020012, 020014, 020015, 020018, 020020 & 020022
    Var_010130_PAM_Rounds: !!str 5000
    Var_010200_SSH_Idle_Timeout: !!str 600
    Var_010450_SELINUXTYPE_Policy_Name: !!str targeted
    Var_020100_PAM_Retry: !!str 3
    Var_020110_PAM_Ucredit: !!str -1
    Var_020130_PAM_Dcredit: !!str -1
    Var_020140_PAM_MaxClassRepeat: !!str 4
    Var_020220_PAM_Password_Remember: !!str 5
    Var_020231_Pass_Min_Len: !!str 15
    Var_020280_PAM_Ocredit: !!str -1
    Var_020310_Fail_Delay: 4
    Var_040161_040341_Rekey_Limit_Size: !!str 1G
    Var_040161_040341_Rekey_Limit_Time: !!str 1h
    VAR__PAM_Faillock_Deny: !!str 3
    Var__PAM_Faillock_Fail_Interval: !!str 900
    Var__PAM_Faillock_Unlock_Time: !!str 0
    Var__SELINUX_State: !!str enforcing

- name: "PRELIM - Check whether machine is UEFI-based"
  stat:
    path: /sys/firmware/efi
  register: rhel_07_sys_firmware_efi

- name: Gather the package facts
  package_facts:
    manager: auto

- name: MEDIUM | Remove SELINUX values from /etc/selinux/config
  lineinfile:
    path: /etc/selinux/config
    create: false
    regexp: ^SELINUX=
    state: absent

- name: MEDIUM | Insert SELINUX values into /etc/selinux/config
  lineinfile:
    path: /etc/selinux/config
    create: yes
    line: SELINUX={{ Var__SELINUX_State }}
    state: present

- name: Get Current Kernel Parameters - GRUB2-EDITENV
  command: /usr/bin/grub2-editenv - list
  register: kernelopts
  changed_when: false

- name: Update the bootloader menu
  command: /usr/bin/grub2-editenv - set "{{ item }} random.trust_cpu=on"
  with_items: '{{ kernelopts.stdout_lines | select(''match'', ''^kernelopts.*'') | list }}'
  when:
    - kernelopts.stdout_lines is defined
    - kernelopts.stdout_lines | length > 0
    - kernelopts.stdout | regex_search('^kernelopts=(?:.*\s)?random.trust_cpu=on(?:\s.*)?$', multiline=True) is none

- name: Get Current Kernel Parameters - GRUB2-EDITENV
  command: /usr/bin/grub2-editenv - list
  register: kernelopts
  changed_when: false
  when: '"grub2-common" in ansible_facts.packages'

- name: Update the bootloader menu
  command: /usr/bin/grub2-editenv - set "{{ item }} pti=on"
  with_items: '{{ kernelopts.stdout_lines | select(''match'', ''^kernelopts.*'') | list }}'
  when:
    - kernelopts.stdout_lines is defined
    - kernelopts.stdout_lines | length > 0
    - kernelopts.stdout | regex_search('^kernelopts=(?:.*\s)?pti=on(?:\s.*)?$', multiline=True) is none
    - '"grub2-common" in ansible_facts.packages'

- name: Read permission of GPG key directory
  stat:
    path: /etc/pki/rpm-gpg/
  register: GPG_Key_Directory_Permission
  check_mode: false

- name: Read signatures in GPG key
  command: gpg --show-keys --with-fingerprint --with-colons "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
  changed_when: false
  register: GPG_Fingerprints
  check_mode: false

- name: Set Fact - Get Installed GPG Fingerprints
  set_fact:
    GPG_Installed_Fingerprints: |-
        {{ GPG_Fingerprints.stdout | regex_findall('^pub.*
        (?:^fpr[:]*)([0-9A-Fa-f]*)', '\1') | list }}

- name: Set Fact - Valid fingerprints
  set_fact:
    GPG_Valid_Fingerprints: ("567E347AD0044ADE55BA8A5F199E2F91FD431D51" "6A6AA7C97C8890AEC6AEBFE2F76F66C3D4082792")

- name: Read signatures in GPG key
  command: gpg --show-keys --with-fingerprint --with-colons "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
  changed_when: false
  register: GPG_Fingerprints
  check_mode: false

- name: Import RedHat GPG key
  rpm_key:
    state: present
    key: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
  when:
    - GPG_Key_Directory_Permission.stat.mode <= '0755'
    - (GPG_Installed_Fingerprints | difference(GPG_Valid_Fingerprints)) | length == 0
    - GPG_Installed_Fingerprints | length > 0

- name: Check existence of yum on Fedora
  stat:
    path: /etc/yum.conf
  register: yum_config_file
  check_mode: false
  when: '"yum" in ansible_facts.packages'

- name: "MEDIUM | Disable Ctrl-Alt-Del Reboot Activation"
  systemd:
    name: ctrl-alt-del.target
    masked: true
    state: stopped
  ignore_errors: true

- name: "MEDIUM | Modify the System Login Banner - add correct banner"
  template:
    src: ./templates/logon-banner.j2
    dest: "{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - /etc/issue.in
    - /etc/issue.net
    - /etc/issue

- name: "MEDIUM | system-auth/password-auth | Add auth pam_faillock preauth unlock_time before pam_unix.so"
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent unlock_time={{ Var__PAM_Faillock_Unlock_Time }}
    state: before
  loop:
    - system-auth
    - password-auth
  when: '"pam" in ansible_facts.packages'

- name: "MEDIUM | system-auth/password-auth | Add unlock_time argument to pam_faillock preauth"
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent unlock_time={{ Var__PAM_Faillock_Unlock_Time }}
    state: args_present
  loop:
    - system-auth
    - password-auth
  when: '"pam" in ansible_facts.packages'

- name: "MEDIUM | system-auth/password-auth | Add auth pam_faillock authfail unlock_interval after pam_unix.so"
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail unlock_time={{ Var__PAM_Faillock_Unlock_Time }}
    state: after
  loop:
    - system-auth
    - password-auth
  when: '"pam" in ansible_facts.packages'

- name: "MEDIUM | system-auth/password-auth | Add unlock_time argument to auth pam_faillock authfail "
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail unlock_time={{ Var__PAM_Faillock_Unlock_Time }}
    state: args_present
  loop:
    - system-auth
    - password-auth
  when: '"pam" in ansible_facts.packages'

- name: "MEDIUM | system-auth/password-auth | Add account pam_faillock before pam_unix.so"
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
    - system-auth
    - password-auth
  when: '"pam" in ansible_facts.packages'

- name: "MEDIUM | system-auth/password-auth | Add auth pam_faillock preauth deny before pam_unix.so"
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent deny={{ VAR__PAM_Faillock_Deny }}
    state: before
  loop:
    - system-auth
    - password-auth
  when: '"pam" in ansible_facts.packages'

- name: "MEDIUM | system-auth/password-auth | Add deny argument to auth pam_faillock preauth"
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent deny={{ VAR__PAM_Faillock_Deny }}
    state: args_present
  loop:
    - system-auth
    - password-auth
  when: '"pam" in ansible_facts.packages'

- name: "MEDIUM | system-auth/password-auth | Add auth pam_faillock authfail deny after pam_unix.so"
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail deny={{ VAR__PAM_Faillock_Deny }}
    state: after
  loop:
    - system-auth
    - password-auth
  when: '"pam" in ansible_facts.packages'

- name: "MEDIUM | system-auth/password-auth | Add deny argument to auth pam_faillock authfail"
  pamd:
    name: '{{ item }}'
    type: auth
    new_type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail deny={{ VAR__PAM_Faillock_Deny }}
    state: args_present
  loop:
    - system-auth
    - password-auth
  when: '"pam" in ansible_facts.packages'

- name: "MEDIUM | system-auth/password-auth | Add account pam_faillock before pam_unix.so"
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
    - system-auth
    - password-auth
  when: '"pam" in ansible_facts.packages'

- name: "MEDIUM | system-auth/password-auth | Add auth pam_faillock preauth fail_interval before pam_unix.so"
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent fail_interval={{ Var__PAM_Faillock_Fail_Interval }}
    state: before
  loop:
    - system-auth
    - password-auth
  when: '"pam" in ansible_facts.packages'

- name: "MEDIUM | system-auth/password-auth | Add fail_interval argument to auth pam_faillock preauth"
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent fail_interval={{ Var__PAM_Faillock_Fail_Interval }}
    state: args_present
  loop:
    - system-auth
    - password-auth
  when: '"pam" in ansible_facts.packages'

- name: "MEDIUM | system-auth/password-auth | Add auth pam_faillock authfail fail_interval after pam_unix.so"
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail fail_interval={{ Var__PAM_Faillock_Fail_Interval }}
    state: after
  loop:
    - system-auth
    - password-auth
  when: '"pam" in ansible_facts.packages'
  ignore_errors: true

- name: "MEDIUM | system-auth/password-auth | Add fail_interval argument to auth pam_faillock authfail"
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail fail_interval={{ Var__PAM_Faillock_Fail_Interval }}
    state: args_present
  loop:
    - system-auth
    - password-auth
  when: '"pam" in ansible_facts.packages'

- name: "MEDIUM | system-auth/password-auth | Add account pam_faillock before pam_unix.so"
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
    - system-auth
    - password-auth
  when: '"pam" in ansible_facts.packages'

- name: "RHEL-08-010151 | MEDIUM | Require single user mode password"
  lineinfile:
    create: yes
    dest: /usr/lib/systemd/system/rescue.service
    regexp: ^#?ExecStart=
    line: ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue
  ignore_errors: true

- name: "RHEL-08-010171 | LOW | Ensure policycoreutils is installed"
  package:
    name: policycoreutils
    state: present

- name: "RHEL-08-010200 | MEDIUM | Remove SSH Client Alive Count Max from /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: false
    regexp: (?i)^\s*ClientAliveCountMax\s+
    state: absent

- name: "RHEL-08-010200 | MEDIUM | Insert SSH Client Alive Count Max into /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: yes
    line: ClientAliveCountMax 0
    state: present
    insertbefore: ^[#\s]*Match
    validate: /usr/sbin/sshd -t -f %s

- name: "RHEL-08-010200 | MEDIUM | Remove SSH Idle Timeout Interval from /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: false
    regexp: (?i)^\s*ClientAliveInterval\s+
    state: absent

- name: "RHEL-08-010200 | MEDIUM | Insert SSH Idle Timeout Interval into /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: yes
    line: ClientAliveInterval {{ Var_010200_SSH_Idle_Timeout }}
    state: present
    insertbefore: ^[#\s]*Match
    validate: /usr/sbin/sshd -t -f %s

# - name: "RHEL-08-010292 | LOW | RHEL 8 must ensure the SSH server uses strong entropy"
#   lineinfile:
#     path: /etc/sysconfig/sshd
#     create: false
#     regexp: '^SSH_USE_STRONG_RNG='
#     line: "SSH_USE_STRONG_RNG=32"

- name: "RHEL-08-010370 | HIGH | Ensure GPG check is globally activated (yum)"
  ini_file:
    dest: /etc/yum.conf
    section: main
    option: gpgcheck
    value: '{{ Var_String_1 }}'
    no_extra_spaces: true
    create: false
  when: '"yum" in ansible_facts.packages'

- name: "RHEL-08-010371 | HIGH | Ensure GPG check is globally activated (dnf)"
  ini_file:
    dest: /etc/dnf/dnf.conf
    section: main
    option: gpgcheck
    value: '{{ Var_String_1 }}'
    no_extra_spaces: true
    create: false
  ignore_errors: true
  when: '"yum" in ansible_facts.packages'

- name: "RHEL-08-010371 | HIGH | Ensure GPG check Enabled for Local Packages (dnf)"
  ini_file:
    dest: /etc/dnf/dnf.conf
    section: main
    option: localpkg_gpgcheck
    value: '{{ Var_String_1 }}'
    create: yes
  ignore_errors: true

- name: "RHEL-08-010371 | HIGH | Ensure GPG check Enabled for Local Packages (Yum)"
  ini_file:
    dest: /etc/yum.conf
    section: main
    option: localpkg_gpgcheck
    value: '{{ Var_String_1 }}'
    create: yes
  when: '"yum" in ansible_facts.packages'

- name: "RHEL-08-010372 | MEDIUM | PATCH | RHEL 8 must prevent the loading of a new kernel for later execution."
  lineinfile:
      path: /etc/sysctl.d/99-sysctl.conf
      regexp: '^kernel.kexec_load_disabled ='
      line: "kernel.kexec_load_disabled = 1"

- name: "RHEL-08-010373 | MEDIUM | PATCH | RHEL 8 must enable kernel parameters to enforce discretionary access control on symlinks."
  lineinfile:
      path: /etc/sysctl.d/99-sysctl.conf
      line: "fs.protected_symlinks = 1"
      create: yes

- name: "RHEL-08-010374 | MEDIUM | PATCH | RHEL 8 must enable kernel parameters to enforce discretionary access control on hardlinks."
  lineinfile:
      path: /etc/sysctl.d/99-sysctl.conf
      line: "fs.protected_hardlinks = 1"
      create: yes

- name: "RHEL-08-010375 | LOW | RHEL 8 must restrict access to the kernel message buffer."
  lineinfile:
     path: /etc/sysctl.d/99-sysctl.conf
     regexp: '^kernel.dmesg_restrict = '
     line: 'kernel.dmesg_restrict = 1'
     create: yes

- name: "RHEL-08-010376 | LOW | RHEL 8 must prevent kernel profiling by unprivileged users."
  lineinfile:
     path: /etc/sysctl.d/99-sysctl.conf
     regexp: '^kernel.perf_event_paranoid = '
     line: 'kernel.perf_event_paranoid = 2'
     create: yes

- name: "RHEL-08-010383 | MEDIUM | RHEL 8 must use the invoking user's password for privilege escalation when using sudo."
  lineinfile:
    path: /etc/sudoers
    create: yes
    line: "{{ item.line }}"
  loop:
    - { line: '#RHEL-08-010383'}
    - { line: 'Defaults !targetpw' }
    - { line: 'Defaults !rootpw' }
    - { line: 'Defaults !runaspw' }

- name: "RHEL-08-010384 | MEDIUM | RHEL 8 must require re-authentication when using the sudo command."
  lineinfile:
    path: /etc/sudoers
    create: yes
    line: "{{ item.line }}"
  loop:
    - { line: '#RHEL-08-010384'}
    - { line: 'Defaults timestamp_timeout=15' }

- name: "RHEL-08-010390 | MEDIUM | RHEL 8 must have the packages required for multifactor authentication installed."
  yum:
    name: esc
    state: installed

- name: "RHEL-08-010450 | MEDIUM | Remove Configure SELinuxtype Policy from /etc/selinux/config"
  lineinfile:
    path: /etc/selinux/config
    create: false
    regexp: ^SELINUXTYPE=
    state: absent

- name: "RHEL-08-010450 | MEDIUM | Insert Configure SELinuxtype Policy into /etc/selinux/config"
  lineinfile:
    path: /etc/selinux/config
    create: yes
    line: SELINUXTYPE={{ Var_010450_SELINUXTYPE_Policy_Name }}
    state: present

- name: "RHEL-08-010490 | MEDIUM | The RHEL 8 SSH private host key files must have mode 0600 or less permissive."
  file:
    dest: "{{ item }}"
    mode: 0600
  with_fileglob:
    - '/etc/ssh/ssh_host*key'

- name: "RHEL-08-010500 | MEDIUM | Remove Strict Mode Checking from /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: false
    regexp: (?i)^\s*StrictModes\s+
    state: absent

- name: "RHEL-08-010500 | MEDIUM | Insert Strict Mode Checking into /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: yes
    line: StrictModes yes
    state: present
    insertbefore: ^[#\s]*Match
    validate: /usr/sbin/sshd -t -f %s

- name: "RHEL-08-010510 | MEDIUM | Remove Set Compression from /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: false
    regexp: (?i)^\s*Compression\s+
    state: absent

- name: "RHEL-08-010510 | MEDIUM | Insert Set Compression into /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: yes
    line: Compression no
    state: present
    insertbefore: ^[#\s]*Match
    validate: /usr/sbin/sshd -t -f %s

- name: "RHEL-08-010520 | MEDIUM | Remove IgnoreUserKnownHosts from /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: false
    regexp: (?i)^\s*IgnoreUserKnownHosts\s+
    state: absent

- name: "RHEL-08-010520 | MEDIUM | Insert IgnoreUserKnownHosts into /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: yes
    line: IgnoreUserKnownHosts yes
    state: present
    insertbefore: ^[#\s]*Match
    validate: /usr/sbin/sshd -t -f %s

- name: "RHEL-08-010521 | MEDIUM | Remove GSSAPI Authentication from /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: false
    regexp: (?i)^\s*GSSAPIAuthentication\s+
    state: absent

- name: "RHEL-08-010521 | MEDIUM | Insert GSSAPI Authentication into /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: yes
    line: GSSAPIAuthentication no
    state: present
    insertbefore: ^[#\s]*Match
    validate: /usr/sbin/sshd -t -f %s

- name: "RHEL-08-010521 | MEDIUM | Remove Kerberos Authentication from /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: false
    regexp: (?i)^\s*KerberosAuthentication\s+
    state: absent

- name: "RHEL-08-010521 | MEDIUM | Insert Kerberos Authentication into /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: yes
    line: KerberosAuthentication no
    state: present
    insertbefore: ^[#\s]*Match
    validate: /usr/sbin/sshd -t -f %s

- name: "RHEL-08-010671 | MEDIUM | PATCH | RHEL 8 must disable the kernel.core_pattern."
  lineinfile:
      path: /etc/sysctl.d/99-sysctl.conf
      regexp: '^kernel.core_pattern ='
      line: "kernel.core_pattern = |/bin/false"

- name: "RHEL-08-010673 | MEDIUM | RHEL 8 must disable core dumps for all users."
  lineinfile:
    path: /etc/security/limits.conf
    regexp: '^\* hard core'
    line: '* hard core 0'
    create: yes

- name: "RHEL-08-010674 | MEDIUM | RHEL 8 must disable storing core dumps."
  lineinfile:
    path: /etc/systemd/coredump.conf
    regexp: '^Storage='
    line: 'Storage=none'
    create: yes

- name: "RHEL-08-010675 | MEDIUM | RHEL 8 must disable core dump backtraces."
  lineinfile:
    path: /etc/systemd/coredump.conf
    regexp: '^ProcessSizeMax='
    line: 'ProcessSizeMax=0'
    create: yes

- name: "RHEL-08-010830 | MEDIUM | Remove PermitUserEnvironment from /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: yes
    regexp: (?i)^\s*PermitUserEnvironment\s+
    state: absent

- name: "RHEL-08-010830 | MEDIUM | RHEL 8 must not allow users to override SSH environment variables."
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^\s*(?i)PermitUserEnvironment\s+'
    line: PermitUserEnvironment no

- name: "RHEL-08-020013 | MEDIUM | RHEL 8 must automatically lock an account when three unsuccessful logon attempts occur during a 15-minute time period."
  lineinfile:
    path: /etc/security/faillock.conf
    regexp: '^# fail_interval ='
    line: 'fail_interval = 900'
    create: yes

- name: "RHEL-08-020019 | MEDIUM | RHEL 8 must prevent system messages from being presented when three unsuccessful logon attempts occur."
  lineinfile:
    path: /etc/security/faillock.conf
    regexp: '^# silent'
    line: 'silent'
    create: yes

- name: "RHEL-08-020021 | MEDIUM | RHEL 8 must log user name information when unsuccessful logon attempts occur."
  lineinfile:
    path: /etc/security/faillock.conf
    regexp: '^# audit'
    line: 'audit'
    create: yes

- name: "RHEL-08-020024 | LOW | RHEL 8 must limit the number of concurrent sessions to ten for all accounts and/or account types."
  lineinfile:
    path: /etc/security/limits.conf
    regexp: '^\* hard maxlogins'
    line: '* hard maxlogins 10'
    create: yes

- name: "RHEL-08-020040 | MEDIUM | (Install) RHEL 8 must enable a user session lock until that user re-establishes access using established identification and authentication procedures for command line sessions."
  yum:
    name: tmux
    state: installed

- name: "RHEL-08-020042 | MEDIUM | RHEL 8 must prevent users from disabling session control mechanisms."
  lineinfile:
    path: /etc/shells
    # String to Search
    regexp: "tmux"
    # State is set to Absent to remove if the Searching Line is found
    state: absent
    backup: yes

- name: "RHEL-08-020110 | MEDIUM | Ensure PAM variable ucredit is set accordingly"
  lineinfile:
    create: yes
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*ucredit
    line: ucredit = {{ Var_020110_PAM_Ucredit }}

- name: "RHEL-08-020120 | MEDIUM | RHEL 8 must enforce password complexity by requiring that at least one lower-case character be used."
  lineinfile:
    path: /etc/security/pwquality.conf
    regexp: '^\s*lcredit'
    line: 'lcredit = -1'
    create: yes

- name: "RHEL-08-020130 | MEDIUM | Ensure PAM variable dcredit is set accordingly"
  lineinfile:
    create: yes
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*dcredit
    line: dcredit = {{ Var_020130_PAM_Dcredit }}

- name: "RHEL-08-020140 | MEDIUM | Ensure PAM variable maxclassrepeat is set accordingly"
  lineinfile:
    create: yes
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*maxclassrepeat
    line: maxclassrepeat = {{ Var_020140_PAM_MaxClassRepeat }}

- name: "RHEL-08-020180 | MEDIUM | RHEL 8 must prevent users from disabling session control mechanisms."
  lineinfile:
    path: /etc/default/useradd
    regexp: "^PASS_MIN_DAYS"
    line: "PASS_MIN_DAYS=1"
    create: yes

- name: "RHEL-08-020190 | MEDIUM | RHEL 8 passwords for new users or password changes must have a 24 hours/1 day minimum password lifetime restriction in /etc/logins.def."
  lineinfile:
    path: /etc/login.defs
    regexp: '^PASS_MIN_DAYS'
    line: 'PASS_MIN_DAYS 1'
    create: yes

- name: "RHEL-08-020200 | MEDIUM | RHEL 8 user account passwords must have a 60-day maximum password lifetime restriction."
  lineinfile:
    path: /etc/login.defs
    regexp: '^PASS_MAX_DAYS'
    line: 'PASS_MAX_DAYS 60'
    create: yes

- name: "RHEL-08-020210 | MEDIUM | RHEL 8 user account passwords must be configured so that existing passwords are restricted to a 60-day maximum lifetime."
  lineinfile:
    path: /etc/default/useradd
    regexp: '^PASS_MAX_DAYS'
    line: 'PASS_MAX_DAYS=60'
    create: yes

- name: "RHEL-08-020220 | MEDIUM | Do not allow users to reuse recent passwords - system-auth/password-auth (change)"
  replace:
    name: '{{ item }}'
    regexp: ^(password\s+sufficient\s+pam_unix\.so\s.*remember\s*=\s*)(\S+)(.*)$
    replace: \g<1>{{ Var_020220_PAM_Password_Remember }}\g<3>
  loop:
    - /etc/pam.d/system-auth
    - /etc/pam.d/password-auth

- name: "RHEL-08-020220 | MEDIUM | Do not allow users to reuse recent passwords - system-auth/password-auth (add)"
  replace:
    name: '{{ item }}'
    regexp: ^password\s+sufficient\s+pam_unix\.so\s(?!.*remember\s*=\s*).*$
    replace: \g<0> remember={{ Var_020220_PAM_Password_Remember }}
  loop:
    - /etc/pam.d/system-auth
    - /etc/pam.d/password-auth

- name: "RHEL-08-020230 | MEDIUM | RHEL 8 passwords must have a minimum of 15 characters."
  lineinfile:
    path: /etc/security/pwquality.conf
    regexp: '^\s*minlen'
    line: minlen = {{ Var_020231_Pass_Min_Len }}
    create: yes

- name: "RHEL-08 020231 & 020310 | MEDIUM | Set Password Fail Delay in login.defs"
  lineinfile:
    dest: /etc/login.defs
    regexp: ^#?FAIL_DELAY
    state: present
    line: "FAIL_DELAY {{ Var_020310_Fail_Delay | default('4') }}"
    create: yes

- name: "RHEL-08 020231 & 020310 | MEDIUM | Set Password Minimum Length in login.defs"
  lineinfile:
    dest: /etc/login.defs
    regexp: ^PASS_MIN_LEN *[0-9]*
    state: present
    line: PASS_MIN_LEN        {{ Var_020231_Pass_Min_Len }}

- name: "RHEL-08-020260 | MEDIUM | RHEL 8 account identifiers (individuals, groups, roles, and devices) must be disabled after 35 days of inactivity."
  lineinfile:
    path: /etc/default/useradd
    regexp: "^INACTIVE="
    line: "INACTIVE=35"
    create: yes

- name: "RHEL-08-020280 | MEDIUM | Ensure PAM variable ocredit is set accordingly"
  lineinfile:
    create: yes
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*ocredit
    line: ocredit = {{ Var_020280_PAM_Ocredit }}

- name: "RHEL-08-020300 | MEDIUM | RHEL 8 must prevent the use of dictionary words for passwords."
  lineinfile:
    path: /etc/security/pwquality.conf
    regexp: '^\s*dictcheck'
    line: 'dictcheck = 1'
    create: yes

- name: "RHEL-08-020330 | HIGH | Prevent Log In to Accounts With Empty Password - PAM"
  replace:
    name: '{{ item }}'
    regexp: nullok
    replace: ""
  loop:
    - /etc/pam.d/system-auth
    - /etc/pam.d/password-auth

- name: "RHEL-08-020330 | HIGH | Remove PermitEmptyPasswords from /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: false
    regexp: (?i)^\s*PermitEmptyPasswords\s+
    state: absent

- name: "RHEL-08-020330 | HIGH | Insert PermitEmptyPasswords into /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: yes
    line: PermitEmptyPasswords no
    state: present
    insertbefore: ^[#\s]*Match
    validate: /usr/sbin/sshd -t -f %s

- name: "RHEL-08-020350 | Remove PrintLastLog values from /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: false
    regexp: (?i)^\s*PrintLastLog\s+
    state: absent

- name: "RHEL-08-020350 | Insert PrintLastLog values into /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: yes
    line: PrintLastLog yes
    state: present
    insertbefore: ^[#\s]*Match
    validate: /usr/sbin/sshd -t -f %s

- name: "RHEL-08-030680 | MEDIUM | RHEL 8 must have the packages required for encrypting offloaded audit logs installed."
  yum:
    name: rsyslog-gnutls
    state: installed

- name: "RHEL-08-030742 | LOW | RHEL 8 must disable network management of the chrony daemon."
  lineinfile:
    path: /etc/chrony.conf
    line: "cmdport 0"
    create: yes

- name: "RHEL-08-040021 | LOW | RHEL 8 must disable the asynchronous transfer mode (ATM) protocol."
  lineinfile:
    path: /etc/modprobe.d/blacklist.conf
    create: yes
    line: "{{ item.line }}"
  loop:
    - { line: 'install ATM /bin/true' }
    - { line: 'blacklist ATM' }

- name: "RHEL-08-040022 | LOW | RHEL 8 must disable the controller area network (CAN) protocol."
  lineinfile:
    path: /etc/modprobe.d/blacklist.conf
    create: yes
    line: "{{ item.line }}"
  loop:
    - { line: 'install CAN /bin/true' }
    - { line: 'blacklist CAN' }

- name: "RHEL-08-040023 | LOW | RHEL 8 must disable the stream control transmission (SCTP) protocol."
  lineinfile:
    path: /etc/modprobe.d/blacklist.conf
    create: yes
    line: "{{ item.line }}"
  loop:
    - { line: 'install SCTP /bin/true' }
    - { line: 'blacklist SCTP' }

- name: "RHEL-08-040024 | LOW | RHEL 8 must disable the transparent inter-process communication (TIPC) protocol."
  lineinfile:
    path: /etc/modprobe.d/blacklist.conf
    create: yes
    line: "{{ item.line }}"
  loop:
    - { line: 'install TIPC /bin/true' }
    - { line: 'blacklist TIPC' }

- name: "RHEL-08-040025 | LOW | RHEL 8 must disable mounting of cramfs."
  lineinfile:
    path: /etc/modprobe.d/blacklist.conf
    create: yes
    line: "{{ item.line }}"
  loop:
    - { line: 'install cramfs /bin/true' }
    - { line: 'blacklist cramfs' }

- name: "RHEL-08-040026 | LOW | RHEL 8 must disable IEEE 1394 (FireWire) Support."
  lineinfile:
    path: /etc/modprobe.d/blacklist.conf
    create: yes
    line: "{{ item.line }}"
  loop:
    - { line: 'install firewire-core /bin/true' }
    - { line: 'blacklist firewire-core' }

- name: "RHEL-08-040111 | MEDIUM | RHEL 8 must disable bluetooth."
  lineinfile:
    path: /etc/modprobe.d/blacklist.conf
    create: yes
    line: "{{ item.line }}"
  loop:
    - { line: 'install bluetooth /bin/true' }
    - { line: 'blacklist bluetooth' }

- name: "RHEL-08-040161 | MEDIUM | Remove RekeyLimit from /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: false
    regexp: (?i)^\s*RekeyLimit\s+
    state: absent

- name: "RHEL-08-040161 | MEDIUM | Insert RekeyLimit into /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: yes
    line: RekeyLimit {{ Var_040161_040341_Rekey_Limit_Size }} {{ Var_040161_040341_Rekey_Limit_Time }}
    state: present
    insertbefore: ^[#\s]*Match
    validate: /usr/sbin/sshd -t -f %s

- name: "RHEL-08-040162 | MEDIUM | PATCH | RHEL 8 must force a frequent session key renegotiation for SSH connections by the client."
  lineinfile:
      path: /etc/ssh/ssh_config
      regexp: '^#\s*RekeyLimit 1G 1h.*$'
      line: 'RekeyLimit 1G 1h'

- name: "Ensure that rekey limit is set to {{ Var_040161_040341_Rekey_Limit_Size }} {{ Var_040161_040341_Rekey_Limit_Time }} in /etc/ssh/ssh_config.d/02-rekey-limit.conf"
  lineinfile:
    path: /etc/ssh/ssh_config.d/02-rekey-limit.conf
    create: yes
    mode: 644
    regexp: ^\s*RekeyLimit.*$
    line: RekeyLimit {{ Var_040161_040341_Rekey_Limit_Size }} {{ Var_040161_040341_Rekey_Limit_Time }} # noqa risky-octal
    state: present

- name: "RHEL-08-040172 | HIGH | Disable Ctrl-Alt-Del Burst Action"
  lineinfile:
    dest: /etc/systemd/system.conf
    state: present
    regexp: ^CtrlAltDelBurstAction
    line: CtrlAltDelBurstAction=none
    create: yes

- name: "RHEL-08-040210 | MEDIUM | RHEL 8 must prevent Internet Control Message Protocol (ICMPv4) redirect messages from being accepted."
  sysctl:
    name: net.ipv4.conf.default.accept_redirects
    value: 0

- name: "RHEL-08-040210 | MEDIUM | RHEL 8 must prevent Internet Control Message Protocol (ICMPv6) redirect messages from being accepted."
  lineinfile:
    path: /etc/sysctl.d/99-sysctl.conf
    line: 'net.ipv6.conf.default.accept_redirects=0'
    create: yes

- name: "RHEL-08-040220 | MEDIUM | RHEL 8 must not send Internet Control Message Protocol (ICMP) redirects."
  sysctl:
    name: net.ipv4.conf.all.send_redirects
    value: 0

- name: "RHEL-08-040230 | MEDIUM | RHEL 8 must not respond to Internet Control Message Protocol (ICMP) echoes sent to a broadcast address."
  sysctl:
    name: net.ipv4.icmp_echo_ignore_broadcasts
    value: 1

- name: "RHEL-08-040240 | MEDIUM | RHEL 8 must not forward source-routed IPv4 packets."
  sysctl:
    name: net.ipv4.conf.all.accept_source_route
    value: 0

- name: "RHEL-08-040240 | MEDIUM | RHEL 8 must not forward source-routed IPv6 packets."
  lineinfile:
    path: /etc/sysctl.d/99-sysctl.conf
    line: 'net.ipv6.conf.all.accept_source_route=0'
    create: yes

- name: "RHEL-08-040250 | MEDIUM | RHEL 8 must not forward source-routed packets by default."
  sysctl:
    name: net.ipv4.conf.default.accept_source_route
    value: 0

# REMOVED because this breaks remote SENSOR! DO NOT ADD IT BACK.
# - name: "RHEL-08-040260 | MEDIUM | RHEL 8 must not be performing IPv4 packet forwarding unless the system is a router."
#   sysctl:
#     name: net.ipv4.ip_forward
#     value: 0

- name: "RHEL-08-040260 | MEDIUM | RHEL 8 must not be performing IPv6 packet forwarding unless the system is a router."
  lineinfile:
    path: /etc/sysctl.d/99-sysctl.conf
    line: 'net.ipv6.conf.all.forwarding=0'
    create: yes

- name: "RHEL-08-040261 | MEDIUM | PATCH | RHEL 8 must not accept router advertisements on all IPv6 interfaces. | Set accept_ra in sysctl"
  sysctl:
    name: net.ipv6.conf.all.accept_ra
    state: present
    value: '0'

- name: "RHEL-08-040261 | MEDIUM | PATCH | RHEL 8 must not accept router advertisements on all IPv6 interfaces. | Set accept_ra value to 0"
  lineinfile:
    path: /etc/sysctl.d/99-sysctl.conf
    regexp: '^net.ipv6.conf.all.accept_ra'
    line: 'net.ipv6.conf.all.accept_ra=0'

- name: "RHEL-08-040262 | MEDIUM | PATCH | RHEL 8 must not accept router advertisements on all IPv6 interfaces by default. | Set accept_ra in sysctl"
  sysctl:
    name: net.ipv6.conf.default.accept_ra
    state: present
    value: '0'

- name: "RHEL-08-040262 | MEDIUM | PATCH | RHEL 8 must not accept router advertisements on all IPv6 interfaces by default. | Set accept_ra to value 0"
  lineinfile:
    path: /etc/sysctl.d/99-sysctl.conf
    regexp: '^net.ipv6.conf.default.accept_ra'
    line: 'net.ipv6.conf.default.accept_ra=0'

- name: "RHEL-08-040270 | MEDIUM | RHEL 8 must not allow interfaces to perform Internet Control Message Protocol (ICMP) redirects by default."
  sysctl:
    name: net.ipv4.conf.default.send_redirects
    value: 0

- name: "RHEL-08-040280 | MEDIUM | RHEL 8 must ignore Internet Control Message Protocol (ICMPv4) redirect messages."
  sysctl:
    name: net.ipv4.conf.all.accept_redirects
    value: 0

- name: "RHEL-08-040280 | MEDIUM | RHEL 8 must ignore Internet Control Message Protocol (ICMPv6) redirect messages."
  lineinfile:
    path: /etc/sysctl.d/99-sysctl.conf
    line: 'net.ipv6.conf.all.accept_redirects = 0'
    create: yes

- name: "RHEL-08-040281 | MEDIUM | PATCH | RHEL 8 must disable access to network bpf syscall from unprivileged processes."
  lineinfile:
      path: /etc/sysctl.d/99-sysctl.conf
      regexp: '^kernel.unprivileged_bpf_disabled'
      line: 'kernel.unprivileged_bpf_disabled = 1'

- name: "RHEL-08-040282 | MEDIUM | PATCH | RHEL 8 must restrict usage of ptrace to descendant processes."
  lineinfile:
      path: /etc/sysctl.d/99-sysctl.conf
      regexp: '^kernel.yama.ptrace_scope'
      line: 'kernel.yama.ptrace_scope = 1'

- name: "RHEL-08-040341 | MEDIUM | Remove X11UseLocalhost values from /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: false
    regexp: (?i)^\s*X11UseLocalhost\s+
    state: absent

- name: "RHEL-08-040341 | MEDIUM | Insert X11UseLocalhost values into /etc/ssh/sshd_config"
  lineinfile:
    path: /etc/ssh/sshd_config
    create: yes
    line: X11UseLocalhost yes
    state: present
    insertbefore: ^[#\s]*Match
    validate: /usr/sbin/sshd -t -f %s

- name: "RHEL-08-040350 | MEDIUM | If the Trivial File Transfer Protocol server is required, the daemon must be configured to operate in secure mode."
  lineinfile:
    path: /etc/xinetd.d/tftp
    regexp: '^server_args'
    line: server_args = -s /var/lib/tftpboot
    create: yes

- name: "RHEL-08-040370 | MEDIUM | The gssproxy package must not be installed unless mission essential on RHEL 8."
  yum:
    name: gssproxy
    state: removed
  when: inventory_hostname != "localhost"

- name: "RHEL-08-040380 | MEDIUM | The iprutils package must not be installed unless mission essential on RHEL 8."
  yum:
    name: iprutils
    state: removed
  when: inventory_hostname != "localhost"

- name: "RHEL-08-040390 | MEDIUM | The tuned package must not be installed unless mission essential on RHEL 8."
  yum:
    name: tuned
    state: removed
  when: inventory_hostname != "localhost"

- name: sysctl system
  command: sysctl --system
  register: sysctl_system
  changed_when: sysctl_system.rc == 0

- name: Reboot system
  reboot:
    reboot_timeout: 2000
    test_command: "whoami"
  when:
      - hostvars[inventory_hostname].node_type in ('Server', 'Sensor', 'Service')
      - hostvars[inventory_hostname].deployment_type not in ('Iso')
