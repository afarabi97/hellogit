# RHEL-07-030740
- name: "Search files in {{ audit_directory }} for mount ruleset."
  find:
    paths: "{{ audit_directory }}"
    recurse: false
    contains: -F key=mount$
    patterns: '*.rules'
  register: find_mount

- name: "If mount ruleset not found, use {{ audit_directory }}/privileged.rules as the recipient for the rule"
  set_fact:
    all_files:
    - "{{ audit_directory }}/privileged.rules"

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_mount.files | map(attribute=''path'') | list | first }}'
  when:
  - find_mount.matched is defined and find_mount.matched > 0

- name: "Inserts/replaces the mount rule in {{ audit_directory }} (x86)"
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=unset -k mount
    create: true

- name: "Inserts/replaces the mount rule in {{ audit_directory }} (x86_64)"
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=unset -k mount
    create: true
