---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    component: zeek
spec:
  replicas: 1
  selector:
    matchLabels:
      component: zeek
  template:
    metadata:
      labels:
        component: zeek
        deployment: {{ .Release.Name }}
    spec:
      hostNetwork: true
      initContainers:
      - name: init-zeek
        image: "{{ .Values.image_name }}:{{ .Values.image_tag }}"
        imagePullPolicy: IfNotPresent
        command:
          - "/bin/sh"
          - "-c"
          - "/bin/touch -a /opt/zeek/share/zeek/site/custom/__load__.zeek; rm -rf {{ .Values.zeek_log_path }}/*"
        volumeMounts:
        - name: custom-scripts
          mountPath: /opt/zeek/share/zeek/site/custom
        - name: zeekctl-logs
          mountPath: {{ .Values.zeek_log_path }}
      containers:
      - name: zeek
        image: "{{ .Values.image_name }}:{{ .Values.image_tag }}"
        imagePullPolicy: IfNotPresent
        securityContext:
              capabilities:
                add:
                  - NET_ADMIN
                  - NET_RAW
                  - SYS_NICE
        startupProbe:
          exec:
            command:
            - "/bin/bash"
            - "-c"
            - "STATUS=$(/opt/zeek/bin/zeekctl status | grep running | wc -l); if [[ $STATUS != {{ add 3 (.Values.zeek_workers | int) }} ]]; then exit 1; fi"
          initialDelaySeconds: 20
          periodSeconds: 5
          failureThreshold: 3
        livenessProbe:
          exec:
            command:
            - "/bin/bash"
            - "-c"
            - "STATUS=$(/opt/zeek/bin/zeekctl status | grep running | wc -l); if [[ $STATUS != {{ add 3 (.Values.zeek_workers | int) }} ]]; then exit 1; fi"
          initialDelaySeconds: 30
          periodSeconds: 30
          failureThreshold: 5
          timeoutSeconds: 60
        resources:
          requests:
            cpu: {{ mul 1000 (.Values.zeek_workers | int) }}m
        volumeMounts:
        - name: intel-dat
          mountPath: {{ .Values.zeek_intel_dat }}
          readOnly: true
        - name: sig-file
          mountPath: {{ .Values.zeek_custom_sig_path }}
          readOnly: true
        - name: current-logs
          mountPath: {{ .Values.zeek_log_current_path }}
        - name: zeekctl-logs
          mountPath: {{ .Values.zeek_log_path }}
        - name: custom-scripts
          mountPath: /opt/zeek/share/zeek/site/custom
          readOnly: true
        - name: scripts
          mountPath: /opt/zeek/share/zeek/site/tfplenum
          readOnly: true
        - name: default-scripts
          subPath: local.zeek
          mountPath: /opt/zeek/share/zeek/site/local.zeek
        - name: default-scripts
          subPath: networks.cfg
          mountPath: /opt/zeek/etc/networks.cfg
          readOnly: true
        - name: default-scripts
          subPath: node.cfg
          mountPath: /opt/zeek/etc/node.cfg
          readOnly: true
        - name: default-scripts
          subPath: zeekctl.cfg
          mountPath: /opt/zeek/etc/zeekctl.cfg
          readOnly: true
        workingDir: {{ .Values.zeek_log_path }}
      restartPolicy: Always
      volumes:
      - name: current-logs
        hostPath:
          path: {{ .Values.zeek_log_current_path }}
          type: DirectoryOrCreate
      - name: zeekctl-logs
        hostPath:
          path: {{ .Values.zeekctl_log_path }}
          type: DirectoryOrCreate
      - name: custom-scripts
        hostPath:
          path: {{ .Values.zeek_scripts }}
          type: DirectoryOrCreate
      - name: intel-dat
        hostPath:
          path: {{ .Values.zeek_intel_dat }}
          type: FileOrCreate
      - name: sig-file
        hostPath:
          path: {{ .Values.zeek_custom_sig_path }}
          type: FileOrCreate
      - name: default-scripts
        configMap:
          name: {{ .Release.Name }}
      - name: scripts
        configMap:
          name: {{ .Release.Name }}-scripts
      - name: webca
        secret:
          defaultMode: 420
          optional: false
          secretName: webca-certificate
      affinity:
        nodeAffinity: # Only schedule on the intended host
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - "{{ .Values.affinity_hostname }}"
        podAntiAffinity: # Do not allow more than one per host
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - zeek
            topologyKey: "kubernetes.io/hostname"
...
