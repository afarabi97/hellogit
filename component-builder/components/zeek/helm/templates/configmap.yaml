---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}
  labels:
    component: zeek
data:
  local.zeek: |
    # Load some defaults
    @load misc/loaded-scripts
    @load tuning/defaults
    @load misc/capture-loss
    @load misc/stats
    @load misc/scan
    @load frameworks/software/vulnerable
    @load frameworks/software/version-changes
    @load-sigs frameworks/signatures/detect-windows-shells
    @load protocols/ftp/software
    @load protocols/smtp/software
    @load protocols/ssh/software
    @load protocols/http/software
    @load protocols/dns/detect-external-names
    @load protocols/ftp/detect
    @load protocols/conn/known-hosts
    @load protocols/conn/known-services
    @load protocols/ssl/known-certs
    @load protocols/ssl/validate-certs
    @load protocols/ssl/validate-ocsp
    @load protocols/ssl/notary
    @load protocols/ssl/log-hostcerts-only
    @load protocols/ssh/geo-data
    @load protocols/ssh/detect-bruteforcing
    @load protocols/ssh/interesting-hostnames
    @load protocols/http/detect-sqli
    @load frameworks/files/hash-all-files
    @load frameworks/files/detect-MHR
    @load policy/frameworks/notice/extend-email/hostnames
    @load base/protocols/smb
    @load policy/frameworks/intel/seen
    @load frameworks/intel/do_notice
    @load frameworks/files/hash-all-files

    # Load tfplenum scripts
    @load ./tfplenum

    # TFPlenum-specific things
    @load custom # Rules provided by operator
    @load Corelight/CommunityID # Community ID plugin

    # JSON output
    @load tuning/json-logs

    redef LogAscii::use_json = T;
    redef Intel::read_files += { "{{ .Values.zeek_intel_dat }}" };
    redef signature_files  += "{{ .Values.zeek_custom_sig_path }}";

  networks.cfg: |
{{- if has "any" .Values.home_net }}
        0.0.0.0/0
{{- else }}
    {{- range .Values.home_net }}
        {{ . }}
{{- end }}
{{- end }}


  node.cfg: |
    [logger]
    type=logger
    host=localhost
    [manager]
    type=manager
    host=localhost
    [proxy]
    type=proxy
    host=localhost
{{- range $i, $interface := .Values.interfaces }}
    [worker-{{ $i }}]
    type=worker
    host=localhost
    interface=af_packet::{{ $interface }}
    lb_method=custom
    lb_procs={{ $.Values.zeek_workers }}
    af_packet_fanout_id={{ add 22 $i }}
    af_packet_fanout_mode=AF_Packet::FANOUT_HASH
    af_packet_buffer_size=128*1024*1024
{{- end }}

  zeekctl.cfg: |
    ## Global ZeekControl configuration file.

    ###############################################
    # Mail Options

    #Disables mail options
    SendMail =

    ###############################################
    # Logging Options

    # Rotation interval in seconds for log files on manager (or standalone) node.
    # A value of 0 disables log rotation.
    LogRotationInterval = {{ .Values.ids_log_rotate_interval }}

    # Expiration interval for archived log files in LogDir.  Files older than this
    # will be deleted by "zeekctl cron".  The interval is an integer followed by
    # one of these time units:  day, hr, min.  A value of 0 means that logs
    # never expire.
    LogExpireInterval = 10 min

    # Enable ZeekControl to write statistics to the stats.log file.  A value of 1
    # means write to stats.log, and a value of 0 means do not write to stats.log.
    StatsLogEnable = 1

    # Number of days that entries in the stats.log file are kept.  Entries older
    # than this many days will be removed by "zeekctl cron".  A value of 0 means
    # that entries never expire.
    StatsLogExpireInterval = 1

    ###############################################
    # Other Options

    # Show all output of the zeekctl status command.  If set to 1, then all output
    # is shown.  If set to 0, then zeekctl status will not collect or show the peer
    # information (and the command will run faster).
    StatusCmdShowAll = 0

    # Number of days that crash directories are kept.  Crash directories older
    # than this many days will be removed by "zeekctl cron".  A value of 0 means
    # that crash directories never expire.
    CrashExpireInterval = 1

    # Site-specific policy script to load. Zeek will look for this in
    # $PREFIX/share/zeek/site. A default local.zeek comes preinstalled
    # and can be customized as desired.
    SitePolicyScripts = local.zeek

    # Location of the log directory where log files will be archived each rotation
    # interval.
    LogDir = {{ $.Values.zeek_log_path }}

    # Location of the spool directory where files and data that are currently being
    # written are stored.
    SpoolDir = {{ $.Values.zeek_log_path }}

    # Location of the directory in which the databases for Broker datastore backed
    # Zeek tables are stored.
    BrokerDBDir = /opt/zeek/etc

    # Location of other configuration files that can be used to customize
    # ZeekControl operation (e.g. local networks, nodes).
    CfgDir = /opt/zeek/etc
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-scripts
  labels:
    component: zeek
data:
  __load__.zeek: |
    # Custom Scripts
    @load ./ja3.zeek
    @load ./ja3s.zeek
    @load ./intel_ja3.zeek
    @load ./hassh.zeek
    @load ./new-certs.zeek
    @load ./ssl-add-cert-hash.zeek
    @load ./ssl-add-cert-date.zeek

{{ range $path, $_ :=  .Files.Glob  "files/*" }}
  {{ base $path }}: |
{{ $.Files.Get $path | indent 4 }}
{{ end }}
---
