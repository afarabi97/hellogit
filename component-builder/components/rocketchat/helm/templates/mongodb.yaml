---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-mongodb
  labels:
    component: {{ .Release.Name }}-mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      component: {{ .Release.Name }}-mongodb
  serviceName: {{ .Release.Name }}-mongodb
  template:
    metadata:
      labels:
        component: {{ .Release.Name }}-mongodb
    spec:
      containers:
      - name: mongodb-primary
        image: {{ .Values.mongoImage.repository }}:{{ .Values.mongoImage.tag }}
        ports:
        - containerPort: 27017
          name: mongodb
          protocol: TCP
        env:
          - name: MONGODB_ROOT_PASSWORD
            value: password
          - name: MONGODB_PASSWORD
            value: password
          - name: MONGODB_DATABASE
            value: rocketchat
          - name: MONGODB_USERNAME
            value: rocketchat
          - name: MONGODB_REPLICA_SET_MODE
            value: "primary"
          - name: MONGODB_REPLICA_SET_NAME
            value: rs0
          - name: MONGODB_REPLICA_SET_KEY
            value: tfplenum
          - name: MONGODB_ENABLE_DIRECTORY_PER_DB
            value: "yes"
          - name: MONGODB_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MONGODB_ADVERTISED_HOSTNAME
            value: $(MONGODB_POD_NAME).{{ .Release.Name }}-mongodb.default.svc.cluster.local
        volumeMounts:
        - mountPath: /bitnami/mongodb
          name: mongo-data
      nodeSelector:
        role: {{ if .Values.serviceNode }}service{{ else }}server{{ end }}
      restartPolicy: Always
      securityContext:
        runAsUser: 0
      volumes:
      - name: mongo-data
        persistentVolumeClaim:
          claimName: mongo-pvc
