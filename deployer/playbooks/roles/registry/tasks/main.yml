#######################################################
###########  Install Docker Distribution ##############
#######################################################
---
- name: Import tfplenum variables
  include_vars:
    file: "{{ tfplenum_vars }}"
  tags: pull-docker-images

- name: Install Docker Dist
  yum:
    name: docker-distribution
    state: installed

- name: docker-dist config template
  template:
    backup: yes
    src: config.yml.j2
    dest: /etc/docker-distribution/registry/config.yml
    owner: root
    group: root
    mode: 0644
  register: docker_dist_config_result

- name: Register Firewall Port
  firewalld:
    port: "{{ firewall_port }}/tcp"
    permanent: true
    immediate: true
    state: enabled

- name: Enable docker distribution service
  systemd:
    name: docker-distribution
    enabled: yes
    state: started
    daemon_reload: yes

- name: Restart docker-dist
  service:
    name: docker-distribution
    state: restarted
    enabled: yes
  when: docker_dist_config_result.changed

- name: Install Docker
  yum:
    name:
      - docker-ce
    state: installed


- name: Create directory docker directory
  file:
    path: /etc/docker
    state: directory
    owner: root
    group: root
    mode: 0755

- name: docker daemon conf
  template:
    backup: yes
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: 0644
  register: docker_config_result

- name: Restart Docker
  systemd:
    name: docker
    enabled: yes
    state: restarted

- name: Download docker container images from internet
  shell: |
    docker pull {{ item }}
  with_items:
    - "{{ kube_images }}"
  async: 1000
  poll: 0
  register: docker_pull_results
  tags: pull-docker-images

- name: Waiting for docker images to download
  async_status:
    jid: "{{ async_result_item.ansible_job_id }}"
  loop: "{{ docker_pull_results.results }}"
  loop_control:
    loop_var: "async_result_item"
  register: job_results
  until: job_results.finished is defined and job_results.finished
  retries: 120
  tags: pull-docker-images

- name: Tag local images for upload to registry
  shell: "docker tag {{ item }} localhost:{{ firewall_port }}/{{ item[item.find('/')+1:] }}"
  with_items:
    - "{{ kube_images }}"
  tags: pull-docker-images

- name: Upload local images to registry
  shell: |
    docker push localhost:{{ firewall_port }}/{{ item[item.find('/')+1:] }}
  with_items:
    - "{{ kube_images }}"
  async: 1000
  poll: 0
  register: docker_push_results
  tags: pull-docker-images

- name: Waiting for docker images to push
  async_status:
    jid: "{{ async_result_item.ansible_job_id }}"
  loop: "{{ docker_push_results.results }}"
  loop_control:
    loop_var: "async_result_item"
  register: job_push_results
  until: job_push_results.finished is defined and job_push_results.finished
  retries: 120
  tags: pull-docker-images

...
