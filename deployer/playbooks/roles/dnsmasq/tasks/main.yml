---
- name: Set_fact management_interface ipv4
  set_fact:
    management_interface: "{{ ansible_default_ipv4.interface }}"

- name: Delete existing files
  file:
    state: absent
    path: "{{ item }}"
  with_items:
    - "{{ dnsmasq_conf_file }}"
    - "{{ host_dir }}"

- name: Install dnsmasq
  yum:
    name:
      - dnsmasq
      - bind-utils
    state: installed

- name: "Create host dir"
  file:
    path: "{{ host_dir }}"
    state: directory
    owner: root
    group: root
    mode: u+rw,g+rw

- name: Create dnsmasq conf
  template:
    src: templates/10-dnsmasq.conf.j2
    dest: "{{ dnsmasq_conf_file }}"
  register: dnsmasq_conf

- name: Configure firewalld
  firewalld:
    zone: public
    service: dns
    permanent: true
    state: enabled
    immediate: yes

- name: "Create dnsmasq directory for override"
  file:
    path: "/etc/systemd/system/dnsmasq.service.d"
    state: directory
    owner: root

- name: override default dnsmasq service
  copy:
    src: "files/override.conf"
    dest: "/etc/systemd/system/dnsmasq.service.d/override.conf"
    group: root
    owner: root
    mode: 0644
  register: dnsmasq_conf

- name: Start dnsmasq and enable it
  systemd:
    name: dnsmasq
    state: restarted
    enabled: yes
    daemon-reload: yes

- import_tasks: update-etc-hosts.yml
  tags: update_etc_hosts

- name: update-dns cron
  cron:
    name: update-dns
    user: root
    job: "cd /opt/tfplenum/deployer/playbooks/ && ansible-playbook site.yml -i inventory.yml -t update_etc_hosts"
    state: present
