---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    component: suricata
spec:
  replicas: 1
  selector:
    matchLabels:
      component: suricata
  template:
    metadata:
      labels:
        component: suricata
    spec:
      hostNetwork: true
      initContainers:
      - name: init-suricata
        image: "{{ .Values.image_name }}:{{ .Values.image_tag }}"
        imagePullPolicy: IfNotPresent
        command: [ '/bin/sh', '-c', 'echo -e "function init (args)\n    local needs = {}\n    needs[\"protocol\"] = \"http\"\n    return needs\nend\n\nfunction setup (args)\nend\n\nfunction log(args)\nend\n\nfunction deinit (args)\n -- Test\nend\n" > /etc/suricata/lua-output/script1.lua && /usr/bin/touch /etc/suricata/rules/suricata.rules']
        securityContext:
          privileged: true
        volumeMounts:
        - name: rules
          mountPath: /etc/suricata/rules
        - name: luascripts
          mountPath: /etc/suricata/lua-output
      containers:
      - name: suricata
        image: "{{ .Values.image_name }}:{{ .Values.image_tag }}"
        imagePullPolicy: IfNotPresent
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
              - NET_RAW
              - SYS_NICE
              - IPC_LOCK
        resources:
          requests:
            cpu: {{ .Values.cpu_request }}m
        volumeMounts:
        - name: configs
          mountPath: /etc/suricata/suricata.yaml
          subPath: suricata.yaml
        - name: rules
          mountPath: /etc/suricata/rules
          readOnly: true
        - name: luascripts
          mountPath: /etc/suricata/lua-output
          readOnly: true
        - name: logs
          mountPath: /var/log/suricata
        args: ['-c', '/etc/suricata/suricata.yaml', '--af-packet']
      volumes:
      - name: configs
        configMap:
          name: {{ .Release.Name }}
      - name: rules
        hostPath:
          path: {{ .Values.suricata_directory }}/rules
          type: DirectoryOrCreate
      - name: luascripts
        hostPath:
          path: {{ .Values.suricata_directory }}/lua-output
          type: DirectoryOrCreate
      - name: logs
        hostPath:
          path: {{ .Values.suricata_log_path }}
          type: DirectoryOrCreate
      affinity:
        nodeAffinity: # Only schedule on the intended host
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - "{{ .Values.affinity_hostname }}"
        podAntiAffinity: # Do not allow more than one per host
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - suricata
            topologyKey: "kubernetes.io/hostname"
...
