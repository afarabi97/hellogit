---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    component: moloch
    app: moloch-capture
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moloch-capture
  template:
    metadata:
      labels:
        component: moloch
        app: moloch-capture
    spec:
      hostNetwork: true
      initContainers:
      - name: init-sync-files
        image: "{{ .Values.image }}:{{ .Values.version }}"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args: ["-c", "/data/moloch/db/db.pl --insecure https://{{ .Values.es_user }}:{{ .Values.es_password }}@{{ .Values.elastic_fqdn }}:{{ .Values.elastic_port }} sync-files {{ regexReplaceAll "\\.(lan)?$" .Values.affinity_hostname "" }} /data/moloch/raw/"]
      containers:
      - name: capture
        image: "{{ .Values.image }}:{{ .Values.version }}"
        imagePullPolicy: IfNotPresent
        env:
        - name: CONTAINER_TYPE
          value: "CAPTURE"
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
              - NET_ADMIN
              - NET_RAW
              - SYS_NICE
              - SYS_RESOURCE
        resources:
          requests:
            cpu: {{ .Values.cpu_request }}m
          limits:
            memory: {{ .Values.mem_limit }}
        volumeMounts:
        - name: configini
          subPath: config.ini
          mountPath: {{ .Values.path }}/etc/config.ini
          readOnly: true
        - name: data
          mountPath: {{ .Values.pcap_path }}
        - mountPath: /etc/ssl/certs/elasticsearch-ca.crt
          name: elasticsearch-certs
          readOnly: true
          subPath: ca.crt
        - mountPath: /etc/ssl/certs/kibana-ca.crt
          name: kibana-certs
          readOnly: true
          subPath: ca.crt
      - name: viewer
        image: "{{ .Values.image }}:{{ .Values.version }}"
        imagePullPolicy: IfNotPresent
        env:
        - name: CONTAINER_TYPE
          value: "VIEWER"
        ports:
          - containerPort: {{ .Values.port }}
            name: webgui
        volumeMounts:
        - name: configini
          subPath: config.ini
          mountPath: {{ .Values.path }}/etc/config.ini
          readOnly: true
        - name: data
          mountPath: {{ .Values.pcap_path }}
        - mountPath: /etc/ssl/certs/elasticsearch-ca.crt
          name: elasticsearch-certs
          readOnly: true
          subPath: ca.crt
        - mountPath: /etc/ssl/certs/kibana-ca.crt
          name: kibana-certs
          readOnly: true
          subPath: ca.crt
      restartPolicy: Always
      volumes:
      - name: configini
        configMap:
          name: {{.Release.Name}}
      - name: data
        hostPath:
          path: {{ .Values.fpc_path }}
          type: DirectoryOrCreate
      - name: elasticsearch-certs
        secret:
          defaultMode: 420
          optional: false
          secretName: tfplenum-es-http-certs-public
      - name: kibana-certs
        secret:
          defaultMode: 420
          optional: false
          secretName: tfplenum-kb-http-certs-public
      affinity:
        nodeAffinity: # Only schedule on the intended host
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - "{{ .Values.affinity_hostname }}"
        podAntiAffinity: # Do not allow more than one per host
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - moloch-capture
            topologyKey: "kubernetes.io/hostname"
