apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    component: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: {{ .Release.Name }}
  template:
    metadata:
      labels:
        component: {{ .Release.Name }}
    spec:
      initContainers:
      - name: hive-init
        image: "{{ .Values.python_image }}"
        imagePullPolicy: IfNotPresent
        command:
        - "/bin/sh"
        - "-c"
        - "python3 -u /init_setup.py"
        securityContext:
          runAsUser: 0
        env:
        - name: CORTEX_INTEGRATION
          value: {{ .Values.cortexIntegration | quote }}
{{- if .Values.cortexIntegration }}
        - name: CORTEX_SUPERADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: cortex-secret
              key: superadmin_username
        - name: CORTEX_SUPERADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cortex-secret
              key: superadmin_password
        - name: CORTEX_USER_USERNAME
          valueFrom:
            secretKeyRef:
              name: cortex-secret
              key: org_user_username
{{- end }}
        - name: KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: keystore_password
        volumeMounts:
        - name: api-cache
          mountPath: /tmp/hive
          subPath: hive-data
        - name: api-cache
          mountPath: /tmp/keystore
          subPath: keystore
        - name: hiveconfig
          mountPath: /data/config.conf
          subPath: hive.conf
        - name: webca
          mountPath: /etc/ssl/certs/container
          readOnly: true
        - name: setup
          mountPath: /init_setup.py
          subPath: init_setup.py
        - name: data
          mountPath: /tmp/cassandra-data
          subPath: cassandra
        - name: data
          mountPath: /tmp/thehive-data
          subPath: thehive
      containers:
      - name: cassandra
        image: "{{ .Values.cassandra_image }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: cassandra
          containerPort: 9042
        env:
          - name: CASSANDRA_CLUSTER_NAME
            value: thehive
          - name: CASSANDRA_DC
            value: local
          - name: CASSANDRA_ENDPOINT_SNITCH
            value: GossipingPropertyFileSnitch
        volumeMounts:
        - name: data
          mountPath: /var/lib/cassandra
          subPath: cassandra
      - name: nginx
        image: "{{ .Values.nginx_image }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: https
          containerPort: 443
        command:
        - "/bin/sh"
        - "-c"
        - "cat /etc/ssl/certs/container/tls.crt /etc/ssl/certs/container/ca.crt > /tmp/bundle.crt && exec nginx -g 'daemon off;'"
        volumeMounts:
        - name: nginx-configmap
          mountPath: "/etc/nginx/conf.d/default.conf"
          subPath: default.conf
        - name: webca
          mountPath: /etc/ssl/certs/container
          readOnly: true
      - name: hive
        image: "{{ .Values.hive_image }}"
        imagePullPolicy: IfNotPresent
        command:
        - "/bin/sh"
        - "-c"
        - "export $(cat /etc/thehive/application.env | xargs) && /opt/thehive/entrypoint --no-config"
        env:
        - name: APPLICATION_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: application_secret
{{- if .Values.mispIntegration }}
        - name: MISP_API_KEY
          valueFrom:
            secretKeyRef:
              name: misp-secret
              key: hive_user_api_key
{{- end }}
        - name: KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: keystore_password
        - name: OPEN_ID_SECRET
          valueFrom:
            secretKeyRef:
              name: hive-openid
              key: openid-secret
        - name: THEHIVE_ORGANIZATION
          value: {{ .Values.org_name }}
        ports:
        - containerPort: {{ .Values.hive_port }}
        volumeMounts:
        - name: api-cache
          mountPath: /usr/local/openjdk-8/jre/lib/security/cacerts
          subPath: keystore/cacerts
        - name: data
          mountPath: /opt/thp_data/files/thehive
          subPath: thehive
        - name: hiveconfig
          mountPath: /etc/thehive/application.conf
          subPath: hive.conf
        - name: api-cache
          mountPath: /etc/thehive/application.env
          subPath: hive-data/application.env
        - name: api-cache
          mountPath: /etc/thehive/webCA.jks
          subPath: keystore/webCA.jks
      nodeSelector:
        role: "server"
      volumes:
      - name: hiveconfig
        configMap:
          name: {{ .Release.Name }}-config
      - name: {{ .Release.Name }}-secret
        secret:
          secretName: {{ .Release.Name }}-secret
      - name: setup
        configMap:
          name: {{ .Release.Name }}-setup
          defaultMode: 0777
      - name: webca
        secret:
          defaultMode: 420
          optional: false
          secretName: {{ .Release.Name }}-certificate
      - name: nginx-configmap
        configMap:
          name: {{ .Release.Name }}-nginx
          defaultMode: 0444
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-pvc
      - name: api-cache
        emptyDir: {}
