---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-config
data:
  hive.conf: |
    ###
    ## Documentation is available at https://github.com/TheHive-Project/TheHiveDocs/TheHive4
    ###

    ## Include Play secret key
    # More information on secret key at https://www.playframework.com/documentation/2.8.x/ApplicationSecret
    play.http.secret.key=${?APPLICATION_SECRET}

    ## Database configuration
    db {
      provider: janusgraph
      janusgraph {
        storage {
          backend: cql
          hostname: [
            "127.0.0.1"
          ] # seed node ip addresses

          #username: "<cassandra_username>"       # login to connect to database (if configured in Cassandra)
          #password: "<cassandra_passowrd"

          cql {
            cluster-name: thehive       # cluster name
            keyspace: thehive           # name of the keyspace
            local-datacenter: local   # name of the datacenter where TheHive runs (relevant only on multi datacenter setup)
            # replication-factor: 2 # number of replica
            read-consistency-level: ONE
            write-consistency-level: ONE
          }
        }
      }
    }

    ## Attachment storage configuration
    storage {
      ## Local filesystem
      provider: localfs
      localfs.directory: /opt/thp_data/files/thehive
    }

    ## Authentication configuration
    # More information at https://github.com/TheHive-Project/TheHiveDocs/TheHive4/Administration/Authentication.md
    auth {
      providers: [
        {name: session}
        {name: basic, realm: thehive}
        {name: local}
        {name: key}
        {
          name: oauth2
          clientId: "hive"
          clientSecret: "##OPEN_ID_SECRET##"
          redirectUri: "https://hive.{{ .Values.domain }}/api/ssoLogin"
          responseType: "code"
          grantType: "authorization_code"
          authorizationUrl: "{{ .Values.auth_base }}/protocol/openid-connect/auth"
          authorizationHeader: "Bearer"
          tokenUrl: "{{ .Values.auth_base }}/protocol/openid-connect/token"
          userUrl: "{{ .Values.auth_base }}/protocol/openid-connect/userinfo"
          scope: ["openid"]
          userIdField: "upn"
        }
      ]
      defaultUserDomain: "thehive.local"
    }

    ## CORTEX configuration
{{- if .Values.cortexIntegration }}
    # More information at https://github.com/TheHive-Project/TheHiveDocs/TheHive4/Administration/Connectors.md
    # Enable Cortex connector
    play.modules.enabled += org.thp.thehive.connector.cortex.CortexModule
    cortex {
      servers = [
        {
          name = "cortex-local"
          url = "https://cortex.default.svc.cluster.local"
          auth {
            type = "bearer"
            key = "##CORTEX_API_KEY##"
          }
          # HTTP client configuration (SSL and proxy)
          wsConfig {
            ssl.trustManager.stores = [{
              path = /etc/thehive/webCA.jks
              type = "JKS" # or PKCS12
              password = "##KEYSTORE_PASSWORD##"
            }]
          }
          # List TheHive organisation which can use this Cortex server. All ("*") by default
          # includedTheHiveOrganisations = ["*"]
          # List TheHive organisation which cannot use this Cortex server. None by default
          # excludedTheHiveOrganisations = []
        }
      ]
      # Check job update time intervalcortex
      refreshDelay = 5 seconds
      # Maximum number of successive errors before give up
      maxRetryOnError = 3
      # Check remote Cortex status time interval
      statusCheckInterval = 1 minute
    }
{{ end }}

    ## MISP configuration
    # More information at https://github.com/TheHive-Project/TheHiveDocs/TheHive4/Administration/Connectors.md
    # Enable MISP connector
{{- if .Values.mispIntegration }}
    play.modules.enabled += org.thp.thehive.connector.misp.MispModule
    misp {
      interval: 1 hour
      servers: [
        {
          name = "misp-local"            # MISP name
          url = "https://misp.default.svc.cluster.local" # URL or MISP
          auth {
            type = key
            key = "##MISP_API_KEY##"             # MISP API key
          }
          wsConfig {
            ssl.trustManager.stores = [{
              path = /etc/thehive/webCA.jks
              type = "JKS" # or PKCS12
              password = "##KEYSTORE_PASSWORD##"
            }]
          }                       # HTTP client configuration (SSL and proxy)
          # Name of the case template in TheHive that shall be used to import
          # MISP events as cases by default.
          caseTemplate = "{{ .Values.case_template }}"
          #
          # Optional tags to add to each observable  imported  from  an  event
          # available on this instance.
          tags = ["misp-local"]
          #
          # The age of the last publish date
          max-age = 7 days
          #
          # Organization and tags
          # exclusion {
          #  organisation = ["bad organisation", "other orga"]
          #  tags = ["tag1", "tag2"]
          #  }
          # whitelist {
          #   tags = {"tag1", "tag2"}
          # }
        }
      ]
    }
{{ end }}
