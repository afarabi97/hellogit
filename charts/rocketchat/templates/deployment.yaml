apiVersion: {{ template "deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "rocketchat.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "rocketchat.name" . }}
    helm.sh/chart: {{ include "rocketchat.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "rocketchat.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "rocketchat.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/secret: {{ include (print .Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
      {{- end }}
      containers:
      - name: nginx
        image: "{{ .Values.nginxImage.repository }}:{{ .Values.nginxImage.tag }}"
        imagePullPolicy: {{ .Values.nginxImage.pullPolicy }}
        ports:
        - name: https
          containerPort: 443
        securityContext:
          runAsUser: 0
        command:
        - "/bin/sh"
        - "-c"
        - "cat /etc/ssl/certs/rocketchat.crt /etc/ssl/certs/webCA.crt > /tmp/bundle.crt && exec nginx -g 'daemon off;'"
        volumeMounts:
        - name: nginx-configmap
          mountPath: "/etc/nginx/conf.d/default.conf"
          subPath: default.conf
        - name: webca
          mountPath: /etc/ssl/certs/webCA.crt
          readOnly: true
          subPath: ca.crt
        - name: webca
          mountPath: /etc/ssl/certs/rocketchat.crt
          readOnly: true
          subPath: tls.crt
        - name: webca
          mountPath: /etc/ssl/certs/rocketchat.key
          readOnly: true
          subPath: tls.key
      - name: rocketchat
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: DEPLOY_PLATFORM
          value: helm-chart
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "rocketchat.fullname" . }}
              key: mongo-uri
        - name: MONGO_OPLOG_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "rocketchat.fullname" . }}
              key: mongo-oplog-uri
        - name: ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ template "rocketchat.fullname" . }}
              key: admin_user
        - name: ADMIN_PASS
          valueFrom:
            secretKeyRef:
              name: {{ template "rocketchat.fullname" . }}
              key: admin_pass
        - name: ADMIN_EMAIL
          valueFrom:
            secretKeyRef:
              name: {{ template "rocketchat.fullname" . }}
              key: admin_email
        - name: ROOT_URL
          value: http://{{ .Release.Name }}.lan
        {{- if .Values.smtp.enabled }}
        - name: MAIL_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "rocketchat.fullname" . }}
              key: mail-url
        {{- end }}
{{- with .Values.extraEnv }}
{{ tpl . $ | indent 8 }}
{{- end }}
        ports:
        - name: http
          containerPort: 3000
        livenessProbe:
          httpGet:
            path: /api/info
            port: http
          initialDelaySeconds: 480
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/info
            port: http
          initialDelaySeconds: 240
          timeoutSeconds: 5
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: rocket-data
          mountPath: /app/uploads
      nodeSelector:
        role: server
      volumes:
      - name: nginx-configmap
        configMap:
          name: {{ .Release.Name }}-nginx
          defaultMode: 0444
      - name: webca
        secret:
          defaultMode: 420
          optional: false
          secretName: {{ .Release.Name }}-certificate
      - name: rocket-data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "rocketchat.fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end }}
{{- if or .Values.podAntiAffinity .Values.affinity }}
      affinity:
{{- if .Values.affinity }}
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
{{- if eq .Values.podAntiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: {{ .Values.podAntiAffinityTopologyKey }}
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: {{ include "rocketchat.name" . }}
{{- else if eq .Values.podAntiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: {{ .Values.podAntiAffinityTopologyKey }}
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: {{ include "rocketchat.name" . }}
                  app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}
{{- end }}
