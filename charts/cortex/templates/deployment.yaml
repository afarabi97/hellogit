apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    component: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      component: {{ .Release.Name }}
  template:
    metadata:
      labels:
        component: {{ .Release.Name }}
    spec:
      initContainers:
      - name: elastic-init
        image: "busybox:1.31.1"
        securityContext:
          runAsUser: 0
        command:
        - "/bin/sh"
        - "-c"
        - "chown -R 1000 /elastic-data"
        volumeMounts:
        - name: data
          mountPath: /elastic-data
          subPath: elastic
      containers:
      - name: elastic
        image: "{{ .Values.elastic_image }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: elasticsearch
          containerPort: {{ .Values.elastic_port }}
        env:
          - name: http.host
            value: 0.0.0.0
          - name: cluster.name
            value: hive
          - name: thread_pool.index.queue_size
            value: "100000"
          - name: thread_pool.search.queue_size
            value: "100000"
          - name: thread_pool.bulk.queue_size
            value: "100000"
          - name: discovery.type
            value: single-node
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
          subPath: elastic
      - name: cortex-nginx
        image: "{{ .Values.nginx_image }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: https
          containerPort: 443
        securityContext:
          runAsUser: 0
        command:
        - "/bin/sh"
        - "-c"
        - "cat /etc/ssl/certs/cortex.crt /etc/ssl/certs/webCA.crt > /tmp/bundle.crt && exec nginx -g 'daemon off;'"
        volumeMounts:
        - name: nginx-configmap
          mountPath: "/etc/nginx/conf.d/default.conf"
          subPath: default.conf
        - name: webca
          mountPath: /etc/ssl/certs/webCA.crt
          readOnly: true
          subPath: ca.crt
        - name: webca
          mountPath: /etc/ssl/certs/cortex.crt
          readOnly: true
          subPath: tls.crt
        - name: webca
          mountPath: /etc/ssl/certs/cortex.key
          readOnly: true
          subPath: tls.key
      - name: cortex
        image: "{{ .Values.cortex_image }}"
        imagePullPolicy: IfNotPresent
        command:
        - "/bin/sh"
        - "-c"
        - "/etc/cortex/setup.py & /opt/cortex/entrypoint"
        ports:
        - name: cortex
          containerPort: {{ .Values.corex_port }}
        env:
          - name: CORTEX_SUPERADMIN_USERNAME
            valueFrom:
              secretKeyRef:
                name: cortex-secret
                key: superadmin_username
          - name: CORTEX_SUPERADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: cortex-secret
                key: superadmin_password
          - name: CORTEX_ORGANIZATION
            valueFrom:
              secretKeyRef:
                name: cortex-secret
                key: org_name
          - name: CORTEX_ADMIN_USERNAME
            valueFrom:
              secretKeyRef:
                name: cortex-secret
                key: org_admin_username
          - name: CORTEX_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: cortex-secret
                key: org_admin_password
          - name: CORTEX_USER_USERNAME
            valueFrom:
              secretKeyRef:
                name: cortex-secret
                key: org_user_username
          - name: CORTEX_USER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: cortex-secret
                key: org_user_password
        volumeMounts:
        - name: cortexconfig
          mountPath: /etc/cortex/application.conf
          subPath: cortex.conf
        - name: setup
          mountPath: /etc/cortex/setup.py
          subPath: setup.py
        - name: data
          mountPath: /opt/cortex/analyzers
          subPath: analyzers
      nodeSelector:
        role: "server"
      volumes:
      - name: cortexconfig
        configMap:
          name: {{ .Release.Name }}-config
      - name: setup
        configMap:
          name: {{ .Release.Name }}-setup
          defaultMode: 0777
      - name: cortex-secret
        secret:
          secretName: {{ .Release.Name }}-secret
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-pvc
      - name: webca
        secret:
          defaultMode: 420
          optional: false
          secretName: {{ .Release.Name }}-certificate
      - name: nginx-configmap
        configMap:
          name: {{ .Release.Name }}-nginx
          defaultMode: 0444
