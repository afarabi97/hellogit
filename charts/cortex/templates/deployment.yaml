apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    component: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: {{ .Release.Name }}
  template:
    metadata:
      labels:
        component: {{ .Release.Name }}
    spec:
      initContainers:
      - name: cortex-init
        image: "{{ .Values.python_image }}"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 0
        command:
        - "/bin/sh"
        - "-c"
        - "python3 /init_setup.py"
        env:
        - name: OPEN_ID_SECRET
          valueFrom:
            secretKeyRef:
              name: cortex-openid
              key: openid-secret
        - name: CORTEX_ORGANIZATION
          valueFrom:
            secretKeyRef:
              name: cortex-secret
              key: org_name
        volumeMounts:
        - name: data
          mountPath: /tmp/elastic-data
          subPath: elastic
        - name: api-cache
          mountPath: /tmp/cortex
          subPath: cortex-data
        - name: api-cache
          mountPath: /tmp/keystore
          subPath: keystore
        - name: cortexconfig
          mountPath: /data/config.conf
          subPath: cortex.conf
          readOnly: true
        - name: setup
          mountPath: /init_setup.py
          subPath: init_setup.py
          readOnly: true
        - name: webca
          mountPath: /etc/ssl/certs/container/
          readOnly: true
      containers:
      - name: elastic
        image: "{{ .Values.elastic_image }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: elasticsearch
          containerPort: {{ .Values.elastic_port }}
        env:
          - name: http.host
            value: 0.0.0.0
          - name: cluster.name
            value: hive
          - name: thread_pool.index.queue_size
            value: "100000"
          - name: thread_pool.search.queue_size
            value: "100000"
          - name: thread_pool.bulk.queue_size
            value: "100000"
          - name: discovery.type
            value: single-node
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
          subPath: elastic
      - name: nginx
        image: "{{ .Values.nginx_image }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: https
          containerPort: 443
        securityContext:
          runAsUser: 0
        command:
        - "/bin/sh"
        - "-c"
        - "cat /etc/ssl/certs/container/tls.crt /etc/ssl/certs/container/ca.crt > /tmp/bundle.crt && exec nginx -g 'daemon off;'"
        volumeMounts:
        - name: nginx-configmap
          mountPath: "/etc/nginx/conf.d/default.conf"
          subPath: default.conf
        - name: webca
          mountPath: /etc/ssl/certs/container
          readOnly: true
      - name: cortex
        image: "{{ .Values.cortex_image }}"
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        ports:
        - name: cortex
          containerPort: {{ .Values.corex_port }}
        volumeMounts:
        - name: api-cache
          mountPath: /etc/cortex/application.conf
          subPath: cortex-data/application.conf
        - name: api-cache
          mountPath: /usr/local/openjdk-8/jre/lib/security/cacerts
          subPath: keystore/cacerts
        - name: data
          mountPath: /opt/cortex/analyzers
          subPath: analyzers
        - name: webca
          mountPath: /etc/ssl/certs/container/
          readOnly: true
      nodeSelector:
        role: "server"
      volumes:
      - name: cortexconfig
        configMap:
          name: {{ .Release.Name }}-config
      - name: setup
        configMap:
          name: {{ .Release.Name }}-setup
          defaultMode: 0777
      - name: cortex-secret
        secret:
          secretName: {{ .Release.Name }}-secret
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-pvc
      - name: webca
        secret:
          defaultMode: 420
          optional: false
          secretName: {{ .Release.Name }}-certificate
      - name: nginx-configmap
        configMap:
          name: {{ .Release.Name }}-nginx
          defaultMode: 0444
      - name: api-cache
        emptyDir: {}
