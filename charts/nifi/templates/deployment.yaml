apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    component: {{ .Release.Name }}
spec:
  replicas: {{ .Values.nifi_replicas }}
  selector:
    matchLabels:
      component: {{ .Release.Name }}
  template:
    metadata:
      labels:
        component: {{ .Release.Name }}
    spec:
      initContainers:
      - name: nifi-init
        image: "busybox:1.31.1"
        securityContext:
          runAsUser: 0
        command:
        - "/bin/sh"
        - "-c"
        - "chown -R 1000:1000 {{ .Values.nifi_base_dir }}"
        volumeMounts:
        - name: nifi-data
          mountPath: {{ .Values.nifi_base_dir }}/logs
          subPath: logs
        #- name: nifi-data
      #    mountPath: {{ .Values.nifi_base_dir }}/conf
      #    subPath: conf
        - name: nifi-data
          mountPath: {{ .Values.nifi_base_dir }}/database_repository
          subPath: database_repository
        - name: nifi-data
          mountPath: {{ .Values.nifi_base_dir }}/flowfile_repository
          subPath: flowfile_repository
        - name: nifi-data
          mountPath: {{ .Values.nifi_base_dir }}/content_repository
          subPath: content_repository
        - name: nifi-data
          mountPath: {{ .Values.nifi_base_dir }}/provenance_repository
          subPath: provenance_repository
        - name: nifi-data
          mountPath: {{ .Values.nifi_base_dir }}/state
          subPath: state
      containers:
      - name: nifi-nginx
        image: "{{ .Values.nginx_image }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: https
          containerPort: 443
        securityContext:
          runAsUser: 0
        command:
        - "/bin/sh"
        - "-c"
        - "cat /etc/ssl/certs/nifi.crt /etc/ssl/certs/webCA.crt > /tmp/bundle.crt && exec nginx -g 'daemon off;'"
        volumeMounts:
        - name: nginx-configmap
          mountPath: "/etc/nginx/conf.d/default.conf"
          subPath: default.conf
        - name: webca
          mountPath: /etc/ssl/certs/webCA.crt
          readOnly: true
          subPath: ca.crt
        - name: webca
          mountPath: /etc/ssl/certs/nifi.crt
          readOnly: true
          subPath: tls.crt
        - name: webca
          mountPath: /etc/ssl/certs/nifi.key
          readOnly: true
          subPath: tls.key
      - name: nifi
        image: "{{ .Values.nifi_image }}:{{ .Values.nifi_version }}"
        imagePullPolicy: IfNotPresent
        command:
        - "/bin/sh"
        - "-c"
        - "/setup.sh; /opt/nifi/scripts/start.sh"
        ports:
        - name: webgui
          containerPort: {{ .Values.nifi_port }}
        env:
        - name: NIFI_WEB_HTTP_HOST
          value: localhost
        volumeMounts:
        # - name: config
        #   subPath: nifi.properties
        #   mountPath: {{ .Values.nifi_base_dir }}/conf/nifi.properties
        #   readOnly: true
        - name: config
          mountPath: /setup.sh
          subPath: setup.sh
          readOnly: true
        - name: nifi-data
          mountPath: {{ .Values.nifi_base_dir }}/logs
          subPath: logs
        #- name: nifi-data
      #    mountPath: {{ .Values.nifi_base_dir }}/conf
      #    subPath: conf
        - name: nifi-data
          mountPath: {{ .Values.nifi_base_dir }}/database_repository
          subPath: database_repository
        - name: nifi-data
          mountPath: {{ .Values.nifi_base_dir }}/flowfile_repository
          subPath: flowfile_repository
        - name: nifi-data
          mountPath: {{ .Values.nifi_base_dir }}/content_repository
          subPath: content_repository
        - name: nifi-data
          mountPath: {{ .Values.nifi_base_dir }}/provenance_repository
          subPath: provenance_repository
        - name: nifi-data
          mountPath: {{ .Values.nifi_base_dir }}/state
          subPath: state
      restartPolicy: Always
      nodeSelector:
        role: server
      volumes:
      - name: config
        configMap:
          name: {{.Release.Name}}
          defaultMode: 0777
      - name: nifi-data
        hostPath:
          path: {{ .Values.path }}
          type: DirectoryOrCreate
      - name: webca
        secret:
          defaultMode: 420
          optional: false
          secretName: {{ .Release.Name }}-certificate
      - name: nginx-configmap
        configMap:
          name: {{ .Release.Name }}-nginx
          defaultMode: 0444
# -------
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: {{ .Release.Name }}-zk
#   labels:
#     component: {{ .Release.Name }}-zk
# spec:
#   replicas: {{ .Values.zk_replicas }}
#   selector:
#     matchLabels:
#       component: {{ .Release.Name }}-zk
#   template:
#     metadata:
#       labels:
#         component: {{ .Release.Name }}-zk
#     spec:
#       containers:
#       - name: nifi
#         image: "{{ .Values.zk_image }}:{{ .Values.zk_version }}"
#         imagePullPolicy: IfNotPresent
#        resources:
#          requests:
#            cpu: {{ .Values.cpu_request }}m
#         ports:
#         - containerPort: {{ .Values.port }}
#           name: webgui
#       restartPolicy: Always
#       nodeSelector:
#         role: server
