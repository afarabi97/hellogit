apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    component: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      component: {{ .Release.Name }}
  template:
    metadata:
      labels:
        component: {{ .Release.Name }}
    spec:
      containers:
      - name: postgres
        image: "{{ .Values.postgresImage }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgresqlPassword }}
        - name: POSTGRES_USER
          value: {{ .Values.postgresqlUsername }}
        - name: POSTGRES_DB
          value: {{ .Values.postgresqlDatabase }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
          subPath: database
      - name: redmine
        image: "{{ .Values.redmineImage }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: redmine
          containerPort: {{ .Values.redmineInternalPort }}
        env:
        - name: REDMINE_DB_POSTGRES
          value: localhost
        - name: REDMINE_DB_DATABASE
          value: {{ .Values.postgresqlDatabase }}
        - name: REDMINE_DB_USERNAME
          value: {{ .Values.postgresqlUsername }}
        - name: REDMINE_DB_PASSWORD
          value: {{ .Values.postgresqlPassword }}
        volumeMounts:
        - name: data
          mountPath: /usr/src/redmine/files
          subPath: files
      - name: nginx
        image: "{{ .Values.nginx_image }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: https
          containerPort: 443
        securityContext:
          runAsUser: 0
        command:
        - "/bin/sh"
        - "-c"
        - "cat /etc/ssl/certs/container/tls.crt /etc/ssl/certs/container/ca.crt > /tmp/bundle.crt && exec nginx -g 'daemon off;'"
        volumeMounts:
        - name: nginx-configmap
          mountPath: "/etc/nginx/conf.d/default.conf"
          subPath: default.conf
        - name: webca
          mountPath: /etc/ssl/certs/container
          readOnly: true
      nodeSelector:
        role: "server"
      volumes:
      - name: webca
        secret:
          defaultMode: 420
          optional: false
          secretName: {{ .Release.Name }}-certificate
      - name: nginx-configmap
        configMap:
          name: {{ .Release.Name }}-nginx
          defaultMode: 0444
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-pvc
