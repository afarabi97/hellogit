---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-pipeline
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  external_beats.conf: |
    input {
      beats {
        port => 5045
        ssl => true
        ssl_certificate_authorities => ["/etc/ssl/certs/container/ca.crt"]
        ssl_certificate => '/etc/ssl/certs/container/tls.crt'
        ssl_key => '/etc/ssl/certs/container/tls.key'
        ssl_verify_mode => "peer"
      }
    }

    filter {
      if "" in [@metadata][index] {
        mutate { add_field => { "[@metadata][index]" => "%{[@mymetadata][index_suffix]}" } }
      }
      if [@metadata][beat] == "filebeat" {
        mutate { add_field => { "[@mymetadata][pipeline]" => "filebeat-all_modules" } }
        if ![@metadata][pipeline] {
          mutate { add_field => { "[@metadata][pipeline]" => "%{[@mymetadata][pipeline]}" } }
        }
        else if [@metadata][pipeline] == "" {
          mutate { update => { "[@metadata][pipeline]" => "%{[@mymetadata][pipeline]}" } }
        }
      }
      mutate { remove_field => [ "@mymetadata" ] }
    }

    output {

      if [@metadata][beat] == "filebeat" {
        if "" in [@metadata][index] {
          elasticsearch {
            hosts => {{ .Values.elastic_ingest_nodes | toJson }}
            cacert => '/etc/ssl/certs/container/ca.crt'
            ssl_certificate_verification => true
            user => "${ELASTICSEARCH_USERNAME}"
            password => "${ELASTICSEARCH_PASSWORD}"
            index => "%{[@metadata][index]}"
            template_name => "filebeat-external"
            ilm_enabled => false
            pipeline => "%{[@metadata][pipeline]}"
            manage_template => false
          }
        } else {
          elasticsearch {
            hosts => {{ .Values.elastic_ingest_nodes | toJson }}
            cacert => '/etc/ssl/certs/container/ca.crt'
            ssl_certificate_verification => true
            user => "${ELASTICSEARCH_USERNAME}"
            password => "${ELASTICSEARCH_PASSWORD}"
            ilm_rollover_alias => "filebeat-external"
            ilm_policy => "filebeat-external"
            ilm_enabled => true
            ilm_pattern => "{now/d}-000001"
            pipeline => "%{[@metadata][pipeline]}"
            manage_template => false
          }
        }
      }
      if [@metadata][beat] == "winlogbeat" {
        if "" in [@metadata][index] {
          elasticsearch {
            hosts => {{ .Values.elastic_ingest_nodes | toJson }}
            cacert => '/etc/ssl/certs/container/ca.crt'
            ssl_certificate_verification => true
            user => "${ELASTICSEARCH_USERNAME}"
            password => "${ELASTICSEARCH_PASSWORD}"
            index => "%{[@metadata][index]}"
            template_name => "winlogbeat"
            ilm_enabled => false
            manage_template => false
          }
        } else {
          elasticsearch {
            hosts => {{ .Values.elastic_ingest_nodes | toJson }}
            cacert => '/etc/ssl/certs/container/ca.crt'
            ssl_certificate_verification => true
            user => "${ELASTICSEARCH_USERNAME}"
            password => "${ELASTICSEARCH_PASSWORD}"
            ilm_rollover_alias => "winlogbeat"
            ilm_policy => "winlogbeat"
            ilm_enabled => true
            ilm_pattern => "{now/d}-000001"
            manage_template => false
          }
        }
      }
      if [@metadata][beat] == "auditbeat" {
        elasticsearch {
          hosts => {{ .Values.elastic_ingest_nodes | toJson }}
          cacert => '/etc/ssl/certs/container/ca.crt'
          ssl_certificate_verification => true
          user => "${ELASTICSEARCH_USERNAME}"
          password => "${ELASTICSEARCH_PASSWORD}"
          ilm_rollover_alias => "auditbeat-external"
          ilm_policy => "auditbeat-external"
          ilm_enabled => true
          ilm_pattern => "{now/d}-000001"
          manage_template => false
        }
      }
    }

  internal_filebeat.conf: |
    input {
      beats {
        port => 5050
      }
    }

    filter {
      if [@metadata][beat] == "filebeat" {
        if ![@metadata][pipeline] {
          mutate { add_field => { "[@metadata][pipeline]" => "%{[@mymetadata][pipeline]}" } }
        }
        else if [@metadata][pipeline] == "" {
          mutate { update => { "[@metadata][pipeline]" => "%{[@mymetadata][pipeline]}" } }
        }
      }
      mutate { add_field => { "[@metadata][custom_index]" => "%{[@mymetadata][custom_index]}" } }
      mutate { remove_field => [ "@mymetadata" ] }
    }

    output {
      elasticsearch {
        hosts => {{ .Values.elastic_ingest_nodes | toJson }}
        cacert => '/etc/ssl/certs/container/ca.crt'
        ssl_certificate_verification => true
        user => "${ELASTICSEARCH_USERNAME}"
        password => "${ELASTICSEARCH_PASSWORD}"
        index => "%{[@metadata][custom_index]}"
        ilm_enabled => false
        manage_template => false
        pipeline => "%{[@metadata][pipeline]}"
      }
    }
