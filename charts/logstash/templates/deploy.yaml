---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    component: logstash
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      component: logstash
  template:
    metadata:
      labels:
        component: logstash
    spec:
      initContainers:
      - name: ilm
        image: "{{ .Values.image_name }}:{{ .Values.image_tag }}"
        imagePullPolicy: IfNotPresent
        command:
        - "/bin/bash"
        - "-c"
        - "if curl -XGET -sfI -o /dev/null {{ .Values.elastic_fqdn }}:{{ .Values.elastic_port }}/_ilm/policy/logstash-zeek; then echo \"skipping ilm install\"; else curl -XPUT {{ .Values.elastic_fqdn }}:{{ .Values.elastic_port }}/_ilm/policy/logstash-zeek -H \"Content-Type: application/json\" -d @/usr/share/logstash/ilm.json; fi"
        volumeMounts:
        - name: logstash
          mountPath: "/usr/share/logstash/ilm.json"
          subPath: ilm.json
          readOnly: true
      containers:
      - name: logstash
        image: "{{ .Values.image_name }}:{{ .Values.image_tag }}"
        imagePullPolicy: IfNotPresent
        env:
        - name: LS_JAVA_OPTS
          value: "-Xmx{{ .Values.heap_size }}g -Xms{{ .Values.heap_size }}g"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          requests:
            cpu: 1000m
            memory: {{ .Values.heap_size }}Gi
        volumeMounts:
        - name: logstash
          mountPath: "/usr/share/logstash/config/logstash.yml"
          subPath: logstash.yml
        - name: logstash
          mountPath: "/usr/share/logstash/config/pipelines.yml"
          subPath: pipelines.yml
        - name: logstash
          mountPath: "/usr/share/logstash/template.json"
          subPath: template.json
        - name: pipeline
          mountPath: "/usr/share/logstash/pipeline"
      nodeSelector:
        role: "server"
      volumes:
      - name: logstash
        configMap:
          name: {{ .Release.Name }}
      - name: pipeline
        configMap:
          name: {{ .Release.Name }}-pipeline
