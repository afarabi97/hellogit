apiVersion: v1
kind: Service
metadata:
  name: zookeeper-headless
  labels:
    component: zookeeper
spec:
  ports:
  - port: 2888
    name: server
  - port: 3888
    name: leader-election
  clusterIP: None
  selector:
    component: zookeeper
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    component: zookeeper
spec:
  ports:
  - port: 2181
    name: client
  selector:
    component: zookeeper
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}-zk
  labels:
    component: zookeeper
spec:
  selector:
    matchLabels:
      component: zookeeper
  template:
    metadata:
      labels:
        component: zookeeper
    spec:
      containers:
      - name: zookeeper
        imagePullPolicy: IfNotPresent
        image: "{{ .Values.zookeeper_image_name }}:{{ .Values.zookeeper_image_tag }}"
        securityContext:
          runAsUser: 0
          runAsGroup: 0
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        env:
        - name: ALLOW_ANONYMOUS_LOGIN
          value: "yes"
        - name: ZOO_SERVERS
          value: zookeeper-headless.default.svc.cluster.local:2888:3888
        readinessProbe:
          tcpSocket:
            port: client
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          tcpSocket:
            port: client
          initialDelaySeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: data
          mountPath: /bitnami/zookeeper
      restartPolicy: Always
      nodeSelector:
        role: "sensor"
      volumes:
      - name: data
        hostPath:
          path: {{ .Values.zookeeper_path }}
          type: DirectoryOrCreate
