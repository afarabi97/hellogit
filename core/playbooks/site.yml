# site.yml is the overall playbook, but all it does is include the other playbooks that are part of the site. For more
# information about the structure see:
# http://docs.ansible.com/ansible/latest/playbooks_best_practices.html
# http://docs.ansible.com/ansible/latest/intro_inventory.html
# We follow the guidance to include naming conventions there.

---

- name: Set System Name and Node Groups
  hosts:
    - localhost
    - all
  gather_facts: no
  any_errors_fatal: true
  pre_tasks:
    - name: Run gather facts
      setup:
    - name: Import Variables
      include_vars:
        file: "{{ dip_core_vars }}"
  roles:
    - system_info
  tags:
    - always
    - system-info

- name: Reset
  hosts: localhost
  gather_facts: no
  roles:
    - reset
  tags:
    - reset

- name: Set Kit Size
  hosts:
    - elastic_nodes
    - localhost
  tags: always
  gather_facts: no
  any_errors_fatal: true
  pre_tasks:
    - name: Set kit size pre_tasks
      setup:
  tasks:
    - name: Set Kit Size For GIP
      block:
      - name: Set Default GIP Kit Size
        set_fact:
          kit_size: 99
          kit_size_name: "GIP Default (testing only)"
          cacheable: yes
      - name: Set GIP Kit Size
        set_fact:
          kit_size: 100
          kit_size_name: "GIP Gen1"
          cacheable: yes
        when:
          - ansible_processor_vcpus >= 55
          - total_mem_gb >= 90
      when:
          - is_gip
          - inventory_hostname in groups['elastic_nodes']
    - name: Set Kit Size For DIP
      block:
      - name: Set Default DIP Kit Size
        set_fact:
          kit_size: -1
          kit_size_name: "DIP Default"
          cacheable: yes
      - name: Memory to GB
        set_fact:
          total_mem_gb: "{{ (ansible_memtotal_mb/1024)|round|int }}"
      - name: Debug - Total Memory and Num CPUs
        debug:
          msg:
            - "Total Memory: {{ total_mem_gb }}GBs"
            - "Num of CPUs: {{ ansible_processor_vcpus }}"
      - name: Training Kit
        set_fact:
          kit_size: 20
          kit_size_name: "Training Kit"
          cacheable: yes
        when:
          - deployment_type == "Virtual"
      # Specific Hardware Kits Below
      - name: MDT DL160 Node Kit Size
        set_fact:
          kit_size: 0
          kit_size_name: "MDT DL160"
          cacheable: yes
        when:
          - ansible_processor_vcpus >= 30
          - total_mem_gb >= 60
          - deployment_type == "Baremetal"
      - name: CPT DL160 Node Kit Size
        set_fact:
          kit_size: 1
          kit_size_name: "CPT DL160"
          cacheable: yes
        when:
          - ansible_processor_vcpus >= 30
          - total_mem_gb >= 500
          - deployment_type == "Baremetal"
      - name: R440 Legacy Node Kit Size
        set_fact:
          kit_size: 2
          kit_size_name: "R440 Legacy Node"
          cacheable: yes
        when:
          - ansible_processor_vcpus == 48
          - total_mem_gb >= 500
          - deployment_type == "Baremetal"
      - name: R440 Common Node Kit Size
        set_fact:
          kit_size: 3
          kit_size_name: "R440 Common Node"
          cacheable: yes
        when:
          - ansible_processor_vcpus == 64
          - total_mem_gb >= 500
          - deployment_type == "Baremetal"
      - name: Small Form Factor
        set_fact:
          kit_size: 4
          kit_size_name: "Small Form Factor"
          cacheable: yes
        when:
          - ansible_processor_vcpus == 128
          - total_mem_gb >= 500
          - deployment_type == "Baremetal"
      when:
          - not is_gip
          - inventory_hostname in groups['elastic_nodes']
    - name: Set Kit Size for localhost
      set_fact:
        kit_size: "{{ hostvars[groups['elastic_nodes'][0]]['kit_size'] }}"
        kit_size_name: "{{ hostvars[groups['elastic_nodes'][0]]['kit_size_name'] }}"
        cacheable: yes
      when: inventory_hostname == "localhost"
    - name: Debug - Kit Size
      debug:
        msg: "Kit size: {{ kit_size_name }} ({{ kit_size }})"

- name: Common Setup
  hosts:
    - servers
    - sensors
  gather_facts: no
  any_errors_fatal: true
  pre_tasks:
    - name: Common setup pre_tasks
      setup:
  roles:
    - common
    - chrony
  tags:
    - common

- name: Configure CA on all systems
  hosts:
    - localhost
    - servers
    - sensors
  any_errors_fatal: true
  pre_tasks:
    - name: Configure CA on all systems pre_tasks
      setup:
  roles:
    - certificate_authority/common
  tags:
    - certificate_authority

- name: OpenVPN
  hosts: sensors
  gather_facts: yes
  any_errors_fatal: true
  pre_tasks:
    - name: OpenVPN pre_tasks
      setup:
  tasks:
    - name: openvpn/client
      import_role:
        name: openvpn/client
  tags:
    - openvpn

- name: Setup CRI-O
  hosts:
    - servers
    - sensors
  gather_facts: no
  any_errors_fatal: true
  pre_tasks:
    - name: Setup CRI-O pre_tasks
      setup:
  roles:
    - crio
  tags:
    - crio
    - kubernetes

- name: Configure kube nodes
  hosts:
    - servers
    - sensors
  serial: 1
  gather_facts: no
  any_errors_fatal: true
  pre_tasks:
    - name: Configure kube nodes pre_tasks
      setup:
  roles:
    - kubernetes/node
  tags:
    - kube-node
    - kubernetes

- name: Install Cert Manager
  hosts: localhost
  any_errors_fatal: true
  pre_tasks:
    - name: Install cert manager pre_tasks
      setup:
  tasks:
    - name: certificate_authority/localhost
      import_role:
        name: certificate_authority/localhost
        tasks_from: cert_manager
  tags:
    - certificate_authority

- name: Setup Storage
  hosts:
    - servers
  gather_facts: no
  any_errors_fatal: true
  pre_tasks:
    - name: Run gather facts
      setup:
  roles:
    - storage
  tags:
    - storage

- name: Setup Controller API Key
  hosts: localhost
  tasks:
    - name: generate Admin API key
      script: /opt/sso-idp/gen_api_token.py --roles "controller-admin,controller-maintainer,operator" --exp 1.0
      args:
        executable: /opt/tfplenum/.venv/bin/python3
      register: admin_api_key
    - name: Trim output
      set_fact:
        admin_api_key: "{{ admin_api_key.stdout | replace('\n', '') }}"
  tags:
    - elasticsearch
    - es-post-install

- name: Deploy Elasticsearch
  hosts:
    - localhost
    - elastic_nodes
  gather_facts: no
  any_errors_fatal: true
  pre_tasks:
    - name: Deploy elasticsearch pre_tasks
      setup:
  roles:
    - elasticsearch
  tags:
    - elasticsearch

- name: Deploy kibana
  hosts: localhost
  gather_facts: no
  any_errors_fatal: true
  pre_tasks:
    - name: Deploy kibana pre_tasks
      setup:
  roles:
    - kibana
  tags:
    - kibana

- name: Deploy Auditbeat
  hosts:
    - localhost
    - servers
    - sensors
  gather_facts: no
  any_errors_fatal: true
  pre_tasks:
    - name: Deploy Auditbeat pre_tasks
      setup:
  roles:
    - audit
  tags:
    - audit
    - auditbeat

- name: Deploy metric services
  hosts: localhost
  gather_facts: no
  any_errors_fatal: true
  pre_tasks:
    - name: Deploy metric services pre_tasks
      setup:
  roles:
    - metrics
  tags:
    - metrics

- name: Deploy snmp-manager
  hosts: localhost
  any_errors_fatal: true
  tasks:
    - name: snmp
      include_role:
        name: snmp
      when: is_gip
  tags:
    - snmp

- name: Deploy Arkime
  hosts:
    - localhost
  gather_facts: no
  any_errors_fatal: true
  pre_tasks:
    - name: Deploy Arkime pre_tasks
      setup:
  tasks:
    - name: arkime
      import_role:
        name: arkime
  tags:
    - arkime

- name: Setup Log Management
  hosts: sensors
  gather_facts: no
  any_errors_fatal: true
  pre_tasks:
    - name: Setup Log Management pre_tasks
      setup:
  roles:
    - logs
  tags:
    - logs

- name: Schedule a cron job to gather health metrics.
  hosts:
    - servers
    - sensors
  gather_facts: no
  any_errors_fatal: true
  roles:
    - node-health
  tags:
    - node-health

- name: Run Filebeat Setup
  hosts: localhost
  gather_facts: no
  any_errors_fatal: true
  tasks:
    - name: elasticsearch
      import_role:
        name: elasticsearch
        tasks_from: filebeat_setup
  tags:
    - run-filebeat-setup

- name: Run Winlogbeat Setup
  hosts: localhost
  gather_facts: no
  any_errors_fatal: true
  tasks:
    - name: elasticsearch
      import_role:
        name: elasticsearch
        tasks_from: winlogbeat_setup
  tags:
    - run-winlogbeat-setup

- name: Setup extenral beats certificates.
  hosts: localhost
  gather_facts: no
  any_errors_fatal: false
  tasks:
    - name: Setup external beats certs for deployment.
      command: /opt/tfplenum/scripts/retrieve_beats_certs.py
      register: result
      changed_when: result.rc == 0
      until: result.rc == 0
      retries: 5
      delay: 10
  tags:
    - retrieve-beats-certs

- name: Run Stigs
  hosts:
    - servers
    - sensors
    - mips
  gather_facts: no
  any_errors_fatal: true
  tasks:
    - name: Run Kit Stigs
      include_tasks: "{{ tfplenum_opt_dir }}/rhel8-stigs/rhel8-playbook-stig.yml"
  tags:
    - stigs

- name: Misc stuff on all nodes
  hosts:
    - localhost
    - servers
    - sensors
  gather_facts: no
  any_errors_fatal: false
  tasks:
    - name: Enable tab completion
      lineinfile:
        path: /root/.bashrc
        regexp: '^source <(kubectl'
        line: 'source <(kubectl completion bash)'
      ignore_errors: yes

...
