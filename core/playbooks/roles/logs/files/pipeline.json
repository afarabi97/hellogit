{
  "description": "Main Bro pipeline",
  "processors": [
    {
      "fail": {
        "if": "ctx.source == null",
        "message": "No source file defined"
      },
      "script": "ctx.task_start = new Date().getTime(); ctx.remove('host'); for (entry in ctx.json.entrySet()) {ctx[entry.getKey()] = entry.getValue();} ctx.remove('json'); ctx.timestamp = ctx.remove('ts');"
    },
    {
      "script": "ArrayList logs = ['conn', 'dhcp', 'dns', 'dpd', 'files', 'ftp', 'http', 'irc', 'kerberos', 'notice', 'rdp', 'signatures', 'smtp', 'snmp', 'software', 'ssh', 'ssl', 'syslog', 'tunnel', 'weird', 'mysql', 'socks', 'x509', 'intel', 'modbus', 'sip', 'radius', 'pe', 'rfb', 'dnp3', 'smb_files', 'smb_mapping', 'ntlm', 'dce_rpc']; for (log in logs) {if (ctx.source.contains(log)) {ctx.event_type = 'bro_' + log;}}"
    },
    {
      "script": {
        "if": "ctx['id.orig_h'] != null",
        "source": "ctx.source_ip = ctx.remove('id.orig_h'); ctx.source_port = ctx.remove('id.orig_p');"
      }
    },
    {
      "script": {
        "if": "ctx['id.resp_h'] != null",
        "source": "ctx.destination_ip = ctx.remove('id.resp_h'); ctx.destination_port = ctx.remove('id.resp_p');"
      }
    },
    {
      "script": "if (ctx.trans_id != null) {ctx.transaction_id = ctx.remove('trans_id');} if (ctx.proto != null) {ctx.protocol = ctx.remove('proto');}"
    },
    {
      "script": {
        "if": "'bro_conn' == ctx.event_type",
        "source": "if (ctx.orig_bytes != null) {ctx.original_bytes = ctx.remove('orig_bytes');} if (ctx.resp_bytes != null) {ctx.respond_bytes = ctx.remove('resp_bytes');} if (ctx.conn_state != null) {ctx.connection_state = ctx.remove('conn_state');} if (ctx.local_resp != null) {ctx.local_respond = ctx.remove('local_resp');} if (ctx.orig_pkts != null) {ctx.original_packets = ctx.remove('orig_pkts');} if (ctx.orig_ip_bytes != null) {ctx.original_ip_bytes = ctx.remove('orig_ip_bytes');} if (ctx.resp_pkts != null) {ctx.respond_packets = ctx.remove('resp_pkts');} if (ctx.resp_ip_bytes != null) {ctx.respond_ip_bytes = ctx.remove('resp_ip_bytes');} if (ctx.orig_cc != null) {ctx.original_country_code = ctx.remove('orig_cc');} if (ctx.resp_cc != null) {ctx.respond_country_code = ctx.remove('resp_cc');} if (ctx.sensorname != null) {ctx.sensor_name = ctx.remove('sensorname');} if (params[ctx.connection_state] != null) {ctx.connection_state_description = params[ctx.connection_state];}",
        "params": {
          "S0": "Connection attempt seen, no reply",
          "S1": "Connection established, not terminated",
          "S2": "Connection established and close attempt by originator seen (but no reply from responder)",
          "S3": "Connection established and close attempt by responder seen (but no reply from originator)",
          "SF": "Normal SYN/FIN completion",
          "REJ": "Connection attempt rejected",
          "RSTO": "Connection established, originator aborted (sent a RST)",
          "RSTR": "Established, responder aborted",
          "RSTOS0": "Originator sent a SYN followed by a RST, we never saw a SYN-ACK from the responder",
          "RSTRH": "Responder sent a SYN ACK followed by a RST, we never saw a SYN from the (purported) originator",
          "SH": "Originator sent a SYN followed by a FIN, we never saw a SYN ACK from the responder (hence the connection was 'half' open)",
          "SHR": "Responder sent a SYN ACK followed by a FIN, we never saw a SYN from the originator",
          "OTH": "No SYN seen, just midstream traffic (a 'partial connection' that was not later closed)"
        }
      }
    },
    {
      "script": {
        "if": "'bro_dns' == ctx.event_type",
        "source": "if (ctx.qclass != null) {ctx.query_class = ctx.remove('qclass');} if (ctx.qclass_name != null) {ctx.query_class_name = ctx.remove('qclass_name');} if (ctx.qtype != null) {ctx.query_type = ctx.remove('qtype');} if (ctx.qtype_name != null) {ctx.query_type_name = ctx.remove('qtype_name');} if (ctx.AA != null) {ctx.aa = ctx.remove('AA');} if (ctx.TC != null) {ctx.tc = ctx.remove('TC');} if (ctx.RD != null) {ctx.rd = ctx.remove('RD');} if (ctx.RA != null) {ctx.ra = ctx.remove('RA');} if (ctx.Z != null) {ctx.z = ctx.remove('Z');} if (ctx.TTLs != null) {ctx.ttls = ctx.remove('TTLs');}"
      }
    },
    {
      "script": {
        "if": "'bro_files' == ctx.event_type",
        "source": "if (ctx.tx_hosts != null) {ctx.file_ip = ctx.remove('tx_hosts');} if (ctx.rx_hosts != null) {ctx.destination_ip = ctx.remove('rx_hosts');} if (ctx.conn_uids != null) {ctx.connection_uids = ctx.remove('conn_uids');} if (ctx.analyzers != null) {ctx.analyzer = ctx.remove('analyzers');} if (ctx.mime_type != null) {ctx.mimetype = ctx.remove('mime_type');} if (ctx.filename != null) {ctx.file_name = ctx.remove('filename');} if (ctx.timedout != null) {ctx.timed_out = ctx.remove('timedout');}"
      }
    },
    {
      "script": {
        "if": "'bro_ftp' == ctx.event_type",
        "source": "if (ctx.user != null) {ctx.username = ctx.remove('user');} if (ctx.command != null) {ctx.ftp_command = ctx.remove('command');} if (ctx.arg != null) {ctx.ftp_argument = ctx.remove('arg');} if (ctx.mime_type != null) {ctx.mimetype = ctx.remove('mime_type');} if (ctx.reply_msg != null) {ctx.reply_message = ctx.remove('reply_msg');} if (ctx.data_channel.passive != null) {ctx.data_channel_passive = ctx.remove('data_channel.passive');} if (ctx.data_channel.orig_h != null) {ctx.data_channel_source_ip = ctx.remove('data_channel.orig_h');} if (ctx.data_channel.resp_h != null) {ctx.data_channel_destination_ip = ctx.remove('data_channel.resp_h');} if (ctx.data_channel.resp_p != null) {ctx.data_channel_destination_port = ctx.remove('data_channel.resp_p');}"
      }
    },
    {
      "script": {
        "if": "'bro_http' == ctx.event_type",
        "source": "if (ctx.host != null && ctx.host instanceof String) {ctx.virtual_host = ctx.remove('host');} if (ctx.user_agent != null) {ctx.useragent = ctx.remove('user_agent');} if (ctx.request_body_len != null) {ctx.request_body_length = ctx.remove('request_body_len');} if (ctx.response_body_len != null) {ctx.response_body_length = ctx.remove('response_body_len');} if (ctx.status_msg != null) {ctx.status_message = ctx.remove('status_msg');} if (ctx.info_msg != null) {ctx.info_message = ctx.remove('info_msg');} if (ctx.username != null) {ctx.user = ctx.remove('username');} ctx.remove('tags-bro'); if (ctx.uri != null) {ctx.uri_length = ctx.uri.length();} if (ctx.virtual_host != null) {ctx.virtual_host_length = ctx.virtual_host.length();} if (ctx.useragent != null) {ctx.useragent_length = ctx.useragent.length();}"
      }
    },
    {
      "script": {
        "if": "'bro_irc' == ctx.event_type",
        "source": "if (ctx.user != null) {ctx.irc_username = ctx.remove('user');} if (ctx.command != null) {ctx.irc_command = ctx.remove('command');} if (ctx.addl != null) {ctx.additional_info = ctx.remove('addl');}"
      }
    },
    {
      "script": {
        "if": "'bro_kerberos' == ctx.event_type",
        "source": "if (ctx.renewable != null) {ctx.renewable = String.valueOf(ctx.renewable);} if (ctx.success != null) {ctx.kerberos_success = String.valueOf(ctx.remove('success'));} if (ctx.error_msg != null) {ctx.error_message = ctx.remove('error_msg');} if (ctx.from != null) {ctx.valid_from = ctx.remove('from');} if (ctx.till != null) {ctx.valid_till = ctx.remove('till');} if (ctx.client_cert_subject != null) {ctx.client_certificate_subject = ctx.remove('client_cert_subject');} if (ctx.client_cert_fuid != null) {ctx.client_certificate_fuid = ctx.remove('client_cert_fuid');} if (ctx.server_cert_subject != null) {ctx.server_certificate_subject = ctx.remove('server_cert_subject');} if (ctx.server_cert_fuid != null) {ctx.server_certificate_fuid = ctx.remove('server_cert_fuid');}"
      }
    },
    {
      "script": {
        "if": "'bro_notice' == ctx.event_type",
        "source": "if (ctx.mime != null) {ctx.file_mime_type = ctx.remove('mime');} if (ctx.desc != null) {ctx.file_description = ctx.remove('desc');} if (ctx.sub != null) {ctx.sub_msg = ctx.remove('sub');} if (ctx.src != null) {ctx.source_ip = ctx.remove('src');} if (ctx.dst != null) {ctx.destination_ip = ctx.remove('dst');} if (ctx.peer_descr != null) {ctx.peer_description = ctx.remove('peer_descr');} if (ctx.actions != null) {ctx.action = ctx.remove('actions');}"
      }
    },
    {
      "script": {
        "if": "'bro_rdp' == ctx.event_type",
        "source": "if (ctx.client_dig_product_id != null) {ctx.client_digital_product_id = ctx.remove('client_dig_product_id');} if (ctx.cert_type != null) {ctx.certificate_type = ctx.remove('cert_type');} if (ctx.cert_count != null) {ctx.certificate_count = ctx.remove('cert_count');} if (ctx.cert_permanent != null) {ctx.certificate_permanent = ctx.remove('cert_permanent');}"
      }
    },
    {
      "script": {
        "if": "'bro_signatures' == ctx.event_type",
        "source": "if (ctx.sig_id != null) {ctx.signature_id = ctx.remove('sig_id');} if (ctx.event_msg != null) {ctx.event_message = ctx.remove('event_msg');} if (ctx.sub_msg != null) {ctx.sub_message = ctx.remove('sub_msg');} if (ctx.sig_count != null) {ctx.signature_count = ctx.remove('sig_count');}"
      }
    },
    {
      "script": {
        "if": "'bro_smtp' == ctx.event_type",
        "source": "if (ctx.mailfrom != null) {ctx.mail_from = ctx.remove('mailfrom');} if (ctx.rcptto != null) {ctx.recipient_to = ctx.remove('rcptto');} if (ctx.date != null) {ctx.mail_date = ctx.remove('date');} if (ctx.msg_id != null) {ctx.message_id = ctx.remove('msg_id');} if (ctx.user_agent != null) {ctx.useragent = ctx.remove('user_agent');} if (ctx.tls != null) {ctx.tls = String.valueOf(ctx.tls);} if (ctx.is_webmail != null) {ctx.is_webmail = String.valueOf(ctx.is_webmail);}"
      }
    },
    {
      "script": {
        "if": "'bro_software' == ctx.event_type",
        "source": "if (ctx.host != null) {ctx.source_ip = ctx.remove('host');} if (ctx.host_p != null) {ctx.source_port = ctx.remove('host_p');} if (ctx.version.major != null) {ctx.version_major = String.valueOf(ctx.remove('version.major'));} if (ctx.version.minor != null) {ctx.version_minor = String.valueOf(ctx.remove('version.minor'));} if (ctx.version.minor2 != null) {ctx.version_minor2 = ctx.remove('version.minor2');} if (ctx.version.minor3 != null) {ctx.version_minor3 = ctx.remove('version.minor3');} if (ctx.version.addl != null) {ctx.version_additional_info = ctx.remove('version.addl');}"
      }
    },
    {
      "script": {
        "if": "'bro_ssh' == ctx.event_type",
        "source": "if (ctx.auth_success != null) {ctx.authentication_success = String.valueOf(ctx.remove('auth_success'));} if (ctx.auth_attempts != null) {ctx.authentication_attempts = ctx.remove('auth_attempts');} if (ctx.cipher_alg != null) {ctx.cipher_algorithm = ctx.remove('cipher_alg');} if (ctx.mac_alg != null) {ctx.mac_algorithm = ctx.remove('mac_alg');} if (ctx.compression_alg != null) {ctx.compression_algorithm = ctx.remove('compression_alg');} if (ctx.kex_alg != null) {ctx.kex_algorithm = ctx.remove('kex_alg');} if (ctx.host_key_alg != null) {ctx.host_key_algorithm = ctx.remove('host_key_alg');}"
      }
    },
    {
      "script": {
        "if": "'bro_ssl' == ctx.event_type",
        "source": "if (ctx.cert_chain_fuids != null) {ctx.certificate_chain_fuids = ctx.remove('cert_chain_fuids');} if (ctx.client_cert_chain_fuids != null) {ctx.client_certificate_chain_fuids = ctx.remove('client_cert_chain_fuids');} if (ctx.subject != null) {ctx.certificate_subject = ctx.remove('subject');} if (ctx.issuer != null) {ctx.certificate_issuer = ctx.remove('issuer');}"
      }
    },
    {
      "script": {
        "if": "'bro_x509' == ctx.event_type",
        "source": "SimpleDateFormat formatter = new SimpleDateFormat('yyyy-MM-dd\\'T\\'HH:mm:ss.SSSXXX'); if (ctx['certificate.version'] != null) {ctx.certificate_version = ctx.remove('certificate.version');} if (ctx['certificate.serial'] != null) {ctx.certificate_serial = ctx.remove('certificate.serial');} if (ctx['certificate.subject'] != null) {ctx.certificate_subject = ctx.remove('certificate.subject');} if (ctx['certificate.issuer'] != null) {ctx.certificate_issuer = ctx.remove('certificate.issuer');} if (ctx['certificate.not_valid_before'] != null) {ctx.certificate_not_valid_before = formatter.parse(ctx.remove('certificate.not_valid_before'));} if (ctx['certificate.not_valid_after'] != null) {ctx.certificate_not_valid_after = formatter.parse(ctx.remove('certificate.not_valid_after'));} if (ctx['certificate.key_alg'] != null) {ctx.certificate_key_algorithm = ctx.remove('certificate.key_alg');} if (ctx['certificate.sig_alg'] != null) {ctx.certificate_signing_algorithm = ctx.remove('certificate.sig_alg');} if (ctx['certificate.key_type'] != null) {ctx.certificate_key_type = ctx.remove('certificate.key_type');} if (ctx['certificate.key_length'] != null) {ctx.certificate_key_length = Integer.valueOf(ctx.remove('certificate.key_length'));} if (ctx['certificate.exponent'] != null) {ctx.certificate_exponent = ctx.remove('certificate.exponent');} if (ctx['certificate.curve'] != null) {ctx.certificate_curve = ctx.remove('certificate.curve');} if (ctx['san.dns'] != null) {ctx.san_dns = ctx.remove('san.dns');} if (ctx['san.uri'] != null) {ctx.san_uri = ctx.remove('san.uri');} if (ctx['san.email'] != null) {ctx.san_email = ctx.remove('san.email');} if (ctx['san.ip'] != null) {ctx.san_ip = ctx.remove('san.ip');} if (ctx['basic_constraints.ca'] != null) {ctx.basic_constraints_ca = ctx.remove('basic_constraints.ca');} if (ctx['basic_constraints.path_length'] != null) {ctx.basic_constraints_path_length = ctx.remove('basic_constraints.path_length');}"
      }
    },
    {
      "kv": {
        "if": "['bro_ssl','bro_x509'].contains(ctx.event_type) && ctx.certificate_issuer != null",
        "field": "certificate_issuer",
        "field_split": ",",
        "value_split": "=",
        "include_keys": ["CN", "C", "O", "OU", "ST", "SN", "L", "DC", "GN", "pseudonym", "serialNumber", "title", "initials"]
      }
    },
    {
      "script": {
        "if": "['bro_ssl','bro_x509'].contains(ctx.event_type)",
        "source": "if (ctx.CN != null) {ctx.issuer_common_name = ctx.remove('CN');} if (ctx.C != null) {ctx.issuer_country_code = ctx.remove('C');} if (ctx.O != null) {ctx.issuer_organization = ctx.remove('O');} if (ctx.OU != null) {ctx.issuer_organization_unit = ctx.remove('OU');} if (ctx.ST != null) {ctx.issuer_state = ctx.remove('ST');} if (ctx.SN != null) {ctx.issuer_surname = ctx.remove('SN');} if (ctx.L != null) {ctx.issuer_locality = ctx.remove('L');} if (ctx.DC != null) {ctx.issuer_distinguished_name = ctx.remove('DC');} if (ctx.GN != null) {ctx.issuer_given_name = ctx.remove('GN');} if (ctx.pseudonym != null) {ctx.issuer_pseudonym = ctx.remove('pseudonym');} if (ctx.serialNumber != null) {ctx.issuer_serial_number = ctx.remove('serialNumber');} if (ctx.title != null) {ctx.issuer_title = ctx.remove('title');} if (ctx.initials != null) {ctx.issuer_initials = ctx.remove('initials');}"
      }
    },
    {
      "kv": {
        "if": "['bro_ssl','bro_x509'].contains(ctx.event_type)  && ctx.certificate_subject != null",
        "field": "certificate_subject",
        "field_split": ",",
        "value_split": "=",
        "include_keys": ["CN", "C", "O", "OU", "ST", "SN", "L", "GN", "pseudonym", "serialNumber", "title", "initials"]
      }
    },
    {
      "script": {
        "if": "['bro_ssl','bro_x509'].contains(ctx.event_type)",
        "source": "if (ctx.CN != null) {ctx.certificate_common_name = ctx.remove('CN');} if (ctx.C != null) {ctx.certificate_country_code = ctx.remove('C');} if (ctx.O != null) {ctx.certificate_organization = ctx.remove('O');} if (ctx.OU != null) {ctx.certificate_organization_unit = ctx.remove('OU');} if (ctx.ST != null) {ctx.certificate_state = ctx.remove('ST');} if (ctx.SN != null) {ctx.certificate_surname = ctx.remove('SN');} if (ctx.L != null) {ctx.certificate_locality = ctx.remove('L');} if (ctx.GN != null) {ctx.certificate_given_name = ctx.remove('GN');} if (ctx.pseudonym != null) {ctx.certificate_pseudonym = ctx.remove('pseudonym');} if (ctx.serialNumber != null) {ctx.certificate_serial_number = ctx.remove('serialNumber');} if (ctx.title != null) {ctx.certificate_title = ctx.remove('title');} if (ctx.initials != null) {ctx.certificate_initials = ctx.remove('initials');} if (ctx.certificate_common_name != null) {ctx.certificate_common_name_length = ctx.certificate_common_name.length();} if (ctx.issuer_common_name != null) {ctx.issuer_common_name_length = ctx.issuer_common_name.length();}"
      }
    },
    {
      "script": {
        "if": "'bro_ssl' == ctx.event_type",
        "source": "if (ctx.server_name != null) {ctx.server_name_length = ctx.server_name.length();} if (ctx.certificate_chain_fuids != null) {ctx.certificate_chain_fuids_length = ctx.certificate_chain_fuids.length;}"
      }
    },
    {
      "script": {
        "if": "'bro_x509' == ctx.event_type",
        "source": "if (ctx.certificate_not_valid_after != null && ctx.certificate_not_valid_before != null) {ctx.certificate_number_days_valid = (ctx.certificate_not_valid_after.getTime() - ctx.certificate_not_valid_before.getTime()) / (1000*60*60*24);}"
      }
    },
    {
      "script": {
        "if": "'bro_weird' == ctx.event_type",
        "source": "if (ctx.notice != null) {ctx.notice = String.valueOf(ctx.notice);} if (ctx.addl != null) {ctx.additional_info = ctx.remove('addl');}"
      }
    },
    {
      "script": {
        "if": "'bro_mysql' == ctx.event_type",
        "source": "if (ctx.cmd != null) {ctx.mysql_command = ctx.remove('cmd');} if (ctx.arg != null) {ctx.mysql_argument = ctx.remove('arg');} if (ctx.success != null) {ctx.mysql_success = String.valueOf(ctx.remove('success'));}"
      }
    },
    {
      "script": {
        "if": "'bro_socks' == ctx.event_type",
        "source": "if (ctx.status != null) {ctx.server_status = ctx.remove('status');} if (ctx.request_p != null) {ctx.request_port = ctx.remove('request_p');} if (ctx.bound_p != null) {ctx.bound_port = ctx.remove('bound_p');}"
      }
    },
    {
      "script": {
        "if": "'bro_intel' == ctx.event_type",
        "source": "if (ctx['seen.indicator'] != null) {ctx.indicator = ctx.remove('seen.indicator');} if (ctx['seen.indicator_type'] != null) {ctx.indicator_type = ctx.remove('seen.indicator_type');} if (ctx['seen.where'] != null) {ctx.seen_where = ctx.remove('seen.where');} if (ctx['seen.node'] != null) {ctx.seen_node = ctx.remove('seen.node');} if (ctx.file_mime_type != null) {ctx.mimetype = ctx.remove('file_mime_type');} if (ctx.file_desc != null) {ctx.file_description = ctx.remove('file_desc');}"
      }
    },
    {
      "script": {
        "if": "'bro_modbus' == ctx.event_type",
        "source": "if (ctx.func != null) {ctx.function = ctx.remove('func');}"
      }
    },
    {
      "script": {
        "if": "'bro_radius' == ctx.event_type",
        "source": "if (ctx.reply_msg != null) {ctx.reply_message = ctx.remove('reply_msg');} ctx.remove('ttl'); ctx.remove('framed_addr');"
      }
    },
    {
      "script": {
        "if": "'bro_rfb' == ctx.event_type",
        "source": "if (ctx.auth != null) {ctx.auth = String.valueOf(ctx.auth);} if (ctx.share_flag != null) {ctx.share_flag = String.valueOf(ctx.share_flag);}"
      }
    },
    {
      "script": {
        "if": "'bro_smb_files' == ctx.event_type",
        "source": "if (ctx['times.modified'] != null) {ctx.times_modified = ctx.remove('times.modified');} if (ctx['times.accessed'] != null) {ctx.times_accessed = ctx.remove('times.accessed');} if (ctx['times.created'] != null) {ctx.times_created = ctx.remove('times.created');} if (ctx['times.changed']!= null) {ctx.times_changed = ctx.remove('times.changed');}"
      }
    },
    {
      "script": {
        "if": "'bro_ntlm' == ctx.event_type",
        "source": "if (ctx.domainname != null) {ctx.domain_name = ctx.remove('domainname');} if (ctx.success != null) {ctx.ntlm_success = ctx.remove('success');}"
      }
    },
    {
      "date": {
        "field": "timestamp",
        "formats": ["ISO8601"],
        "ignore_failure": true
      }
    },
    {
      "geoip": {
        "field": "source_ip",
        "target_field": "source_geo",
        "ignore_missing": true
      }
    },
    {
      "geoip": {
        "field": "destination_ip",
        "target_field": "destination_geo",
        "ignore_missing": true
      }
    },
    {
      "script": "ctx.remove('timestamp'); if(ctx.local_respond != null) {ctx.local_respond = String.valueOf(ctx.local_respond);} if(ctx.tc != null) {ctx.tc = String.valueOf(ctx.tc);} if(ctx.is_orig != null) {ctx.is_orig = String.valueOf(ctx.is_orig);} if(ctx.local_orig != null) {ctx.local_orig = String.valueOf(ctx.local_orig);} if(ctx.query != null) {ctx.query = ctx.query.toLowerCase();} if (ctx.original_bytes != null && ctx.respond_bytes != null) {ctx.total_bytes = ctx.original_bytes + ctx.respond_bytes;} if (ctx.source_ip != null || ctx.destination_ip != null) {ctx.ips = new ArrayList(); if (ctx.source_ip != null) {ctx.ips.add(ctx.source_ip);} if (ctx.destination_ip != null) {ctx.ips.add(ctx.destination_ip);}} ctx.logstash_time = (new Date().getTime() - ctx.remove('task_start')) / 1000.0;"
    }
  ]
}
