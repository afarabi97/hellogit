{% if install_winlogbeat | upper == 'TRUE' %}
Param (
  #Winlogbeat Params
  [string]$logstash_host = $null,
  [string]$logstash_port = $null,
  [switch]$help = $null
)

{% endif %}
{% include 'InstallerCommon.j2' %}

function CheckService([string]$service_name, $error_flag = $no_error ) {
  Sleep 1
  $svc = Get-Service -Name $service_name -ErrorAction SilentlyContinue
  if( -not $svc -or -not $svc.Status -eq "Running" ) {
    $Script:return_value = $return_value -bor $error_flag
    return $false
  }
  return $true
}

{% if install_winlogbeat | upper == 'TRUE' %}
Try {
  if ( $help ) {
    "Usage: setup.ps1 [ -logstash_host host_ip ] [ -logstash_port port_num ]"
    "`t-logstash_host host_ip`t`tUse host_ip as the LogstashSearch host"
    "`t-logstash_port port_num`tUse port_num as the LogstashSearch port"
    exit -1
  }

  function ReplaceInFile([string]$filename, [string]$old_text, [string]$new_text) {
    if($new_text -and $old_text -ne $new_text) {
      (Get-Content $filename -Raw).Replace($old_text, $new_text) | Set-Content $filename
    }
  }

  function RegexReplaceInFile([string]$filename, `
                              [string]$prefix, `
                              [string]$target, `
                              [string]$new_text) {
    $Matches.clear()
    $srch = ("(?ms)(?<pfx>" + $prefix + ")(?<tgt>" + $target + ")")
    (Get-Content $filename -Raw) -match $srch
    ReplaceInFile -filename $filename `
                  -old_text ($Matches.pfx + $Matches.tgt) `
                  -new_text ($Matches.pfx + $new_text)
  }

  #Install Winlogbeat
  $Error.Clear()
  $wlb_archive = "{{ winlogbeat_installer.files.0.path | win_basename | regex_replace('.zip', '') }}"
  Unzip "$FOLDER\$wlb_archive.zip" "C:\Program Files\"
  [String]$wlb_path = '{{ target_dir | regex_replace('[\'"]', "") }}\' + $wlb_archive
  [String]$wlb_dest = '{{ target_dir | regex_replace('[\'"]', "") }}\Winlogbeat'
  Write-Host "wlb_path: ", $wlb_path
  if( Test-Path $wlb_dest ) {
    UninstallWinlogbeat
  }

  Rename-Item -Path $wlb_path -NewName Winlogbeat
  [string]$wlb_config = $wlb_dest + "\winlogbeat.yml"
  Copy-Item -Path .\winlogbeat.yml -Destination $wlb_config  -Force

  {# Use a bunch of regular expression to find and replace text in winlogbeat.yml. REs are #}
  {# based the default configuration file of version 6.5.2. If the file is changed up in #}
  {# future releases, these REs might not work. #}
  if($logstash_host) {
    RegexReplaceInFile -filename $wlb_config `
                       -prefix 'output.logstash:.*?hosts: \[\"' `
                       -target '[^:]*' `
                       -new_text $logstash_host
  }
  if($logstash_port) {
    RegexReplaceInFile -filename $wlb_config `
                       -prefix 'output.logstash:.*?hosts: \[[^:]*?:' `
                       -target '[^\"]*' `
                       -new_text $logstash_port
  }

  {{ target_dir }}\Winlogbeat\install-service-winlogbeat.ps1

  $wlb_service = Get-Service -Name winlogbeat
  $wlb_service.Start()

  CheckService -service_name winlogbeat -error_flag ($winlogbeat)
} Catch {
  Write-Host "Caught exception installing winlogbeat: ", $_.Exception.Message
  $Script:return_value = $return_value -bor $winlogbeat
}

{% endif %}

{% if install_sysmon | upper == 'TRUE' %}
#Install Sysmon
Try {
  $Error.Clear()
  UninstallSysmon
  Unzip "$FOLDER\Sysmon.zip" "C:\Program Files\Sysmon"
  {{ target_dir }}\Sysmon\{{ sysmon_service_name }}.exe -i -accepteula
  CheckService -service_name {{ sysmon_service_name }} -error_flag ($sysmon)
} Catch {
  Write-Host "Caught exception installing sysmon: ", $_.Exception
  $Script:return_value = $return_value -bor $sysmon
}
{% endif %}

{% if install_endgame | upper == 'TRUE' %}
#Install Endgame
Try {
  {% set install_param = '' %}
  {% include 'EndgameInstaller.j2' %}

} Catch {
  Write-Host "Caught exception installing endgame", $_.Exception
  $Script:return_value = $return_value -bor $endgame
}
{% endif %}


echo "Return Code: $return_value"
return $return_value
