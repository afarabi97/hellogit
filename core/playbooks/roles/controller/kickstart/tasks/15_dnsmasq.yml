# Configure dhcp service
---

- name: Install dnsmasq package
  yum:
    name: dnsmasq
    state: present

- name: set default dhcp network and netmask
  set_fact:
    dhcp_mask: "{{ ansible_default_ipv4.netmask }}"
    dhcp_net: "{{ ansible_default_ipv4.network }}"

- name: get dhcp network and netmask interfaces
  set_fact:
    dhcp_mask: "{{ hostvars[inventory_hostname]['ansible_' + item].ipv4.netmask }}"
    dhcp_net: "{{ hostvars[inventory_hostname]['ansible_' + item].ipv4.network }}"
  when: hostvars[inventory_hostname]['ansible_' + item] is defined
    and hostvars[inventory_hostname]['ansible_' + item].ipv4 is defined
    and hostvars[inventory_hostname]['ansible_' + item].ipv4.address == server_ip
  with_items: "{{ ansible_interfaces }}"

- name: dnsmasq template
  template:
    src: 20-dnsmasq-pxe.conf.j2
    dest: /etc/dnsmasq.d/20-dnsmasq-pxe.conf
    owner: root
    group: root
    mode: 0644
  register: dnsmasq_config

- name: pxeclient template
  template:
    src: 30-dnsmasq-pxeclients.conf.j2
    dest: /etc/dnsmasq.d/30-dnsmasq-pxeclients.conf
    owner: root
    group: root
    mode: 0644
  register: dnsmasq_config

- name: Update dnsmasq PXE
  blockinfile:
    path: /etc/dnsmasq.d/30-dnsmasq-pxeclients.conf
    marker: "# {mark} Node {{ item }}"
    block: |
      dhcp-host={{ hostvars[item].mac }},set:custompxe
  loop: "{{ groups['nodes'] }}"
  when:
    - "'nodes' in groups"
    - (hostvars[item].deployment_type == "Virtual" or hostvars[item].deployment_type == "Baremetal") and hostvars[item].mac
  notify: "Restart dnsmasq"

- name: Update MIP dnsmasq PXE
  blockinfile:
    path: /etc/dnsmasq.d/30-dnsmasq-pxeclients.conf
    marker: "# {mark} {{ item }}"
    block: |
      dhcp-host={{ hostvars[item].mac }},set:custompxe
  loop: "{{ groups['mips'] }}"
  when:
    - "'mips' in groups"
    - hostvars[item].mac
  notify: "Restart dnsmasq"

- name: Configure the firewall for dnsmasq DHCP
  firewalld:
    zone: public
    service: dhcp
    immediate: yes
    permanent: yes
    state: enabled
  notify: "Restart Docker"

- name: Configure the firewall for dnsmasq PROXY DHCP (PXE)
  firewalld:
    zone: public
    service: proxy-dhcp
    immediate: yes
    permanent: yes
    state: enabled
  notify: "Restart Docker"

- name: Configure the firewall for dnsmasq TFTP
  firewalld:
    zone: public
    service: tftp
    state: enabled
    immediate: yes
    permanent: yes
  notify: "Restart Docker"

- name: Restart dnsmasq service
  systemd:
    name: dnsmasq
    enabled: yes
    state: restarted
