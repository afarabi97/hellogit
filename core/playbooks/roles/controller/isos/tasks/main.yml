---

- name: Install mkisofs
  dnf:
    name: mkisofs
    state: present

- name: Remove Previous Iso
  file:
    path: "{{ TFPLENUM_ASSETS_DIR }}/{{ iso_filename }}"
    state: absent

- name: Create KS directory for ISO
  file:
    path: "{{ TFPLENUM_REPO_DIR }}/ks"
    state: directory

- name: Set Key
  set_fact:
    controller_public_key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
    openvpn_service: "{{ lookup('file', '/opt/tfplenum/core/playbooks/roles/openvpn/client/files/client-service') }}"
    vpnsetup: "{{ lookup('file', '/opt/tfplenum/core/playbooks/roles/openvpn/client/files/vpnsetup.sh') }}"
    vpndisable: "{{ lookup('file', '/opt/tfplenum/core/playbooks/roles/openvpn/client/files/vpndisable.sh') }}"

- name: Generate Kickstart
  template:
    src: templates/ks.cfg
    dest: "{{ TFPLENUM_REPO_DIR }}/ks/ks.cfg"

- name: Create iso menu
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "files/isolinux.cfg", dest: "{{ TFPLENUM_REPO_DIR }}/isolinux/isolinux.cfg" }
    - { src: "files/grub.cfg", dest: "{{ TFPLENUM_REPO_DIR }}/EFI/BOOT/grub.cfg"  }

- name: Generate Sensor ISO
  shell:  |
    mkisofs -o {{ TFPLENUM_ASSETS_DIR }}/{{ iso_filename }} -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -V 'RHEL 8 x86_64' -boot-load-size 4 -boot-info-table -eltorito-alt-boot -e images/efiboot.img -no-emul-boot -R -J -joliet-long -v -T .
  args:
    chdir: "{{ TFPLENUM_REPO_DIR }}"
  register: result
  changed_when: result.rc == 0
