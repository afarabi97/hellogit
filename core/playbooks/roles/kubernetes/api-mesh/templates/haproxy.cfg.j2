global
    maxconn                 4000
    log                     /dev/log local0

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option                  http-server-close
    option                  redispatch
    retries                 5
    timeout http-request    5m
    timeout queue           5m
    timeout connect         30s
    timeout client          5m
    timeout server          15m
    timeout http-keep-alive 30s
    timeout check           30s
    maxconn                 4000

frontend kube_api_frontend
  bind 127.0.0.1:{{ external_api_port }}
  bind 0.0.0.0:{{ external_api_port }}
  mode tcp
  option tcplog
  default_backend kube_api_backend

backend kube_api_backend
  mode tcp
  balance leastconn
  default-server inter 15s downinter 15s rise 2 fall 2 slowstart 60s maxconn 1000 maxqueue 256 weight 100
  option httpchk GET /healthz
  http-check expect status 200
  server {{ hostvars[groups['master_server'][0]].inventory_hostname_short }} {{ hostvars[groups['master_server'][0]].management_ipv4 }}:{{ kube_api_port }} check check-ssl verify none
{% for host in groups['servers'] %}
{% if hostvars[host].is_control_plane_node %}
  server {{ hostvars[host].inventory_hostname_short }} {{ hostvars[host].management_ipv4 }}:{{ kube_api_port }} check check-ssl verify none
{% endif %}
{% endfor %}
