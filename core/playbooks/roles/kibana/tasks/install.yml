---

- name: Create install directory
  file:
    path: "{{ kibana_dir }}"
    owner: root
    group: root
    mode: u+rw,g+rw
    state: directory

- name: Kibana Encryption Keys
  set_fact:
    encryption_key: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters,digits') }}"
    alert_encryption_key: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters,digits') }}"

- name: Create Kibana Encryption Keys
  shell: |
    kubectl create secret generic {{ item.name }} --from-literal={{ item.literal }}={{ item.key }}
  register: results
  changed_when: results.rc == 0
  with_items:
    - { name: "kibana-key-secret-settings", literal: "xpack.security.encryptionKey", key: "{{ encryption_key }}" }
    - { name: "kibana-alert-secret-settings", literal: "xpack.encryptedSavedObjects.encryptionKey", key: "{{ alert_encryption_key }}" }

- name: Create Elasticsearch Coordinating Nodes
  shell: |
    set -o pipefail
    kubectl get pods | grep tfplenum-es-coordinating | awk '{ print $1 }'
  register: coordinating_pods
  changed_when: coordinating_pods.rc == 0

- name: Set Coordinating Nodes list
  set_fact:
    coordinating_nodes: "{{ coordinating_nodes|default([]) + [ item ] }}"
  with_items: "{{ coordinating_pods.stdout_lines }}"

- name: Get ES Password
  shell: set -o pipefail && kubectl get secret tfplenum-es-elastic-user -o=jsonpath='{.data.elastic}' | base64 --decode
  register: es_password
  changed_when: es_password.rc == 0
  tags:
    - kibana-saved-objects
    - load-dashboards
    - create-kibana-space

- name: Copy Kibana Templates
  template:
    src: "templates/{{ item }}.j2"
    dest: "{{ kibana_dir }}/{{ item }}"
    owner: root
    group: root
    mode: u+rw,g+rw
  with_items:
    - kibana.yml
    - certificate.yml

- name: Copy files
  copy:
    src: "files/saved_objects/{{ item }}"
    dest: "{{ kibana_dir }}/{{ item }}"
  with_items:
    - "endgame-canvas.ndjson"
    - "internal-config.ndjson"
    - "external-config.ndjson"
  tags:
    - kibana-saved-objects

- name: Install Kibana Certificate
  shell: |
    kubectl apply -f {{ kibana_dir }}/certificate.yml
  register: result
  changed_when: result.rc == 0

- name: Install Kibana
  shell: |
    kubectl apply -f {{ kibana_dir }}/kibana.yml
  register: result
  changed_when: result.rc == 0

- name: Wait for Kibana to be ready
  import_role:
    name: kubernetes/common
    tasks_from: kube_wait
  vars:
    type: "kibana"
    namespace: "default"
    resource_name: "tfplenum"
    label: ""

- name: Wait for Kibana to become healthy
  uri:
    url: "https://{{ kibana_fqdn }}/api/status"
    return_content: yes
    validate_certs: no
    user: "{{ default_elastic_user }}"
    password: "{{ es_password.stdout }}"
    force_basic_auth: yes
  register: results_kibana
  until: (results_kibana.status == 200) and (results_kibana.json.status.overall.state == 'green')
  retries: 60
  delay: 10

- name: Delete spaces
  include_tasks: delete_spaces.yml
  loop:
    - hunt
    - audit
    - external
  tags: create-kibana-space

- name: Update Default to Hunt Space
  uri:
    method: PUT
    url: "https://{{ kibana_fqdn }}/api/spaces/space/default"
    return_content: yes
    validate_certs: no
    user: "{{ default_elastic_user }}"
    password: "{{ es_password.stdout }}"
    force_basic_auth: yes
    body_format: json
    headers:
      kbn-xsrf: true
    body: "{\"id\": \"default\", \"name\": \"Hunt\", \"description\" : \"Default hunt space\", \"color\": \"#00BFB3\", \"initials\": \"H\" }" # noqa 204
    status_code: 200, 201
  register: results
  until: (results.status == 200)
  retries: 10
  delay: 5
  tags: create-kibana-space

- name: Create External Kibana Space
  include_tasks: create_spaces.yml
  loop:
    - { task_name: "Create External Space", body: "{\"id\": \"external\", \"name\": \"External\", \"description\" : \"External Clients Space\", \"color\": \"#aabbcc\", \"initials\": \"EX\" }" } # noqa 204
    - { task_name: "Create Audit Space", body: "{\"id\": \"audit\", \"name\": \"Auditing\", \"description\" : \"Kit Auditbeat Space\", \"color\": \"#6092C0\", \"initials\": \"AB\" }" } # noqa 204
  tags: create-kibana-space

- name: Load Saved Objects
  include_tasks: load_saved_objects.yml
  with_items:
    - { file: "{{ kibana_dir }}/endgame-canvas.ndjson", space: "" }
    - { file: "{{ kibana_dir }}/internal-config.ndjson", space: "/s/audit" }
    - { file: "{{ kibana_dir }}/external-config.ndjson", space: "/s/external" }
  tags:
    - kibana-saved-objects
    - create-kibana-space
