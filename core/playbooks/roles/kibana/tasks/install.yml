---

- name: Create install directory
  file:
    path: "{{ kibana_dir }}"
    owner: root
    group: root
    mode: u+rw,g+rw
    state: directory

- name: Copy Kibana Templates
  template:
    src: "templates/{{ item }}.j2"
    dest: "{{ kibana_dir }}/{{ item }}"
    owner: root
    group: root
    mode: u+rw,g+rw
  with_items:
    - kibana.yml
    - certificate.yml

- name: Copy files
  copy:
    src: "files/saved_objects/{{ item }}"
    dest: "{{ kibana_dir }}/{{ item }}"
  with_items:
    - "config.ndjson"
    - "auditbeat-internal-index.ndjson"
    - "winlogbeat-external-index.ndjson"
    - "auditbeat-external-index.ndjson"
    - "filebeat-external-index.ndjson"
  tags:
    - kibana-saved-objects

- name: Install Kibana Certificate
  shell: |
    kubectl apply -f {{ kibana_dir }}/certificate.yml
  register: result
  changed_when: result.rc == 0

- name: Install Kibana
  shell: |
    kubectl apply -f {{ kibana_dir }}/kibana.yml
  register: result
  changed_when: result.rc == 0

- name: Get ES Password
  shell: set -o pipefail && kubectl get secret tfplenum-es-elastic-user -o=jsonpath='{.data.elastic}' | base64 --decode
  register: es_password
  changed_when: es_password.rc == 0
  tags:
    - kibana-saved-objects
    - load-dashboards
    - create-kibana-space

- name: Wait for Kibana to become healthy
  uri:
    url: "https://{{ kibana_fqdn }}/api/status"
    return_content: yes
    validate_certs: no
    user: "{{ default_elastic_user }}"
    password: "{{ es_password.stdout }}"
    force_basic_auth: yes
  register: results_kibana
  until: (results_kibana.status == 200) and (results_kibana.json.status.overall.state == 'green')
  retries: 60
  delay: 10

- name: Delete all spaces
  uri:
    method: DELETE
    url: "https://{{ kibana_fqdn }}/api/spaces/space/{{ item }}"
    return_content: yes
    validate_certs: no
    user: "{{ default_elastic_user }}"
    password: "{{ es_password.stdout }}"
    force_basic_auth: yes
    body_format: json
    headers:
      kbn-xsrf: true
    body: "{{ item }}"
    status_code: 204, 404, 400
  with_items:
    - hunt
    - audit
    - external
  tags: create-kibana-space

- name: Update Default to Hunt Space
  uri:
    method: PUT
    url: "https://{{ kibana_fqdn }}/api/spaces/space/default"
    return_content: yes
    validate_certs: no
    user: "{{ default_elastic_user }}"
    password: "{{ es_password.stdout }}"
    force_basic_auth: yes
    body_format: json
    headers:
      kbn-xsrf: true
    body: "{{ item }}"
    status_code: 200, 201
  with_items:
    - "{\"id\": \"default\", \"name\": \"Hunt\", \"description\" : \"Default hunt space\", \"color\": \"#00BFB3\", \"initials\": \"H\" }"
  tags: create-kibana-space

- name: Create External Kibana Space
  uri:
    method: POST
    url: "https://{{ kibana_fqdn }}/api/spaces/space"
    return_content: yes
    validate_certs: no
    user: "{{ default_elastic_user }}"
    password: "{{ es_password.stdout }}"
    force_basic_auth: yes
    body_format: json
    headers:
      kbn-xsrf: true
    body: "{{ item }}"
    status_code: 200, 201
  with_items:
    - "{\"id\": \"external\", \"name\": \"External\", \"description\" : \"External Clients Space\", \"color\": \"#aabbcc\", \"initials\": \"EX\" }"
    - "{\"id\": \"audit\", \"name\": \"Auditing\", \"description\" : \"Kit Auditbeat Space\", \"color\": \"#6092C0\", \"initials\": \"AB\" }"
  tags: create-kibana-space

- name: Load Saved Objects
  shell: 'curl -k -X POST -u {{ default_elastic_user }}:{{ es_password.stdout }} "https://{{ kibana_fqdn }}{{ item.space }}/api/saved_objects/_import?overwrite=true" -H "kbn-xsrf: true" --form file=@{{ item.file }}' # noqa 204
  args:
    warn: false
  retries: 5
  delay: 10
  register: saved_objects_results
  until: saved_objects_results.rc == 0
  changed_when: save_objects_results is defined
  with_items:
    - { file: "{{ kibana_dir }}/config.ndjson", space: "" }
    - { file: "{{ kibana_dir }}/auditbeat-internal-index.ndjson", space: "/s/audit" }
    - { file: "{{ kibana_dir }}/winlogbeat-external-index.ndjson", space: "/s/external" }
    - { file: "{{ kibana_dir }}/auditbeat-external-index.ndjson", space: "/s/external" }
    - { file: "{{ kibana_dir }}/filebeat-external-index.ndjson", space: "/s/external" }
  tags:
    - kibana-saved-objects
    - create-kibana-space
