---

- name: Create install directory
  file:
    path: "{{ kibana_dir }}"
    owner: root
    group: root
    mode: u+rw,g+rw
    state: directory

- name: Copy Kibana Template
  template:
    src: "templates/kibana.yml.j2"
    dest: "{{ kibana_dir }}/kibana.yml"
    owner: root
    group: root
    mode: u+rw,g+rw

- name: Copy files
  copy:
    src: "files/saved_objects/{{item}}"
    dest: "{{ kibana_dir }}/{{item}}"
  with_items:
    - "config.ndjson"
    - "winlogbeat.ndjson"
  tags:
    - kibana-saved-objects


# - set_fact:
#     kibana_secret: "{{ lookup('password', '/dev/null length=64 chars=ascii_letters,digits') }}"

# - name: Create Kibana Secret
#   shell: |
#     kubectl create secret generic kibana-secret-settings \
#     --from-literal=xpack.security.encryptionKey={{kibana_secret}}

- name: Install Kibana
  shell: |
    kubectl apply -f {{ kibana_dir }}/kibana.yml

- name: Get ES Password
  shell: |
    kubectl get secret tfplenum-es-elastic-user -o=jsonpath='{.data.elastic}' | base64 --decode
  register: es_password
  tags:
    - kibana-saved-objects
    - load-dashboards

- name: Wait for Kibana to become healthy
  uri:
    url: "https://{{ kibana_fqdn }}/api/status"
    return_content: yes
    validate_certs: no
    user: "{{default_elastic_user}}"
    password: "{{ es_password.stdout }}"
    force_basic_auth: yes
  register: results_kibana
  until: (results_kibana.status == 200) and (results_kibana.json.status.overall.state == 'green')
  retries: 60
  delay: 10

- name: Load Saved Objects
  shell:  |
    curl -k -X POST -u {{default_elastic_user}}:{{ es_password.stdout }} "https://{{ kibana_fqdn }}/api/saved_objects/_import?overwrite=true" -H "kbn-xsrf: true" --form file=@{{item}}
  args:
    warn: false
  retries: 5
  delay: 10
  register: saved_objects_results
  until: saved_objects_results.rc == 0
  with_items:
    - "{{ kibana_dir }}/config.ndjson"
  tags:
    - kibana-saved-objects
