{% set kibana_memory = 1 %}
{% set kibana_cpu = "1000m" %}

{% if kit_size > 1 %}
  {% set kibana_memory = 6 %}
  {% set kibana_cpu = "1000m" %}
{% elif kit_size == 1 %}
  {% set kibana_memory = 1 %}
  {% set kibana_cpu = "1000m" %}
{% elif kit_size == 0 %}
  {% set kibana_memory = 1 %}
  {% set kibana_cpu = "1000m" %}
{% endif %}

---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: tfplenum
spec:
  version: {{ elastic_7_version }}
  image: kibana/kibana:{{ elastic_7_version }}
  http:
    tls:
      certificate:
        secretName: kibana-certificate
  count: 1
  elasticsearchRef:
    name: "tfplenum"
  config:
    monitoring.ui.container.elasticsearch.enabled: false
    xpack.reporting.enabled: true
    elasticsearch.requestTimeout: 100000
    elasticsearch.shardTimeout: 0
    xpack.security.authc.providers:
      saml.CVAH SSO:
        order: 0
        realm: "saml1"
      basic.basic1:
        order: 1
    monitoring.kibana.collection.interval: 30000
    elasticsearch.ssl.certificateAuthorities: /etc/ssl/certs/container/ca.crt
    map.emsUrl: "https://elastic-maps-server.{{ kit_domain }}"
  secureSettings:
  - secretName: kibana-key-secret-settings
  - secretName: kibana-alert-secret-settings
  podTemplate:
    spec:
      containers:
      - name: kibana
        env:
        - name: ELASTICSEARCH_HOSTS
          value: https://{{ elastic_fqdn }}:{{ elastic_port }}
        - name: NEWSFEED_ENABLED
          value: "false"
        - name: NODE_OPTIONS
          value: "--max-old-space-size={{ (kibana_memory * 1024 / 2) | int }}"
        resources:
          requests:
            memory: {{ kibana_memory }}Gi
            cpu: {{ kibana_cpu }}
        volumeMounts:
        - name: webca
          mountPath: /etc/ssl/certs/container
          readOnly: true
      volumes:
      - name: webca
        secret:
          defaultMode: 420
          optional: false
          secretName: webca-certificate
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: role
                operator: In
                values:
                - server
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              common.k8s.elastic.co/type: "kibana"
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  labels:
    component: kibana
spec:
  selector:
    common.k8s.elastic.co/type: kibana
    kibana.k8s.elastic.co/name: tfplenum
  ports:
  - name: https
    port: {{ kibana_port }}
    targetPort: https
  type: LoadBalancer

...
