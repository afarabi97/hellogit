---
- name: set_fact domain
  set_fact:
    domain: "{{ '.'.join(groups['servers'][0].split('.')[1:]) }}"

- debug:
    msg: "Domain : {{ domain }}"

- name: change domain
  hostname:
    name: "controller.{{ domain }}"

- name: modify /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '^127\.0\.0\.1[ \t]+localhost'
    line: '127.0.0.1 localhost controller.{{ domain }}'
    state: present

- name: modify offline yum repo
  lineinfile:
    dest: '{{ item }}'
    regexp: 'baseurl=http://controller.*/offlinerepo/tfplenum'
    line: 'baseurl=http://controller.{{ domain }}/offlinerepo/tfplenum'
    state: present
  with_items:
    - '/var/www/html/offlinerepo/offline.repo'
    - '/etc/yum.repos.d/offline.repo'

- name: set_fact ansible_controller hostname and ip
  set_fact:
    ansible_controller_hostname: "controller.{{ domain }}"
    ansible_controller_ip: "{{ hostvars.localhost.ansible_default_ipv4.address }}"

- name: set_fact offline and docker repo
  set_fact:
    offline_repo_base: "http://{{ ansible_controller_hostname }}/offlinerepo"
    docker_registry_repo: "{{ ansible_controller_hostname }}"

- name: Add Vars to Servers and Sensors
  set_fact:
    host_list: "{{ groups['servers'] + groups['sensors'] }}"
    ansible_controller_hostname: "{{ ansible_controller_hostname }}"
    ansible_controller_ip: "{{ ansible_controller_ip }}"
    domain: "{{ domain }}"
    offline_repo_base: "http://{{ ansible_controller_hostname }}/offlinerepo"
    docker_registry_repo: "{{ ansible_controller_hostname }}"
  delegate_to: "{{ item }}"
  delegate_facts: True
  with_items:
    - "{{ groups['servers'] }}"
    - "{{ groups['sensors'] }}"
