# Tasks to copy a self-extracting archive of Windows monitoring agent installers
# to remote machines and install the agents.
# Uses a Docker container. Creates config files and scripts that are copied to
# the container and executed, resulting in the install or removal of a 
# Windows agents.
---
- name: Build Docker Inventory 
  template:
    src: windows_inventory.yml.j2
    dest: "{{ installer_dir }}/windows_inventory.yml"
  run_once: true
  delegate_to: localhost

- name: Build Kerberos Config File
  template:
    src: krb5.conf.j2 
    dest: "{{ installer_dir }}/krb5.conf"
  run_once: true
  delegate_to: localhost

- name: Build Python Script to Run Playbook and Return Result
  template:
    src: run_installer.py.j2
    dest: "{{ installer_dir }}/run_installer.py"
  run_once: true
  delegate_to: localhost

- name: On Docker Container Run Playbook to Remotely Install Agents
  docker_container:
    dns_servers: 
      - "{{ windows_dns }}"
    exposed_ports: 5986
    name: "{{ docker_container_name }}"
    volumes:
      - "{{ installer_dir }}/krb5.conf:/etc/krb5.conf"
      - "{{ installer_dir }}/windows_inventory.yml:{{ docker_working_dir }}/windows_inventory.yml"
      - "{{ installer_dir }}/{{ archive_name }}:{{ docker_role_path }}/files/{{ archive_name }}"
      - "{{ installer_dir }}/run_installer.py:{{ docker_working_dir }}/run_installer.py"
    image: "{{ docker_image }}"
    working_dir: "{{ docker_working_dir }}"
    tty: yes
    detach: no
    command: "/usr/bin/python run_installer.py {{ windows_password }}"
  delegate_to: localhost
  run_once: yes
  ignore_errors: yes
  register: install_results

- name: Remove Docker Container
  docker_container:
    state: absent
    name: "{{ docker_container_name }}"
  delegate_to: localhost
  run_once: yes

- set_fact:
    result_file: "{{ playbook_dir }}/results.txt"

- name: Write Docker Return Value to File
  template:
    src: results.txt.j2
    dest: "{{ result_file }}"
  delegate_to: localhost
  run_once: yes
