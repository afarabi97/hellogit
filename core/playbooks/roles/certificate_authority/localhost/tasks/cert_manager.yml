---
- name: Delete Web CA secret
  command: "kubectl delete secret {{ item }} --ignore-not-found=true"
  register: results
  changed_when: results.rc == 0
  ignore_errors: true
  with_items:
    - "{{ webca_keypair_secret }}"
    - "{{ webca_cert_secret }}"

- name: Copy Templates
  template:
    src: "templates/{{ item }}.j2"
    dest: "{{ cert_manager_dir }}/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - operator.yml
    - ca_issuer.yml

- name: "Delete Cert Manager"
  shell: |
    kubectl delete -f {{ cert_manager_dir }}/operator.yml --ignore-not-found=true
  register: results
  changed_when: results.rc == 0
  failed_when: result.rc != 0
  ignore_errors: yes

- name: "Install Cert Manager Operator ({{ cert_manager_version }})"
  shell: |
    kubectl apply -f {{ cert_manager_dir }}/operator.yml
  register: result
  changed_when: result.rc == 0

- name: Wait for Cert Manager to become healthy | This can take a 2.5 minutes
  shell: |
    set -o pipefail && kubectl get pods --namespace cert-manager | grep webhook | awk '{ print $3 }'
  register: results_certs
  changed_when: results_certs.rc == 0
  until: (results_certs.stdout == 'Running')
  retries: 60
  delay: 5

- name: Wait another 10 seconds to make sure the Cert Manager is ready
  wait_for: timeout=10
  delegate_to: localhost

- name: Delete webhook resources
  command: "kubectl delete {{ item }} --ignore-not-found=true"
  register: delete_crds
  changed_when: delete_crds.rc == 0
  with_items:
    - mutatingwebhookconfiguration.admissionregistration.k8s.io cert-manager-webhook
    - validatingwebhookconfigurations.admissionregistration.k8s.io cert-manager-webhook


- name: Create Web CA Secret
  command: "{{ item }}"
  register: result
  changed_when: result.rc == 0
  with_items:
    - "kubectl create secret generic {{ webca_keypair_secret }} --from-file=tls.crt={{ cert_manager_dir }}/webCA.crt --from-file=tls.key={{ cert_manager_dir }}/webCA.pem" # noqa 204
    - "kubectl create secret generic {{ webca_cert_secret }} --from-file=ca.crt={{ cert_manager_dir }}/webCA.crt"

- name: Create Web CA
  shell: |
    kubectl apply -f {{ cert_manager_dir }}/ca_issuer.yml
  register: result
  changed_when: result.rc == 0
