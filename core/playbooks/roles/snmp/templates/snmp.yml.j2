---
apiVersion: v1
kind: ConfigMap
metadata:
  name: snmp
data:
{% if brocade_list is defined and brocade_list %}
  brocade.conf: |
    input {
      snmp {
        hosts => [{% for host in brocade_list %}{host => "udp:{{ host }}/161" version => "3"}{{ ", " if not loop.last else "" }}{% endfor %}]

        get => [
          "1.3.6.1.2.1.1.1.0",
          "1.3.6.1.2.1.1.5.0",
          "1.3.6.1.2.1.1.3.0",
          "1.3.6.1.2.1.4.3.0",
          "1.3.6.1.2.1.4.9.0",
          "1.3.6.1.4.1.1588.2.1.1.1.26.1.0",
          "1.3.6.1.4.1.1588.2.1.1.1.26.6.0"
        ]

        tables => [
          {
            "name" => "ifTable"
            "columns" => [
              "1.3.6.1.2.1.2.2.1.2",
              "1.3.6.1.2.1.2.2.1.5",
              "1.3.6.1.2.1.2.2.1.7",
              "1.3.6.1.2.1.2.2.1.8",
              "1.3.6.1.2.1.2.2.1.13",
              "1.3.6.1.2.1.2.2.1.19"
            ]
          },
          {
            "name" => "swSensorTable"
            "columns" => [
              "1.3.6.1.4.1.1588.2.1.1.1.1.22.1.1",
              "1.3.6.1.4.1.1588.2.1.1.1.1.22.1.2",
              "1.3.6.1.4.1.1588.2.1.1.1.1.22.1.3",
              "1.3.6.1.4.1.1588.2.1.1.1.1.22.1.4",
              "1.3.6.1.4.1.1588.2.1.1.1.1.22.1.5"
            ]
          }
        ]

        type => "snmp"
        add_field => {
          "deviceType" => "brocade"
          "host" => "%{[@metadata][host_address]}"
        }

        security_name => "${SECURITY_NAME}"
        auth_protocol => "sha"
        auth_pass => "${AUTH_PASS}"
        priv_protocol => "aes"
        priv_pass => "${PRIV_PASS}"
        security_level => "authPriv"
      }
    }
{% endif %}

{% if cisco_asa_list is defined and cisco_asa_list %}
  cisco-asa.conf: |
    input {
      snmp {
        hosts => [{% for host in cisco_asa_list %}{host => "udp:{{ host }}/161" version => "3"}{{ ", " if not loop.last else "" }}{% endfor %}]

        get => [
          "1.3.6.1.2.1.1.1.0",
          "1.3.6.1.2.1.1.5.0",
          "1.3.6.1.2.1.1.3.0",
          "1.3.6.1.4.1.9.9.48.1.1.1.6.1",
          "1.3.6.1.4.1.9.9.48.1.1.1.5.1"
        ]

        tables => [
          {
            "name" => "ifTable"
            "columns" => [
              "1.3.6.1.2.1.2.2.1.2",
              "1.3.6.1.2.1.2.2.1.5",
              "1.3.6.1.2.1.2.2.1.7",
              "1.3.6.1.2.1.2.2.1.8",
              "1.3.6.1.2.1.2.2.1.13",
              "1.3.6.1.2.1.2.2.1.19"
            ]
          },
          {
            "name" => "entPhysicalTable"
            "columns" => [
              "1.3.6.1.2.1.47.1.1.1.1.2",
              "1.3.6.1.2.1.47.1.1.1.1.5"
            ]
          },
          {
            "name" => "entPhySensorTable"
            "columns" => [
              "1.3.6.1.2.1.99.1.1.1.1",
              "1.3.6.1.2.1.99.1.1.1.2",
              "1.3.6.1.2.1.99.1.1.1.3",
              "1.3.6.1.2.1.99.1.1.1.4",
              "1.3.6.1.2.1.99.1.1.1.5",
              "1.3.6.1.2.1.99.1.1.1.6"
            ]
          },
          {
            "name" => "cpmCPUTotalTable"
            "columns" => [
              "1.3.6.1.4.1.9.9.109.1.1.1.1.8"
            ]
          }
        ]

        type => "snmp"
        add_field => {
          "deviceType" => "cisco_asa"
          "host" => "%{[@metadata][host_address]}"
        }

        security_name => "${SECURITY_NAME}"
        auth_protocol => "sha"
        auth_pass => "${AUTH_PASS}"
        priv_protocol => "aes"
        priv_pass => "${PRIV_PASS}"
        security_level => "authPriv"
      }
    }
{% endif %}

{% if cisco_switch_list is defined and cisco_switch_list %}
  cisco-switch.conf: |
    input {
      snmp {
        hosts => [{% for host in cisco_switch_list %}{host => "udp:{{ host }}/161" version => "3"}{{ ", " if not loop.last else "" }}{% endfor %}]

        get => [
          "1.3.6.1.2.1.1.1.0",
          "1.3.6.1.4.1.9.2.1.3.0",
          "1.3.6.1.2.1.1.3.0",
          "1.3.6.1.4.1.9.9.109.1.1.1.1.6.1",
          "1.3.6.1.4.1.9.9.48.1.1.1.6.1",
          "1.3.6.1.4.1.9.9.48.1.1.1.5.1",
          "1.3.6.1.2.1.4.3.0",
          "1.3.6.1.2.1.4.9.0"
        ]

        tables => [
          {
            "name" => "ifTable"
            "columns" => [
              "1.3.6.1.2.1.2.2.1.2",
              "1.3.6.1.2.1.2.2.1.5",
              "1.3.6.1.2.1.2.2.1.7",
              "1.3.6.1.2.1.2.2.1.8",
              "1.3.6.1.2.1.2.2.1.13",
              "1.3.6.1.2.1.2.2.1.19"
            ]
          },
          {
            "name" => "cswSwitchInfoTable"
            "columns" => [
              "1.3.6.1.4.1.9.9.500.1.2.1.1.6"
            ]
          },
          {
            "name" => "ciscoEnvMonTemperatureStatusTable"
            "columns" => [
              "1.3.6.1.4.1.9.9.13.1.3.1.2",
              "1.3.6.1.4.1.9.9.13.1.3.1.3",
              "1.3.6.1.4.1.9.9.13.1.3.1.6"
            ]
          },
          {
            "name" => "ciscoEnvMonFanStatusTable"
            "columns" => [
              "1.3.6.1.4.1.9.9.13.1.4.1.2",
              "1.3.6.1.4.1.9.9.13.1.4.1.3"
            ]
          }
        ]

        type => "snmp"
        add_field => {
          "deviceType" => "cisco_switch"
          "host" => "%{[@metadata][host_address]}"
        }

        security_name => "${SECURITY_NAME}"
        auth_protocol => "sha"
        auth_pass => "${AUTH_PASS}"
        priv_protocol => "aes"
        priv_pass => "${PRIV_PASS}"
        security_level => "authPriv"
      }
    }
{% endif %}

{% if dell_m630_list is defined and dell_m630_list %}
  dell_m630.conf: |
    input {
      snmp {
        hosts => [{% for host in dell_m630_list %}{host => "udp:{{ host }}/161" version => "3"}{{ ", " if not loop.last else "" }}{% endfor %}]

        get => [
          "1.3.6.1.2.1.1.5.0",
          "1.3.6.1.4.1.674.10892.5.2.5.0",
          "1.3.6.1.2.1.1.3.0",
          "1.3.6.1.2.1.4.3.0",
          "1.3.6.1.2.1.4.9.0"
        ]

        tables => [
          {
            "name" => "ifTable"
            "columns" => [
              "1.3.6.1.2.1.2.2.1.2",
              "1.3.6.1.2.1.2.2.1.5",
              "1.3.6.1.2.1.2.2.1.7",
              "1.3.6.1.2.1.2.2.1.8",
              "1.3.6.1.2.1.2.2.1.13",
              "1.3.6.1.2.1.2.2.1.19"
            ]
          },
          {
            "name" => "processorDeviceTable"
            "columns" => [
              "1.3.6.1.4.1.674.10892.5.4.1100.30.1.5",
              "1.3.6.1.4.1.674.10892.5.4.1100.30.1.23",
              "1.3.6.1.4.1.674.10892.5.4.1100.30.1.11",
              "1.3.6.1.4.1.674.10892.5.4.1100.30.1.12",
              "1.3.6.1.4.1.674.10892.5.4.1100.30.1.17",
              "1.3.6.1.4.1.674.10892.5.4.1100.30.1.19"
            ]
          },
          {
            "name" => "memoryDeviceTable"
            "columns" => [
              "1.3.6.1.4.1.674.10892.5.4.1100.50.1.5",
              "1.3.6.1.4.1.674.10892.5.4.1100.50.1.14"
            ]
          },
          {
            "name" => "physicalDiskTable"
            "columns" => [
              "1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.4",
              "1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.55",
              "1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.35",
              "1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.11",
              "1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.17",
              "1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.19"
            ]
          },
          {
            "name" => "temperatureProbeTable"
            "columns" => [
              "1.3.6.1.4.1.674.10892.5.4.700.20.1.8",
              "1.3.6.1.4.1.674.10892.5.4.700.20.1.6",
              "1.3.6.1.4.1.674.10892.5.4.700.20.1.5"
            ]
          }
        ]

        type => "snmp"
        add_field => {
          "deviceType" => "dell_m630"
          "host" => "%{[@metadata][host_address]}"
        }

        security_name => "${SECURITY_NAME}"
        auth_protocol => "sha"
        auth_pass => "${AUTH_PASS}"
        priv_protocol => "aes"
        priv_pass => "${PRIV_PASS}"
        security_level => "authPriv"
      }
    }
{% endif %}

{% if dell_san_list is defined and dell_san_list %}
  dell_san.conf: |
    input {
      snmp {
        hosts => [{% for host in dell_san_list %}{host => "udp:{{ host }}/161" version => "3"}{{ ", " if not loop.last else "" }}{% endfor %}]

        get => [
          "1.3.6.1.4.1.674.11000.2000.500.1.2.1.0",
          "1.3.6.1.4.1.674.11000.2000.500.1.2.29.1.4.1",
          "1.3.6.1.2.1.1.3.0",
          "1.3.6.1.2.1.4.3.0",
          "1.3.6.1.2.1.4.9.0"
        ]

        tables => [
          {
            "name" => "scEnclTable"
            "columns" => [
              "1.3.6.1.4.1.674.11000.2000.500.1.2.15.1.4"
            ]
          },
          {
            "name" => "scEnclTempTable"
            "columns" => [
              "1.3.6.1.4.1.674.11000.2000.500.1.2.23.1.3",
              "1.3.6.1.4.1.674.11000.2000.500.1.2.23.1.4",
              "1.3.6.1.4.1.674.11000.2000.500.1.2.23.1.5"
            ]
          },
          {
            "name" => "scCtlrTable"
            "columns" => [
              "1.3.6.1.4.1.674.11000.2000.500.1.2.13.1.4"
            ]
          },
          {
            "name" => "scCtlrTempTable"
            "columns" => [
              "1.3.6.1.4.1.674.11000.2000.500.1.2.19.1.3",
              "1.3.6.1.4.1.674.11000.2000.500.1.2.19.1.4",
              "1.3.6.1.4.1.674.11000.2000.500.1.2.19.1.5",
              "1.3.6.1.4.1.674.11000.2000.500.1.2.19.1.8",
              "1.3.6.1.4.1.674.11000.2000.500.1.2.19.1.9"
            ]
          },
          {
            "name" => "scCtlrFanTable"
            "columns" => [
              "1.3.6.1.4.1.674.11000.2000.500.1.2.16.1.3",
              "1.3.6.1.4.1.674.11000.2000.500.1.2.16.1.4",
              "1.3.6.1.4.1.674.11000.2000.500.1.2.16.1.5"
            ]
          }
        ]

        type => "snmp"
        add_field => {
          "deviceType" => "dell_san"
          "host" => "%{[@metadata][host_address]}"
        }

        security_name => "${SECURITY_NAME}"
        auth_protocol => "sha"
        auth_pass => "${AUTH_PASS}"
        priv_protocol => "aes"
        priv_pass => "${PRIV_PASS}"
        security_level => "authPriv"
      }
    }
{% endif %}

{% if dell_4112_list is defined and dell_4112_list %}
  dell-4112.conf: |
    input {
      snmp {
        hosts => [{% for host in dell_4112_list %}{host => "udp:{{ host }}/161" version => "3"}{{ ", " if not loop.last else "" }}{% endfor %}]

        get => [
          "1.3.6.1.2.1.1.1.0",
          "1.3.6.1.2.1.1.5.0",
          "1.3.6.1.2.1.1.3.0",
          "1.3.6.1.2.1.4.3.0",
          "1.3.6.1.2.1.4.9.0"
        ]

        tables => [{
          "name" => "ifTable"
          "columns" => [
            "1.3.6.1.2.1.2.2.1.2",
            "1.3.6.1.2.1.2.2.1.5",
            "1.3.6.1.2.1.2.2.1.7",
            "1.3.6.1.2.1.2.2.1.8",
            "1.3.6.1.2.1.2.2.1.13",
            "1.3.6.1.2.1.2.2.1.19"
          ]
        }]

        type => "snmp"
        add_field => {
          "deviceType" => "dell_4112"
          "host" => "%{[@metadata][host_address]}"
        }

        security_name => "${SECURITY_NAME}"
        auth_protocol => "sha"
        auth_pass => "${AUTH_PASS}"
        priv_protocol => "aes"
        priv_pass => "${PRIV_PASS}"
        security_level => "authPriv"
      }
    }
{% endif %}

  elasticsearch.conf: |
    output {
      elasticsearch {
        hosts => {{ ingest_nodes | to_json }}
        cacert => '/etc/ssl/certs/container/ca.crt'
        ssl_certificate_verification => true
        user => "${ELASTICSEARCH_USERNAME}"
        password => "${ELASTICSEARCH_PASSWORD}"
        ilm_rollover_alias => "snmp-data"
        ilm_policy => "snmp"
        ilm_enabled => true
        ilm_pattern => "{now/d}-000001"
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snmp-deployment
  labels:
    app: snmp-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      component: snmp-manager
  template:
    metadata:
      labels:
        component: snmp-manager
    spec:
      containers:
      - name: logstash
        image: "logstash/logstash:{{ docker_versions.elastic_7_version }}"
        imagePullPolicy: Always
        env:
        - name: LS_JAVA_OPTS
          value: "-Xmx1g -Xms1g"
        - name: XPACK_MONITORING_ENABLED
          value: "false"
        - name: ELASTICSEARCH_USERNAME
          valueFrom:
            secretKeyRef:
              name: tfplenum-logstash-user
              key: username
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tfplenum-logstash-user
              key: password
        - name: SECURITY_NAME
          valueFrom:
            secretKeyRef:
              name: snmp-auth
              key: security_name
        - name: AUTH_PASS
          valueFrom:
            secretKeyRef:
              name: snmp-auth
              key: auth_pass
        - name: PRIV_PASS
          valueFrom:
            secretKeyRef:
              name: snmp-auth
              key: priv_pass
        resources:
          requests:
            cpu: 1000m
            memory: 1Gi
        volumeMounts:
        - name: webca
          mountPath: /etc/ssl/certs/container
          readOnly: true
        - name: pipeline
          mountPath: /usr/share/logstash/pipeline
      nodeSelector:
        role: server
      volumes:
      - name: webca
        secret:
          defaultMode: 420
          optional: false
          secretName: webca-certificate
      - name: pipeline
        configMap:
          name: snmp
