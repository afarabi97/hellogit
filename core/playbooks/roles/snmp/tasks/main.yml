---
- name: Delete snmp-auth secret.
  command: "kubectl delete secret snmp-auth --ignore-not-found"
  register: result
  changed_when: result.rc == 0

- name: Create snmp-auth secret.
  command: kubectl create secret generic snmp-auth --from-literal=auth_pass={{ snmp.auth_pass | default(auth_pass) }} --from-literal=priv_pass={{ snmp.priv_pass | default(priv_pass) }} --from-literal=security_name={{ snmp.security_name | default(security_name) }}
  register: result
  changed_when: result.rc == 0

- name: Get a list of ingest nodes.
  import_role:
    name: elasticsearch
    tasks_from: get_nodes

- name: Create a config directory.
  file:
    path: "{{ snmp_dir }}"
    state: directory
    owner: root
    group: root
    mode: u+rw,g+rw

- name: Install the resource file.
  template:
    src: "templates/snmp.yml.j2"
    dest: "{{ snmp_dir }}/snmp.yml"
    group: root
    owner: root
    mode: 0644

- name: Delete resources.
  command: "kubectl delete -f {{ snmp_dir }}/snmp.yml --ignore-not-found=true"
  register: result
  changed_when: result.rc == 0

- name: Wait for pods to stop being listed.
  shell: |
    while [ $(kubectl get pods --no-headers | awk '{ print $1 }' | grep 'snmp-deployment-.*' | tail -n +0 | wc -l) != '0' ]; do
      echo -n .;
      sleep 1;
    done;
  register: result
  changed_when: result.rc == 0
  failed_when: result.rc != 0
  ignore_errors: yes

- name: Create resources.
  include_role:
    name: kubernetes/common
    tasks_from: kube_create
  vars:
    name: "Snmp"
    file_name: "{{ snmp_dir }}/snmp.yml"

- name: Wait for deployment to be ready.
  import_role:
    name: kubernetes/common
    tasks_from: kube_wait
  vars:
    type: "deployments"
    namespace: "default"
    resource_name: "snmp-deployment"
    label: ""

- name: Get password from tfplenum-es-elastic-user secret.
  shell: |
    set -o pipefail
    kubectl get secret tfplenum-es-elastic-user -o=jsonpath='{.data.elastic}' | base64 --decode
  register: es_password
  changed_when: es_password.rc == 0

- name: Configure index lifecycle policy.
  uri:
    url: "https://{{ elastic_uri }}/_ilm/policy/snmp"
    method: PUT
    validate_certs: no
    user: "{{ default_elastic_user }}"
    password: "{{ es_password.stdout }}"
    force_basic_auth: yes
    body_format: json
    body: "{{ lookup('file', 'files/ilm_policy.json') }}"
    status_code: 200, 201
  register: policy_results
  until: policy_results.status == 200
  retries: 10
  delay: 5
