vmaccepteula
install --overwritevmfs --firstdisk
reboot

rootpw --iscrypted $1$6Sc5J137$mX5NndlsPUqtTjzSJigbA/

%firstboot --interpreter=busybox

# enable & start SSH
vim-cmd hostsvc/enable_ssh
vim-cmd hostsvc/start_ssh

# enable & start ESXi Shell
vim-cmd hostsvc/enable_esx_shell
vim-cmd hostsvc/start_esx_shell

#Shut off usbarbitor service
/etc/init.d/usbarbitrator stop

function set_disk_name(){
    local is_empty=false
    esxcli storage core device list | while read line; do
    if [ "$is_empty" = true ]; then
        disk_name="$line"
        is_empty=false
    fi

    if [ "$line" = "Is USB: true" ]; then
        echo "$disk_name"
        break
    fi

    if [ -z "$line" ]; then
        is_empty=true
    fi
    done
}

DISK_NAME=$(set_disk_name)

# Copy pfsense VM to the appropriate datastore.
mkdir -p /vmfs/volumes/datastore1/firewall/tmp
/bin/mcopy -i "/dev/disks/${DISK_NAME}:5" ::/firewall/firewall* /vmfs/volumes/datastore1/firewall/

# Clone the firewall disk to fix export errors
cd /vmfs/volumes/datastore1/firewall/
vmkfstools -i firewall-disk1.vmdk tmp/firewall-disk1.vmdk -d thin
mv -f tmp/*
rm -rf tmp/

exec < /dev/tty1 > /dev/tty1 2>&1
chvt 1

function menu_header {
  echo " ___ _ _ ___| |_    _ _ _ ___ ___ ___ ___ ___    ___ _ _ ___| |_ ___ _____";
  echo "|  _| | | .'|   |  | | | | -_| .'| . | . |   |  |_ -| | |_ -|  _| -_|     |";
  echo "|___|\_/|__,|_|_|  |_____|___|__,|  _|___|_|_|  |___|_  |___|_| |___|_|_|_|";
  echo "                                 |_|                |___|                  ";
}

function review {
  echo "Subnet review for CVA/H program."
  echo "Global Kit ID: $subnets"
  echo "Management: 10.${x}.$((y)).0/24"
  echo "Internal: 10.${x}.$((y + 1)).0/24"
  echo "DMZ: 10.${x}.$((y + 2)).0/24"
  echo "Spare: 10.${x}.$((y + 3)).0/24"
}

function decode_subnets {
  a=$(echo -n ${1:0:3} | sed -e  "s/^0\{0,2\}//g")
  b=$(echo -n ${1:3:3} | sed -e  "s/^0\{0,2\}//g")
  if [ $((a <= 127)) == "1" ]; then
    x="$(($a))"
    y="$(($b * 4 + 124))"
  else
    x="$(($a))"
    y="$((($b - 1) * 4))"
  fi
}

function validate {
  echo -n $1 | grep -q -E '^(((0[0-9][0-9]|1[0-2][0-7])(0[0-2][0-9]|0[0-3][0-2]))|((12[8-9]|1[3-9][0-9]|2[0-3][0-2]|23[012456789]|24[0-9]|25[0-3])(0[0-5][0-9]|06[0-4])))$'
}

menu_header
read -p 'Enter domain: ' DOMAIN
while true;
do
  read -p "Enter the string that encodes your subnets: " SUBNETS
  validate $SUBNETS
  if [ $? -eq 0 ]; then
    break
  fi
done
# Decodes the global kit id and sets the x and y variables.
decode_subnets $SUBNETS
review
                                                                                                                                                                                                                                                                                                                                                                                  
# Setup portgroups
esxcli network vswitch standard portgroup add --portgroup-name=ESXI-MGMT --vswitch-name=vSwitch0
esxcli network vswitch standard portgroup add --portgroup-name=DMZ --vswitch-name=vSwitch0
esxcli network vswitch standard portgroup add --portgroup-name=Internal --vswitch-name=vSwitch0
esxcli network vswitch standard portgroup add --portgroup-name=External --vswitch-name=vSwitch0
esxcli network vswitch standard portgroup add --portgroup-name=Management --vswitch-name=vSwitch0
esxcli network vswitch standard portgroup add --portgroup-name=Spare --vswitch-name=vSwitch0
esxcli network vswitch standard portgroup set -p ESXI-MGMT --vlan-id 32
esxcli network vswitch standard portgroup set -p Management --vlan-id 32
esxcli network vswitch standard portgroup set -p Spare --vlan-id 33
esxcli network vswitch standard portgroup set -p Internal --vlan-id 35
esxcli network vswitch standard portgroup set -p External --vlan-id 36
esxcli network vswitch standard portgroup set -p DMZ --vlan-id 37

# Configure vmk0
esxcli network ip interface remove --interface-name=vmk0
esxcli network ip interface add --interface-name=vmk0 --portgroup-name=ESXI-MGMT

# Remove unneeded default portgroups
esxcli network vswitch standard portgroup remove --portgroup-name="VM Network" --vswitch-name=vSwitch0
esxcli network vswitch standard portgroup remove --portgroup-name="Management Network" --vswitch-name=vSwitch0

# Setup default policies for stigs
esxcli network vswitch standard policy security set --vswitch-name=vSwitch0 --allow-promiscuous=true --allow-mac-change=false --allow-forged-transmits=true
esxcli system settings advanced set -o "/UserVars/ESXiVPsDisabledProtocols" -s "tlsv1,tlsv1.1,sslv3"

# Configure the network interface
esxcli network ip interface ipv4 set -i vmk0 -I "10.$x.$y.2" -N "255.255.255.0" -t static
esxcli network ip interface ipv6 set --interface-name=vmk0 --enable-ipv6=false
esxcfg-route -a default "10.$x.$y.1"
esxcli system hostname set --host=esx
esxcli system hostname set --fqdn=esx.${DOMAIN}

# Register and power on the pfsense VM
vmid=$(vim-cmd solo/registervm /vmfs/volumes/datastore1/firewall/firewall.vmx)
vim-cmd vmsvc/power.on $vmid

vim-cmd hostsvc/autostartmanager/update_autostartentry $vmid "powerOn" "30" "1" "systemDefault" "systemDefault" "systemDefault"

# Enable autostart features on pfsense VM
vim-cmd hostsvc/autostartmanager/enable_autostart true
vim-cmd hostsvc/autostartmanager/update_autostartentry $vmid "powerOn" "30" "1" "systemDefault" "systemDefault" "systemDefault"

services.sh restart
