---
- name: Install packages required for MDT and CPT
  dnf:
    name: "{{ item }}"
    state: present
  loop: "{{ packages }}"

- name: Create tmp install directory for third party software
  file:
    path: "{{ tmp_apps }}"
    state: directory

- name: Download main software from controller webserver into tmp dir
  get_url:
    url: "{{ item }}"
    dest: "{{ tmp_apps }}"
    timeout: 120
  loop: "{{ software }}"

- name: Extract new kernel files
  unarchive:
    src: "{{ tmp_apps }}/{{ kernel_file }}"
    dest: "{{ tmp_apps }}"
    remote_src: yes

- name: Install New Kernel files
  command:
    argv:
      - dnf
      - -y
      - localinstall
      - kernel-4.18.0-372.19.1.el8_6.x86_64.rpm
      - kernel-core-4.18.0-372.19.1.el8_6.x86_64.rpm
      - kernel-devel-4.18.0-372.19.1.el8_6.x86_64.rpm
      - kernel-headers-4.18.0-372.19.1.el8_6.x86_64.rpm
      - kernel-modules-4.18.0-372.19.1.el8_6.x86_64.rpm
      - kernel-tools-4.18.0-372.19.1.el8_6.x86_64.rpm
      - kernel-tools-libs-4.18.0-372.19.1.el8_6.x86_64.rpm
      - linux-firmware-20220210-107.git6342082c.el8.noarch.rpm
    chdir: "{{ tmp_apps }}/kernel/"
  register: result
  changed_when: result.rc == 0
  failed_when: result.rc > 0

- name: Find and register kernel version
  command: uname -r
  register: kernel_results
  changed_when: kernel_results.rc == 0
  failed_when:  kernel_results.rc > 0

- name: Fix /usr/bin permissions - currently dumpcap (wireshark)
  file:
    path: /usr/bin/dumpcap
    mode: o+rx

- name: Reboot system and utilize new kernel
  reboot:
    reboot_timeout: 2000
    test_command: "whoami"
  when: kernel_results.stdout != kernel_version

- name: Create hidden file for validation if playbooks crash
  file:
    path: /operator/.DO_NOT_DELETE/.003
    state: touch

...
