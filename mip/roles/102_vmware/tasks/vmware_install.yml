---
- name: Execute bundle installation
  shell: >
    sh {{ vmware_path }} --eulas-agreed --console --required
    --set-setting=vmware-player-app softwareUpdateEnabled no
    --set-setting=vmware-player-app dataCollectionEnabled no
    --set-setting=vmware-workstation-server hostdUser {{ user }}
    --set-setting=vmware-workstation-server datastore {{ vmware_dir }}
    --set-setting=vmware-workstation-server httpsPort 443
    --set-setting vmware-workstation serialNumber {{ vmware_license }}
  register: result
  changed_when: result.rc == 0
  failed_when:  result.rc > 0

- name: Install additional VMware modules
  command: vmware-modconfig --console --install-all
  register: result
  changed_when: result.rc == 0
  failed_when:  result.rc > 0

- name: Copy vmware shorcut to desktop
  copy:
    src: "{{ application_path }}/{{ vmware_desktop_app }}"
    dest: "{{ user_desktop }}"
    remote_src: yes

- name: Trust vmware desktop application
  become: yes
  become_user: "{{ user }}"
  command: /usr/bin/dbus-run-session gio set "{{ user_desktop }}/{{ vmware_desktop_app }}" 'metadata::trusted' true
  register: result
  changed_when: result.rc == 0
  failed_when: result.rc > 0

- name: Change vmware desktop permissions
  file:
    path: "{{ user_desktop }}/{{ vmware_desktop_app }}"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0774'

- name: Check if the vmware-USBArbitrator service failed. # noqa command-instead-of-module
  command: "systemctl show -p SubState --value vmware-USBArbitrator"
  register: result
  changed_when: no
  when: ansible_virtualization_role == "guest"

# The vmware-USBArbitrator service can fail if the virtual machine doesn't have a USB controller.
- name: Disable the vmware-USBArbitrator service.
  systemd:
    name: vmware-USBArbitrator
    state: stopped
    enabled: no
  when: ansible_virtualization_role == "guest" and "failed" in result.stdout
...
