---
- name: Unpack wireshark tar file
  unarchive:
    src: "{{ wireshark_path }}"
    dest: "{{ tmp_apps }}"
    remote_src: yes
    owner: root
    group: root
  register: wireshark_source

- name:  Generate configure file with autogen
  command: ./autogen.sh
  args:
    chdir: "{{ wireshark_tmp_install_dir }}"
  register: result
  changed_when: result.rc == 0
  failed_when:  result.rc > 0

- name:  Configure file wireshark source code
  command: "./configure --prefix={{ wireshark_install_dir }}"
  args:
    chdir: "{{ wireshark_tmp_install_dir }}"
  register: wireshark_conf
  changed_when: wireshark_conf.rc == 0
  failed_when:  wireshark_conf.rc > 0
  when: result.rc == 0

- name: Clean build before compiling code
  command: make clean
  args:
    chdir: "{{ wireshark_tmp_install_dir }}"
  register: wireshark_clean
  changed_when: wireshark_clean.rc == 0
  failed_when:  wireshark_clean.rc > 0
  when: wireshark_conf.rc == 0

- name: Make sources and install source code
  command: "{{ item }}"
  loop:
    - make -j7
    - make install
  args:
    chdir: "{{ wireshark_tmp_install_dir }}"
  when: wireshark_clean.rc == 0

- name: Find file names
  find:
    paths: "{{ wireshark_install_dir }}/bin/"
    recurse: yes
  register: wireshark_bins

- name: Set Wireshark files
  set_fact:
    wireshark_files: "{{ wireshark_bins['files'] | map(attribute='path') | list }}"

- name: Set Wireshark Binary Permissions
  file:
    path: "{{ item }}"
    mode: '0750'
    group: "{{ operator_group }}"
  loop: "{{ wireshark_files }}"

- name: Create symbolic links to /usr/bin for wireshark applications
  file:
    src: "{{ item }}"
    dest: "/usr/bin/{{ item.split('/')[-1] }}"
    state: link
    force: yes
  loop: "{{ wireshark_files }}"

- name: Create symbolic link for wireshark desktop
  file:
    src: "{{ wireshark_desktop_dir }}"
    dest: "{{ wireshark_desktop_application }}"
    state: link

- name: Replace path to wireshark icon
  replace:
    path: "{{ wireshark_desktop_dir }}"
    regexp: 'Icon=wireshark'
    replace: "Icon={{ wireshark_icon_dir }}"

- name: Create hidden file for validation if playbooks crash
  file:
    path: /operator/.DO_NOT_DELETE/.101
    state: touch
...
