#!/bin/sh

#Info
#====
#	file: set_passwords
# 	name: RHEL-7 Set Passwords

#	version: 1.31
# 		*version is major.minor format
# 		*major is update when new capability is added
# 		*minor is update on fixes & improvements

#History
#=======
# 	29May2015 v1.30
#		Andrew Benson
#		Frank Vasko
#		*Modified to input users from userfile vs hard-coded in script
#		*fixed CRLF issue.
#		*Changed script name from change_passwords.

#	20Dec2016 v1.31
#		Czerwinski
#		*Updated file header to standard format


#Description
#===========


#Notes
#=====


echo

if [ ! -f $1 ] || [ -z $2 ]; then
	echo "usage: $0 <userfile> <pwfile|pw>"
	echo "userfile = /path/to/file of user list, one user per line"
	echo "pwfile = /path/to/file with the new password on first line"
	echo "pw = new password"
	echo
	if [ ! -z $1 ] && [ ! -f $1 ]; then
		echo "userfile $1 does not exist."
	fi
	if [ ! -f $1 ] || [ -z $1 ]; then
		echo -n "Enter userfile path/name: "
		read userfile
	fi
	if [ -z $2 ]; then
		echo -n "Enter pwfile path/name or new password: "
		read pwfile
	else
		pwfile=$2
	fi
	echo
else
	userfile=$1
	pwfile=$2
fi

if [ ! -f $userfile ]; then
	echo "File $userfile does not exist."
	echo "Password not changed!"
	echo "Press enter to exit."
	read
	exit
fi

if [ ! -f $pwfile ]; then
	read -p "$pwfile is not a file; is this the new password [Y/n]? " -n 1 -r
	echo
	if [[ $REPLY =~ ^[Yy]$ ]]; then
		PASS=$pwfile
		echo
	else
		echo "Password not changed!"
		echo "Press enter to exit."
		read
		exit
	fi
else
	sed -i -e '$a\' $pwfile
	PASS=$(head -1 $pwfile)
fi

echo "Setting password to $PASS"

sed -i -e '$a\' $userfile
while read username; do
	if id -u $username >/dev/null 2>&1; then
		echo "$PASS" | passwd --stdin $username
	else
		echo "***** User $username does not exist *****"
	fi
done < $userfile
echo

if [ -f $pwfile ]; then
	read -p "Securely delete password file: $2 [Y/n]? " -n 1 -r
	echo
	if [[ $REPLY =~ ^[Yy]$ ]]; then
		shred -z -u $pwfile
		echo "File '$pwfile' securely deleted."
	else
		echo "File '$pwfile' was NOT deleted."
	fi
fi

echo
