---
# The inventory defines which hosts belong to which groups and what variables are applied to them. The playbooks
# themselves in our scheme do not define any variables. The names you see on the far left here correspond to the limit
# function you can run with the ansible-playbook command. For example ansible-playbook site.yml --limit sensor would
# look at this inventory file and see the hosts that are part of the sensor group. When site.yml imports the sensors.yml
# file, sensor.yml will only apply itself to the servers listed in the sensors group in this inventory file.

all:
  vars:

    #############################
    # General System Settings   #
    #############################

    # The IP address of the system DNS server. You may define this or it will default
    # to using the master server's management IP. We suggest you leave it to default
    # unless you have a specific reason to use a different DNS server. Keep in mind
    # you will need to manually provide all required DNS entries on your separate
    # DNS Server or the kit will break.
    dns_ip: {{ template_ctx.dns_ip }}

    # The Pfsense IP address that will be added as a dns forward lookup to the Kubernetes master node's dnsmasq service.
    # If you need to add external DNS IPAddress entries login to your PfSense firewall and add them there.
    # All the servers sensors point to the dnsmasq that resides on the kubernetes master if DNS lookups fail here,
    # it will then try and resolve the dns names through the PFSense firewall.
    pfsense_ipaddress: {{ template_ctx.pfsense_ipaddress }}

    #############################
    # Kubernetes Settings       #
    #############################

    # kubernetes_services_cidr is the range of addresses kubernetes will use for external services
    # This includes cockpit, Moloch viewer, Kibana, elastichq, and
    # the kubernetes dashboard. This range must be at least a /28. Ex: "192.168.1.16/28"
    kubernetes_services_cidr: "{{ template_ctx.kubernetes_services_cidr }}"

    #############################
    # Software Locations        #
    #############################

    # WARNING!!!: As a rule of thumb, you should not change any of these unless
    # you have a full understanding of the consequences.

  children:
    nodes:
      children:

    #############################
    # Sensor Settings           #
    #############################

    # Here you will define any variables specific to each sensor host.
        remote_sensors:

        sensors:
          {% if template_ctx.sensor_count > 0 %}
          hosts:
          {% endif %}
          {% for node in template_ctx.nodes %}
            {% if node.node_type == "Sensor" %}
            # This is the hostname of the sensor. Whatever you put here will be
            # used to overwrite the current hostname.
            {{ node.hostname }}:
              # This is the user you will use to SSH to each box for setup. This
              # should always be root.
              ansible_user: root

              # This is the Ansible connection type. This should always be SSH.
              ansible_connection: ssh

              # The amount of milli CPUs that will be reserved for the host Operating system.
              # This is required so a Kubernetes pod does not accidentally starve a node of all
              # its resources.
              sys_cpu_reserve: {{ node.reservations.sys_cpu_reserve }}

              # The amount of KiB that will be reserved for the host operating system.
              # This is required so a Kubernetes pod does not accidentally starve a node of all
              # its resources.
              sys_mem_reserve: {{ node.reservations.sys_mem_reserve }}

              # The amount of milli CPUs that will be reserved for the kubernetes services.
              # This is required so a Kubernetes pod does not accidentally starve a node of all
              # its resources.
              kube_cpu_reserve: {{ node.reservations.kube_cpu_reserve }}

              # The amount of KiB that will be reserved for the kubernetes services.
              # This is required so a Kubernetes pod does not accidentally starve a node of all
              # its resources.
              kube_mem_reserve: {{ node.reservations.kube_mem_reserve }}

              # This is the management IP address of the node. Ex: 192.168.1.198
              # This is the address Ansible will use to communicate with.
              management_ipv4: "{{ node.management_ip_address }}"

              is_remote: {{ node.is_remote }}
            {% endif %}
          {% endfor %}

    #############################
    # Server Settings           #
    #############################

    # See the sensor section for explanation of values. Servers exist primarily
    # to run Elasticsearch and provide the horsepower to run the sensors. You can
    # see the group section for a list of things that run specifically on servers
    # only.

        servers:
          {% if template_ctx.server_count > 0 %}
          hosts:
          {% endif %}
            {% for node in template_ctx.nodes %}
            {% if node.node_type == "Server" %}
            {{ node.hostname }}:
              ansible_user: root
              ansible_connection: ssh
              sys_cpu_reserve: {{ node.reservations.sys_cpu_reserve }}
              sys_mem_reserve: {{ node.reservations.sys_mem_reserve }}
              kube_cpu_reserve: {{ node.reservations.kube_cpu_reserve }}
              kube_mem_reserve: {{ node.reservations.kube_mem_reserve }}
              management_ipv4: {{ node.management_ip_address }}
              is_master: {{ node.is_master_server }}
              is_control_plane_node: false
            {% endif %}
            {% endfor %}

        master_server:

    nodes_to_remove:
      # Example: (you need to define your own hosts)
      #hosts:
      #  tfplenumsensor1.lan:
      #  tfplenumserver2.lan:
      #  tfplenumserver1.lan:
      {% if template_ctx.remove_node %}
      hosts:
        {{template_ctx.remove_node}}
      {% endif %}

...
