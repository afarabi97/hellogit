"""
Main module that controls the REST calls for the portal page.
"""


from app.common import cursor_to_json_response
from app.middleware import operator_required
from app.service.portal_service import get_portal_links
from app.utils.db_mngs import conn_mng
from bson import ObjectId
from flask import Response, request
from flask_restx import Namespace, Resource

PORTAL_NS = Namespace("portal", path="/api/portal", description="Portal related operations.")

@PORTAL_NS.route('/links')
class PortalLinks(Resource):
    def get(self) -> Response:
        """
        Gets the portal links that were generated by the a fabric cron job.

        :return:
        """
        return get_portal_links()


def get_user_links():
    user_links = conn_mng.mongo_user_links.find({})
    return cursor_to_json_response(user_links, fields = ['name', 'url', 'description'], sort_field = 'name')

@PORTAL_NS.route('/user/links')
class UserLinks(Resource):
    def get(self) -> Response:
        """
        Send all links in mongo_user_links.
        :return: flask.Response containing all link data.
        """
        return get_user_links()

    @operator_required
    def post(self) -> Response:
        """
        Add a new link to mongo_user_links.
        :return: flask.Response containing all user link data, including the new
        one.
        """
        link_data = request.get_json()
        matches = conn_mng.mongo_user_links.find({'name': link_data['name']}).count()
        matches += conn_mng.mongo_user_links.find({'url': link_data['url']}).count()
        if matches == 0:
            conn_mng.mongo_user_links.insert_one(link_data)
        return get_user_links()

@PORTAL_NS.route('/user/links/<link_id>')
class DelUserLinks(Resource):
    @operator_required
    def delete(self, link_id: str) -> Response:
        """
        Remove a user link from mong_user_links.
        :param link_id: String with the '_id' value of the link to be removed.
        :return: flask.Response containing all user link data, with the specified
        link removed.
        """
        conn_mng.mongo_user_links.delete_one({'_id': ObjectId(link_id)})
        return get_user_links()
