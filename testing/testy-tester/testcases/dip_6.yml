---
redfish:
  user: root
  password: <SET ENV VAR $REDFISH_PASSWORD>
  servers:
    - 172.16.22.46
    - 172.16.22.45
  sensors:
    - 172.16.22.44
    - 172.16.22.43
    - 172.16.22.42
    - 172.16.22.41

host_configuration:
  image_folder_path: /root/Images/rhel
  install_type: baremetal
  esxi:
    ip_address: "172.16.33.20"

kit:
  #remote_sensor_portgroup: "73 Portgroup"
  #remote_sensor_network: "172.16.73.0"

  kickstart_configuration:
      netmask: "255.255.255.0"
      # Gateway will probably be different on a per kit basis (depends on the vlan)
      gateway: "172.16.33.1"
      dhcp_range: "172.16.33.192"
      # Note root_password is specified under VM_settings.

  kit_configuration:
      # The branch we want to pull from.
      branch_name: devel
      source_repo: labrepo
      # Kubernetes cidr will probably be different on a per kit basis
      kubernetes_cidr: "172.16.33.112"
      home_nets:
          - "172.16.33.0/24"

      # This is optional - you can fill it in if you need to
      external_nets:

  VMs:
    # Note: You should not have more than one of these
    Controller:
      type: "controller" # Can be controller, sensor, or server
      vm_guestos: RHEL_7_64
      #vm_to_clone: "NVMEe Test Template"
      vm_to_clone: redhat
      domain: 'lan'
      gateway: "172.16.33.1"
      dns:
        - "172.16.82.1"
        - "8.8.8.8"
      networking:
        std_portgroup_name: "VM Network"
        nics:
          ens192:
            type: "manual" # This can be auto, manual, or link-local
            ip_address: "172.16.33.241"
            subnet_mask: "255.255.255.0"
            start_connected: True
            management_interface: True
            monitoring_interface: False
            mac_auto_generated: True
            mac_address: "" # This is ignored if mac_auto_generated is true
            dv_portgroup_name: "Management"
            std_portgroup_name:
          ens224:
            type: "link-local" # This can be auto, manual, or link-local
            ip_address: "169.254.251.119"
            subnet_mask: "255.255.0.0"
            start_connected: True
            management_interface: False
            monitoring_interface: True
            mac_auto_generated: True
            mac_address: "" # This is ignored if mac_auto_generated is true
            dv_portgroup_name: "Monitoring"
            std_portgroup_name:
      cpu_spec:
        sockets: 4
        cores_per_socket: 1
        hot_add_enabled: False
        hot_remove_enabled: False
      memory_spec:
        size: 8 # This value is in GiB
        hot_add_enabled: False
      disks:
        boot: 30 # Name of disk followed by capacity in GiBs
      iso_file: "rhel-server-7.4-x86_64-dvd.iso"
      boot_order: # Valid options are CDROM, DISK, and ETHERNET
        - "CDROM" # CDROM will be ignored if iso_file is None
        - "DISK"
        - "ETHERNET"

  metal:
    server1:
      oob_ip: "" # Out of band management IP for the system (Idrac, HiLo, IPMI
      type: "master_server" # Can be controller, sensor, or server
      domain: 'lan'
      gateway: "172.16.33.1"
      dns:
        - "172.16.33.1"
      networking:
        nics:
          ens192:
            type: "manual" # This can be auto, manual, or link-local
            ip_address: "172.16.33.5"
            subnet_mask: "255.255.255.0"
            start_connected: True
            management_interface: True
            monitoring_interface: False
            mac_auto_generated: False
            mac_address: "" # Will be pulled via redfish api
      boot_drive_name: "sda"
      es_drives:
        - sdb
      catalog:
        moloch-viewer:
          node_hostname: "server"
          user: "assessor"
          pass: "password"
          deployment_name: "server-moloch-viewer"
        logstash:
          node_hostname: "server"
          kafka_clusters: ["sensor1-kafka.default.svc.cluster.local:9092","sensor2-kafka.default.svc.cluster.local:9092","sensor3-kafka.default.svc.cluster.local:9092","sensor4-kafka.default.svc.cluster.local:9092"]
          replicas: 4
          heap_size: 12
          deployment_name: "server-logstash"

    server2:
      oob_ip: "" # Out of band management IP for the system (Idrac, HiLo, IPMI
      type: "server" # Can be controller, sensor, or server
      domain: 'lan'
      gateway: "172.16.33.1"
      dns:
        - "172.16.33.1"
      networking:
        nics:
          ens192:
            type: "manual" # This can be auto, manual, or link-local
            ip_address: "172.16.33.6"
            subnet_mask: "255.255.255.0"
            start_connected: True
            management_interface: True
            monitoring_interface: False
            mac_auto_generated: False
            mac_address: "" # Will be pulled via redfish api
      boot_drive_name: "sda"
      es_drives:
        - sdb

    sensor1:
      oob_ip: "" # Out of band management IP for the system (Idrac, HiLo, IPMI
      type: "sensor" # Can be controller, sensor, or server
      domain: 'lan'
      gateway: "172.16.33.1"
      dns:
        - "172.16.33.1"
      networking:
        nics:
          em1:
            type: "manual" # This can be auto, manual, or link-local
            ip_address: "172.16.33.7"
            subnet_mask: "255.255.255.0"
            start_connected: True
            management_interface: True
            monitoring_interface: False
            mac_auto_generated: False
            mac_address: "" # Will be pulled via redfish api
          p2p1:
            type: "manual" # This can be auto, manual, or link-local
            ip_address:
            start_connected: True
            management_interface: False
            monitoring_interface: True
            mac_auto_generated: False
            mac_address: "" # Will be pulled via redfish api
      boot_drive_name: "sda"
      pcap_drives:
        - sdb
      catalog:
        suricata:
          affinity_hostname: "sensor1"
          cpu_request: "1000"
          deployment_name: "sensor1-suricata"
          external_net: ["any"]
          home_net: ["any"]
          interfaces:
            - "p2p1"
          pcapEnabled: true
          node_hostname: "sensor1"
        moloch-capture:
          cpu_request: "1000"
          pcapWriteMethod: "simple"
          affinity_hostname: "sensor1"
          node_hostname: "sensor1"
          bpf: ""
          dontSaveBPFs: ""
          freespaceG: "25%"
          maxFileSizeG: 25
          magicMode: "basic"
          interfaces:
            - "p2p1"
          deployment_name: "sensor1-moloch"
        zeek:
          affinity_hostname: "sensor1"
          cpu_request: "1000"
          deployment_name: "sensor1-zeek"
          home_net: ["any"]
          interfaces:
            - "p2p1"
          zeek_workers: 8
          node_hostname: "sensor1"
        kafka:
          affinity_hostname: "sensor1"
          deployment_name: "sensor1-kafka"
          log_retention_hours: "24"
          node_hostname: "sensor1"

    sensor2:
      oob_ip: "" # Out of band management IP for the system (Idrac, HiLo, IPMI
      type: "sensor" # Can be controller, sensor, or server
      domain: 'lan'
      gateway: "172.16.33.1"
      dns:
        - "172.16.33.1"
      networking:
        nics:
          em1:
            type: "manual" # This can be auto, manual, or link-local
            ip_address: "172.16.33.8"
            subnet_mask: "255.255.255.0"
            start_connected: True
            management_interface: True
            monitoring_interface: False
            mac_auto_generated: False
            mac_address: "" # Will be pulled via redfish api
          p2p1:
            type: "manual" # This can be auto, manual, or link-local
            ip_address:
            start_connected: True
            management_interface: False
            monitoring_interface: True
            mac_auto_generated: False
            mac_address: "" # Will be pulled via redfish api
      boot_drive_name: "sda"
      pcap_drives:
        - sdb
      catalog:
        suricata:
          affinity_hostname: "sensor2"
          cpu_request: "1000"
          deployment_name: "sensor2-suricata"
          external_net: ["any"]
          home_net: ["any"]
          interfaces:
            - "p2p1"
          pcapEnabled: true
          node_hostname: "sensor2"
        moloch-capture:
          cpu_request: "1000"
          pcapWriteMethod: "simple"
          affinity_hostname: "sensor2"
          node_hostname: "sensor2"
          bpf: ""
          dontSaveBPFs: ""
          freespaceG: "25%"
          maxFileSizeG: 25
          magicMode: "basic"
          interfaces:
            - "p2p1"
          deployment_name: "sensor2-moloch"
        zeek:
          affinity_hostname: "sensor2"
          cpu_request: "1000"
          deployment_name: "sensor2-zeek"
          home_net: ["any"]
          interfaces:
            - "p2p1"
          zeek_workers: 8
          node_hostname: "sensor2"
        kafka:
          affinity_hostname: "sensor2"
          deployment_name: "sensor2-kafka"
          log_retention_hours: "24"
          node_hostname: "sensor2"

    sensor3:
      oob_ip: "" # Out of band management IP for the system (Idrac, HiLo, IPMI
      type: "sensor" # Can be controller, sensor, or server
      domain: 'lan'
      gateway: "172.16.33.1"
      dns:
        - "172.16.33.1"
      networking:
        nics:
          em1:
            type: "manual" # This can be auto, manual, or link-local
            ip_address: "172.16.33.9"
            subnet_mask: "255.255.255.0"
            start_connected: True
            management_interface: True
            monitoring_interface: False
            mac_auto_generated: False
            mac_address: "" # Will be pulled via redfish api
          p2p1:
            type: "manual" # This can be auto, manual, or link-local
            ip_address:
            start_connected: True
            management_interface: False
            monitoring_interface: True
            mac_auto_generated: False
            mac_address: "" # Will be pulled via redfish api
      boot_drive_name: "sda"
      pcap_drives:
        - sdb
      catalog:
        suricata:
          affinity_hostname: "sensor3"
          cpu_request: "1000"
          deployment_name: "sensor3-suricata"
          external_net: ["any"]
          home_net: ["any"]
          interfaces:
            - "p2p1"
          pcapEnabled: true
          node_hostname: "sensor3"
        moloch-capture:
          cpu_request: "1000"
          pcapWriteMethod: "simple"
          affinity_hostname: "sensor3"
          node_hostname: "sensor3"
          bpf: ""
          dontSaveBPFs: ""
          freespaceG: "25%"
          maxFileSizeG: 25
          magicMode: "basic"
          interfaces:
            - "p2p1"
          deployment_name: "sensor3-moloch"
        zeek:
          affinity_hostname: "sensor3"
          cpu_request: "1000"
          deployment_name: "sensor3-zeek"
          home_net: ["any"]
          interfaces:
            - "p2p1"
          zeek_workers: 8
          node_hostname: "sensor3"
        kafka:
          affinity_hostname: "sensor3"
          deployment_name: "sensor3-kafka"
          log_retention_hours: "24"
          node_hostname: "sensor3"

    sensor4:
      oob_ip: "" # Out of band management IP for the system (Idrac, HiLo, IPMI
      type: "sensor" # Can be controller, sensor, or server
      domain: 'lan'
      gateway: "172.16.33.1"
      dns:
        - "172.16.33.1"
      networking:
        nics:
          em1:
            type: "manual" # This can be auto, manual, or link-local
            ip_address: "172.16.33.10"
            subnet_mask: "255.255.255.0"
            start_connected: True
            management_interface: True
            monitoring_interface: False
            mac_auto_generated: False
            mac_address: "" # Will be pulled via redfish api
          p2p1:
            type: "manual" # This can be auto, manual, or link-local
            ip_address:
            start_connected: True
            management_interface: False
            monitoring_interface: True
            mac_auto_generated: False
            mac_address: "" # Will be pulled via redfish api
      boot_drive_name: "sda"
      pcap_drives:
        - sdb
      catalog:
        suricata:
          affinity_hostname: "sensor4"
          cpu_request: "1000"
          deployment_name: "sensor4-suricata"
          external_net: ["any"]
          home_net: ["any"]
          interfaces:
            - "p2p1"
          pcapEnabled: true
          node_hostname: "sensor4"
        moloch-capture:
          cpu_request: "1000"
          pcapWriteMethod: "simple"
          affinity_hostname: "sensor4"
          node_hostname: "sensor4"
          bpf: ""
          dontSaveBPFs: ""
          freespaceG: "25%"
          maxFileSizeG: 25
          magicMode: "basic"
          interfaces:
            - "p2p1"
          deployment_name: "sensor4-moloch"
        zeek:
          affinity_hostname: "sensor4"
          cpu_request: "1000"
          deployment_name: "sensor4-zeek"
          home_net: ["any"]
          interfaces:
            - "p2p1"
          zeek_workers: 8
          node_hostname: "sensor4"
        kafka:
          affinity_hostname: "sensor4"
          deployment_name: "sensor4-kafka"
          log_retention_hours: "24"
          node_hostname: "sensor4"
