---

- set_fact:
    app_deployed: false
    releases: ""

- name: check if bro is installed
  shell: helm list bro --output json
  register: app_installed
  changed_when: app_installed.rc != 0

- name: update installed variable
  set_fact:
    releases: "{{ (app_installed.stdout | from_json).Releases }}"
  when:
    - "'Releases' in app_installed.stdout"

- name: update installed variable
  set_fact:
    app_deployed: true
  when:
    - app_installed is defined
    - releases is defined and releases != ""
    - "'DEPLOYED' in item.Status"
  with_items: "{{ releases }}"

- name: Test | Check Bro Helm Deployed
  assert:
    that: "'DEPLOYED' in item.Status"
    msg: "Failed to determine if bro is installed"
  when: releases is defined and releases != ""
  with_items:
    - "{{ releases }}"

- block:
  - set_fact:
      cmd: !unsafe kubectl get pods -o go-template --template '{{range .items}}{{.metadata.name}}{{"\n"}}{{end}}'

  - name: get bro pods
    shell: |
      {{ cmd }} | grep 'bro-'
    register: get_pods
    changed_when: get_pods.failed

  - name: Check Bro Indicies
    import_role:
      name: common
      tasks_from: check_indices
    vars:
      app_name: "bro"
      index_regex: "^logstash-bro.*"

  - name: Check Bro HTTP Result
    uri:
      url: "{{ elastic_uri }}/logstash-bro-*/_search?q=method:GET+AND+@timestamp:[now-15m+TO+now]"
      return_content: yes
    register: results_bh
    until: results_bh.json.hits.total != 0
    retries: 60
    delay: 5
    ignore_errors: yes

  - name: Test | Check Bro HTTP Results
    assert:
      that: results_bh.json.hits.total != 0
      msg: "Failed verifying Elasticsearch received HTTP logs from Bro"

  - name: Check Bro DNS Result
    uri:
      url: "{{ elastic_uri }}/logstash-bro-*/_search?q=event_type:bro_dns+AND+@timestamp:[now-15m+TO+now]"
      return_content: yes
    register: results_bd
    until: results_bd.json.hits.total != 0
    retries: 60
    delay: 5
    ignore_errors: yes

  - name: Test | Check Bro DNS Results
    assert:
      that: results_bd.json.hits.total != 0
      msg: "Failed verifying Elasticsearch received DNS logs from Bro"

  - name: Check Bro SMB Result
    uri:
      url: "{{ elastic_uri }}/logstash-bro-*/_search?q=event_type:bro_smb_mapping+AND+@timestamp:[now-15m+TO+now]"
      return_content: yes
    register: results_bs
    until: results_bs.json.hits.total != 0
    retries: 60
    delay: 5
    ignore_errors: yes

  - name: Test | Check Bro SMB Results
    assert:
      that: results_bs.json.hits.total != 0
      msg: "Failed verifying Elasticsearch received SMB logs from Bro"
  when: app_deployed|bool

...
