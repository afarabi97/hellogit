# DISA-STIG-RHEL-07-030450
- name: "Search {{ audit_directory }} for other DAC audit rules"
  find:
    paths: "{{ audit_directory }}"
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fsetxattr

- name: "If existing DAC ruleset not found, use {{ audit_directory }}/privileged.rules as the recipient for the rule"
  set_fact:
    all_files:
    - "{{ audit_directory }}/privileged.rules"
  when:
  - find_fsetxattr.matched is defined and find_fsetxattr.matched == 0

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fsetxattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fsetxattr.matched is defined and find_fsetxattr.matched > 0

- name: "Inserts/replaces the fsetxattr rule in {{ audit_directory }} (x86)"
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true

- name: "Inserts/replaces the fsetxattr rule in {{ audit_directory }} (x86_64)"
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
