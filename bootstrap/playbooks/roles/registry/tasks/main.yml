#######################################################
###########  Install Docker Distribution ##############
#######################################################
---

- name: Install Docker Dist
  dnf:
    name: docker-distribution
    state: installed

- name: docker-dist config template
  template:
    backup: yes
    src: config.yml.j2
    dest: "{{ registry_config }}"
    owner: root
    group: root
    mode: 0644
  register: docker_dist_config_result
  tags: pull-docker-images

- name: Enable docker distribution service
  systemd:
    name: docker-distribution
    enabled: yes
    state: started
    daemon_reload: yes
  tags: pull-docker-images

- name: Restart docker-dist # noqa 503
  service:
    name: docker-distribution
    state: restarted
    enabled: yes
  when: docker_dist_config_result.changed
  tags: pull-docker-images

- name: Install Docker
  shell: |
    dnf install -y docker-ce --nobest
  register: results
  changed_when: results.rc == 0
  args:
    warn: false

- name: Create directory docker directory
  file:
    path: /etc/docker
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Create Docker Certs Dir
  file:
    path: "/etc/docker/certs.d/{{ nexus_url }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  when: labrepo_check
  tags: pull-docker-images

- name: Get Nexus Cert
  get_url:
    url: "{{ misc_server }}/nexus.sil.lab.crt"
    dest: "/etc/docker/certs.d/{{ nexus_url }}.crt"
  when: labrepo_check
  tags: pull-docker-images

- name: docker daemon conf
  template:
    backup: yes
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: 0644
  register: docker_config_result
  tags: pull-docker-images

- name: Add docker to trusted zone
  firewalld:
    interface: docker0
    zone: trusted
    state: enabled
    permanent: yes
    immediate: yes

- name: Add masquerade to trusted zone
  firewalld:
    zone: trusted
    masquerade: yes
    state: enabled
    permanent: yes
    immediate: yes

- name: Restart Docker
  systemd:
    name: docker
    enabled: yes
    state: restarted
  tags: pull-docker-images

- name: Initialize Image Lists Facts
  set_fact:
    image_list: []
    local_image_list: []
  tags: pull-docker-images
- debug:
    msg: "{{ kube_images }}"
- name: Set Image List
  set_fact:
    image_list: "{{ image_list }} + ['{{ item.image }}']"
  with_items:
    - "{{ kube_images }}"
  when: (system_name == "GIP" and item.for_gip) or
        (system_name == "DIP" and item.for_dip) or
        (system_name == "MIP")
  tags: pull-docker-images

- name: Set local image List
  set_fact:
    local_image_list: "{{ local_image_list }} + ['{{ nexus_url }}/{{ item[item.find('/')+1:] }}']"
  with_items: "{{ image_list }}"
  tags: pull-docker-images

- name: Overwrite Image List
  set_fact:
    image_list: "{{ local_image_list }}"
  when: labrepo_check
  tags: pull-docker-images

- name: Download docker container images from docker hub # noqa 301
  command: "docker pull {{ item }}"
  with_items:
    - "{{ image_list }}"
  async: 3000
  poll: 0
  register: dockerio_pull_results
  tags: pull-docker-images

- name: Waiting for docker hub images to download
  async_status:
    jid: "{{ async_result_item.ansible_job_id }}"
  loop: "{{ dockerio_pull_results.results }}"
  loop_control:
    loop_var: "async_result_item"
  register: job_results
  until: job_results.finished is defined and job_results.finished
  retries: 240
  tags: pull-docker-images

- name: Tag local images for upload to registry
  command: "docker tag {{ item }} localhost:{{ firewall_port }}/{{ item[item.find('/')+1:] }}"
  register: docker_tag_results
  changed_when: docker_tag_results.rc == 0
  with_items:
    - "{{ image_list }}"
  tags: pull-docker-images

- name: Upload local images to registry # noqa 301
  command: "docker push localhost:{{ firewall_port }}/{{ item[item.find('/')+1:] }}"
  register: docker_push_results
  with_items:
    - "{{ image_list }}"
  tags: pull-docker-images
...
