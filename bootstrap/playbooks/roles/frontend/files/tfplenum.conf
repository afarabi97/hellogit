<VirtualHost *:80>
    ServerName      tfplenum
    ServerAlias     *
    DocumentRoot    /var/www/html

    ProxyPreserveHost On
    ProxyTimeout 360

    ProxyPass /chartmuseum/ http://127.0.0.1:5002/
    ProxyPassReverse /chartmuseum/ http://127.0.0.1:5002/

    ProxyPass /api/ http://127.0.0.1:5001/api/
    ProxyPassReverse /api/ http://127.0.0.1:5001/api/

    ProxyPass /swaggerui/ http://127.0.0.1:5001/swaggerui/
    ProxyPassReverse /swaggerui/ http://127.0.0.1:5001/swaggerui/

    ProxyPass /swagger.json https://127.0.0.1:5001/swagger.json
    ProxyPassReverse /swagger.json https://127.0.0.1:5001/swagger.json

    ProxyPass /socket.io/ ws://127.0.0.1:5001/socket.io/
    ProxyPassReverse /socket.io/ ws://127.0.0.1:5001/socket.io/

    ProxyPass        /v2 http://127.0.0.1:5000/v2
    ProxyPassReverse /v2 http://127.0.0.1:5000/v2

    RewriteEngine On
    #Uncomment when we want to debug rewrite Engine rules.
    #LogLevel alert rewrite:trace5

    # If an existing asset or directory is requested go to it as it is
    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d [OR]
    RewriteCond %{REQUEST_URI} "^/api/" [OR]
    RewriteCond %{REQUEST_URI} "^/socket.io/" [OR]
    RewriteCond %{REQUEST_URI} "^/swaggerui/" [OR]
    RewriteCond %{REQUEST_URI} "^/chartmuseum/" [OR]
    RewriteCond %{REQUEST_URI} "^/swagger.json" [OR]
    RewriteCond %{REQUEST_URI} "^/v2/"
    RewriteRule ^ - [L]
</VirtualHost>

Listen 443
<VirtualHost *:443>
    ServerName      tfplenum
    ServerAlias     *
    DocumentRoot    /var/www/html/frontend

    ProxyTimeout 180

    <Location /api>
      # This is needed to return a 401 if no Shibboleth session is present instead of 302 redirect
      Require all denied
    </Location>

    <Location />
      <If "-T req('Authorization') || %{REQUEST_URI} =~ m#^/auth.*$# || %{REQUEST_URI} =~ m#^/v2/.*$# || %{REQUEST_URI} =~ m#^/chartmuseum.*$#">
        Require all granted
        AuthType None
      </If>
      <ElseIf "%{REQUEST_URI} =~ m#^/api.*$# || %{REQUEST_URI} =~ m#^/socket.io/.*$#">
        # This is needed to return a 401 if no Shibboleth session is present instead of 302 redirect
        Require shibboleth
        AuthType Shibboleth
        ShibRequestSetting requiresession off
        ShibUseHeaders on
      </ElseIf>
      <Else>
        Require valid-user
        AuthType Shibboleth
        ShibRequestSetting requiresession On
        ShibUseHeaders on
      </Else>
    </Location>

    #Header set X-Frame-Options env('HTTP_SHIB_SESSION_ID')

    ProxyPreserveHost On

    ProxyPass /chartmuseum/ http://127.0.0.1:5002/
    ProxyPassReverse /chartmuseum/ http://127.0.0.1:5002/

    ProxyPass /api/ http://127.0.0.1:5001/api/
    ProxyPassReverse /api/ http://127.0.0.1:5001/api/

    ProxyPass /socket.io/ ws://127.0.0.1:5001/socket.io/
    ProxyPassReverse /socket.io/ ws://127.0.0.1:5001/socket.io/

    ProxyPass /swaggerui/ http://127.0.0.1:5001/swaggerui/
    ProxyPassReverse /swaggerui/ http://127.0.0.1:5001/swaggerui/

    ProxyPass /swagger.json http://127.0.0.1:5001/swagger.json
    ProxyPassReverse /swagger.json http://127.0.0.1:5001/swagger.json

    ProxyPass        /v2 http://127.0.0.1:5000/v2
    ProxyPassReverse /v2 http://127.0.0.1:5000/v2

    ProxyPass        /auth http://127.0.0.1:8080/auth
    ProxyPassReverse /auth http://127.0.0.1:8080/auth

    # Deny access to the Master realm through apache.  Only localhost
    <Location /auth/admin/master/>
        Order Allow,Deny
        Require all denied
    </Location>
    <Location /auth/realms/master/>
        Order Allow,Deny
        Require all denied
    </Location>

    SSLCACertificateFile /etc/httpd/conf.d/dod_root.pem
    <Location /auth>
        RequestHeader set X-Forwarded-Proto https
        Header always unset X-Frame-Options
        Header unset X-Frame-Options
        Header set X-Frame-Options "SAMEORIGIN"
        <If "%{QUERY_STRING} =~ m#pki=true#">
           SSLVerifyClient require
           SSLVerifyDepth 3
           #RequestHeader set SSL_CLIENT_CERT_CHAIN_0 "%{{CERT_CHAIN}}s"
           RequestHeader set SSL_CLIENT_CERT "%{SSL_CLIENT_CERT}s"
        </If>
        # For some reason Cortex sends an "Accept" header with the value of "code"
        # Keycloak doesn't like this and  throws a 400 error.
        # This strips the header. Issue submitted to Cortex Github (https://github.com/TheHive-Project/Cortex/issues/264)
        <If "req('Accept') == 'code' && %{REQUEST_URI} =~ m#^/auth/.*/openid-connect/token$#">
            RequestHeader unset Accept
        </If>
    </Location>

    RewriteEngine On
    #Uncomment when we want to debug rewrite Engine rules.
    #LogLevel alert rewrite:trace5

    # If an existing asset or directory is requested go to it as it is
    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d [OR]
    RewriteCond %{REQUEST_URI} "^/api/" [OR]
    RewriteCond %{REQUEST_URI} "^/socket.io/" [OR]
    RewriteCond %{REQUEST_URI} "^/swaggerui/" [OR]
    RewriteCond %{REQUEST_URI} "^/chartmuseum/" [OR]
    RewriteCond %{REQUEST_URI} "^/swagger.json" [OR]
    RewriteCond %{REQUEST_URI} "^/v2/" [OR]
    RewriteCond %{REQUEST_URI} "^/auth"
    RewriteRule ^ - [L]

    # If the requested resource doesn't exist, use index.html
    RewriteRule ^ /index.html

    #Begin SSL configuration
    ErrorLog logs/ssl_error_log
    TransferLog logs/ssl_access_log
    LogLevel warn

    #   SSL Engine Switch:
    #   Enable/Disable SSL for this virtual host.
    SSLEngine on

    SSLCertificateFile /etc/ssl/certs/apache-selfsigned.crt
    SSLCertificateKeyFile /etc/ssl/private/apache-selfsigned.key
    # Begin copied text
    # from https://cipherli.st/
    # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_Apache2.html
    SSLCipherSuite EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH
    SSLProtocol -all +TLSv1.2
    SSLHonorCipherOrder On
    # Disable preloading HSTS for now.  You can use the commented out header line that includes
    # the "preload" directive if you understand the implications.
    #Header always set Strict-Transport-Security "max-age=63072000; includeSubdomains; preload"
    Header always set Strict-Transport-Security "max-age=63072000; includeSubdomains"
    Header always set X-Frame-Options DENY
    Header always set X-Content-Type-Options nosniff
    # Requires Apache >= 2.4
    #SSLCompression off
    #SSLUseStapling on
    #SSLStaplingCache "shmcb:logs/stapling-cache(150000)"
    # Requires Apache >= 2.4.11
    # SSLSessionTickets Off

</VirtualHost>
