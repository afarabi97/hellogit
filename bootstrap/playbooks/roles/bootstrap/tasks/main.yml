---
- import_role:
    name: cleanup
    tasks_from: cleanup

- name: Set_fact bootstrap and git
  set_fact:
    BOOTSTRAP: "{{ lookup('env','BOOTSTRAP') }}"
    GIT_USERNAME: "{{ lookup('env','GIT_USERNAME') }}"
    GIT_PASSWORD: "{{ lookup('env','GIT_PASSWORD') }}"

- name: Execute RHEL repo role.
  include_role:
    name: rhel_repo
  when: "ansible_distribution == 'RedHat'"

- import_tasks: additional_repos.yml

- name: "Install required packages"
  dnf:
    name: "{{ package_list }}"
    state: present

- name: Execute clone repo role.
  include_role:
    name: clonerepo

- name: Add local repo
  template:
    src: templates/offline-tfplenum.repo
    dest: "/etc/yum.repos.d/offline.repo"
  tags:
    - clonerepo
    - registry

- name: Execute docker registry role.
  include_role:
    name: registry

- import_tasks: preload_rules.yml
- import_tasks: preload_scripts.yml

- import_tasks: helm.yml
  tags: helm

# TODO This was done for MIP. consider removal
#- import_tasks: allow_shibd.yml

- name: Install VMWare Community
  shell:  |
    ansible-galaxy collection install {{ tfplenumoffline_dir }}/community-vmware-{{ community_vmware_module_version }}.tar.gz
  register: collection_results
  changed_when: collection_results.rc == 0

- name: Install Utils Community
  shell:  |
    ansible-galaxy collection install {{ tfplenumoffline_dir }}/ansible-utils-{{ community_utils_module_version }}.tar.gz
  register: collection_results
  changed_when: collection_results.rc == 0

- import_role:
    name: cleanup

- import_tasks: offline_repos.yml
- import_tasks: download_operators.yml

- name: Run tasks
  block:
    - import_tasks: max_log_size.yml
    - import_tasks: update_etc_hosts.yml
    - import_tasks: update_controller_interface.yml
      tags: setup_ctrl_interface
    - import_tasks: finish.yml
