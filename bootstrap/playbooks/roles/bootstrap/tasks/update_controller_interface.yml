---

- name: Install net-tools
  dnf:
    name:
      - net-tools
      - network-scripts
    state: present

- name: Clear out network file
  copy:
    content: ""
    dest: /etc/sysconfig/network
    force: yes

- name: Restart Network
  systemd:
    name: "{{ item }}"
    state: restarted
  with_items:
    - network
    - NetworkManager

- name: Check if openvpn-server exists
  stat:
    path: /etc/systemd/system/multi-user.target.wants/openvpn-server@server.service
  register: existing_ovpn_server

- name: Stop openvpn server
  systemd:
    name: openvpn-server@server.service
    state: stopped
  ignore_errors: yes
  when: existing_ovpn_server.stat.exists

- name: Get Gateway Ip
  shell: |
    set -o pipefail
    ip route | grep default | cut -d ' ' -f3 | head -n1
  register: gateway_ip
  changed_when: False

- name: Set Gateway Var
  set_fact:
    gateway_ip_address: "{{ gateway_ip.stdout }}"

- name: Set management interface var
  set_fact:
     management_interface: "{{ ansible_default_ipv4.interface }}"

- debug:
    msg: "master server interface: {{ management_interface }}"

- block:
  - name: Create bridge interface
    template:
      src: "templates/ifcfg-br0.j2"
      dest: "/etc/sysconfig/network-scripts/ifcfg-br0"
    register: br0_iface

  - name: Create management interface to bridge
    template:
      src: "templates/ifcfg-interface.j2"
      dest: "/etc/sysconfig/network-scripts/ifcfg-{{ management_interface }}"
    register: mng_iface

  - name: Restart Network
    systemd:
      name: "{{ item }}"
      state: restarted
    with_items:
      - network
      - NetworkManager
    when: br0_iface.changed or mng_iface.changed

  - name: Create firewalld rules
    shell:  |
      firewall-cmd --permanent --direct --add-rule {{ item }}
      firewall-cmd --direct --add-rule {{ item }}
    register: results
    changed_when: results.rc == 0
    with_items:
      - "ipv4 filter FORWARD 0 -i br0 -j ACCEPT"
      - "ipv4 filter INPUT 0 -i tap0 -j ACCEPT"
  when:
    - management_interface != "br0"
    - system_name == 'DIP'

- name: Start openvpn server
  systemd:
    name: openvpn-server
    state: started
  ignore_errors: yes
  when: existing_ovpn_server.stat.exists

- name: Enable modules
  modprobe:
    name: br_netfilter
    state: present

- name: Create module file
  file:
    path: /etc/modules-load.d/bridge.conf
    state: touch
    owner: root
    group: root
    mode: 0644

- name: Add kernel module
  lineinfile:
    path: /etc/modules-load.d/bridge.conf
    line: br_netfilter

- name: Disable iptables bridge in kernel
  sysctl:
    name: "{{ item }}"
    value: '0'
    sysctl_set: yes
    state: present
    reload: yes
  with_items:
  - net.bridge.bridge-nf-call-ip6tables
  - net.bridge.bridge-nf-call-iptables
  - net.bridge.bridge-nf-call-arptables
